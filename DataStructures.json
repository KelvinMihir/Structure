[{
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3993,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct BinaryHeap&lt;Element, Value&gt; where Element : <Type usr=\"s:SH\">Hashable<\/Type>, Value : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 172
          }
        ],
        "key.bodylength" : 3754,
        "key.bodyoffset" : 237,
        "key.doc.column" : 15,
        "key.doc.comment" : "Implements a priority queue where minimum values have highest priority.",
        "key.doc.declaration" : "public struct BinaryHeap<Element, Value> where Element : Hashable, Value : Comparable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift\" line=\"9\" column=\"15\"><Name>BinaryHeap<\/Name><USR>s:14DataStructures10BinaryHeapV<\/USR><Declaration>public struct BinaryHeap&lt;Element, Value&gt; where Element : Hashable, Value : Comparable<\/Declaration><CommentParts><Abstract><Para>Implements a priority queue where minimum values have highest priority.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 9,
        "key.doc.name" : "BinaryHeap",
        "key.doc.type" : "Class",
        "key.doclength" : 76,
        "key.docoffset" : 96,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>BinaryHeap<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Value : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 3813,
        "key.name" : "BinaryHeap",
        "key.namelength" : 10,
        "key.nameoffset" : 186,
        "key.offset" : 179,
        "key.parsed_declaration" : "public struct BinaryHeap <Element: Hashable, Value: Comparable>",
        "key.parsed_scope.end" : 136,
        "key.parsed_scope.start" : 9,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Element : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 207
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Element<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Hashable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "Element",
            "key.namelength" : 7,
            "key.nameoffset" : 198,
            "key.offset" : 198,
            "key.parsed_declaration" : "public struct BinaryHeap <Element: Hashable, Value: Comparable>",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.typename" : "Element.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures10BinaryHeapV7Elementxmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Value : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 10,
                "key.offset" : 224
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Value<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Comparable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "Value",
            "key.namelength" : 5,
            "key.nameoffset" : 217,
            "key.offset" : 217,
            "key.parsed_declaration" : "public struct BinaryHeap <Element: Hashable, Value: Comparable>",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.typename" : "Value.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures10BinaryHeapV5Valueq_mfp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 246
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var storage: [<Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 283
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>storage<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "storage",
            "key.namelength" : 7,
            "key.nameoffset" : 295,
            "key.offset" : 291,
            "key.parsed_declaration" : "private var storage: [Element]",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[Element]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures10BinaryHeapV7storage33_09E98BAA6C26B7188E3D3E75C6E313E0LLSayxGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var lookup: [<Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type> : <Type usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 318
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>lookup<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param> : <ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/ref.generic_type_param>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "lookup",
            "key.namelength" : 6,
            "key.nameoffset" : 330,
            "key.offset" : 326,
            "key.parsed_declaration" : "private var lookup: [Element: Value]",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[Element : Value]",
            "key.typeusr" : "$SSDyxq_GD",
            "key.usr" : "s:14DataStructures10BinaryHeapV6lookup33_09E98BAA6C26B7188E3D3E75C6E313E0LLSDyxq_Gvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var indices: [<Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type> : <Type usr=\"s:Si\">Int<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 359
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>indices<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param> : <ref.struct usr=\"s:Si\">Int<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.name" : "indices",
            "key.namelength" : 7,
            "key.nameoffset" : 371,
            "key.offset" : 367,
            "key.parsed_declaration" : "private var indices: [Element: Int]",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[Element : Int]",
            "key.typeusr" : "$SSDyxSiGD",
            "key.usr" : "s:14DataStructures10BinaryHeapV7indices33_09E98BAA6C26B7188E3D3E75C6E313E0LLSDyxSiGvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - Initializers",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 403
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 467
              }
            ],
            "key.bodylength" : 69,
            "key.bodyoffset" : 483,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create an empty `BinaryHeap`.",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift\" line=\"20\" column=\"12\"><Name>init()<\/Name><USR>s:14DataStructures10BinaryHeapVACyxq_Gycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Create an empty <codeVoice>BinaryHeap<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 20,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 34,
            "key.docoffset" : 429,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 79,
            "key.name" : "init()",
            "key.namelength" : 7,
            "key.nameoffset" : 474,
            "key.offset" : 474,
            "key.parsed_declaration" : "public init ()",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 20,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures10BinaryHeapVyACyxq_Gqd__cSTRd__x_q_t7ElementRtd__lufc\">init(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (BinaryHeap<Element, Value>.Type) -> () -> BinaryHeap<Element, Value>",
            "key.typeusr" : "$S14DataStructures10BinaryHeapVyxq_GycD",
            "key.usr" : "s:14DataStructures10BinaryHeapVACyxq_Gycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init&lt;S&gt;(_ sequence: <Type usr=\"s:14DataStructures10BinaryHeapVyACyxq_Gqd__cSTRd__x_q_t7ElementRtd__lufc1SL_qd__mfp\">S<\/Type>) where S : <Type usr=\"s:ST\">Sequence<\/Type>, S.Element == (Element, Value)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 616
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 697,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a `BinaryHeap` with the given `sequence`.",
            "key.doc.declaration" : "public init<S>(_ sequence: S) where S : Sequence, S.Element == (Element, Value)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift\" line=\"27\" column=\"12\"><Name>init(_:)<\/Name><USR>s:14DataStructures10BinaryHeapVyACyxq_Gqd__cSTRd__x_q_t7ElementRtd__lufc<\/USR><Declaration>public init&lt;S&gt;(_ sequence: S) where S : Sequence, S.Element == (Element, Value)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>BinaryHeap<\/codeVoice> with the given <codeVoice>sequence<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 27,
            "key.doc.name" : "init(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 53,
            "key.docoffset" : 559,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:14DataStructures10BinaryHeapVyACyxq_Gqd__cSTRd__x_q_t7ElementRtd__lufc1SL_qd__mfp\"><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapVyACyxq_Gqd__cSTRd__x_q_t7ElementRtd__lufc1SL_qd__mfp\">S<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>S.Element == <tuple>(<tuple.element><tuple.element.type>Element<\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type>Value<\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.generic_type_requirement><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 170,
            "key.name" : "init(_:)",
            "key.namelength" : 24,
            "key.nameoffset" : 623,
            "key.offset" : 623,
            "key.parsed_declaration" : "public init <S> (_ sequence: S) where S: Sequence, S.Element == (Element,Value)",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 27,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures10BinaryHeapVACyxq_Gycfc\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>S<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "S",
                "key.namelength" : 1,
                "key.nameoffset" : 629,
                "key.offset" : 629,
                "key.parsed_declaration" : "public init <S> (_ sequence: S) where S: Sequence, S.Element == (Element,Value)",
                "key.parsed_scope.end" : 27,
                "key.parsed_scope.start" : 27,
                "key.typename" : "S.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures10BinaryHeapVyACyxq_Gqd__cSTRd__x_q_t7ElementRtd__lufc1SL_qd__mfp"
              }
            ],
            "key.typename" : "<Element, Value, S where Element : Hashable, Value : Comparable, S : Sequence, S.Element == (Element, Value)> (BinaryHeap<Element, Value>.Type) -> (S) -> BinaryHeap<Element, Value>",
            "key.typeusr" : "$Sy14DataStructures10BinaryHeapVyxq_Gqd__cSTRd__x_q_t7ElementRtd__luD",
            "key.usr" : "s:14DataStructures10BinaryHeapVyACyxq_Gqd__cSTRd__x_q_t7ElementRtd__lufc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 806
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func insert(_ element: <Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type>, _ value: <Type usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 928
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 921
              }
            ],
            "key.bodylength" : 179,
            "key.bodyoffset" : 987,
            "key.doc.column" : 26,
            "key.doc.comment" : "Insert element into `BinaryHeap` instance with associated value `value`.",
            "key.doc.declaration" : "public mutating func insert(_ element: Element, _ value: Value)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift\" line=\"35\" column=\"26\"><Name>insert(_:_:)<\/Name><USR>s:14DataStructures10BinaryHeapV6insertyyx_q_tF<\/USR><Declaration>public mutating func insert(_ element: Element, _ value: Value)<\/Declaration><CommentParts><Abstract><Para>Insert element into <codeVoice>BinaryHeap<\/codeVoice> instance with associated value <codeVoice>value<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 35,
            "key.doc.name" : "insert(_:_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 77,
            "key.docoffset" : 840,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>insert<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 230,
            "key.name" : "insert(_:_:)",
            "key.namelength" : 43,
            "key.nameoffset" : 942,
            "key.offset" : 937,
            "key.parsed_declaration" : "public mutating func insert (_ element: Element, _ value: Value)",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 35,
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (inout BinaryHeap<Element, Value>) -> (Element, Value) -> ()",
            "key.typeusr" : "$Syyx_q_tcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV6insertyyx_q_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func pop() -&gt; (<Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type>, <Type usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/Type>)?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1269
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1262
              }
            ],
            "key.bodylength" : 240,
            "key.bodyoffset" : 1312,
            "key.doc.column" : 26,
            "key.doc.comment" : "- Returns: Minimum value element of `BinaryHeap` instance or `nil` if empty.",
            "key.doc.declaration" : "public mutating func pop() -> (Element, Value)?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift\" line=\"43\" column=\"26\"><Name>pop()<\/Name><USR>s:14DataStructures10BinaryHeapV3popx_q_tSgyF<\/USR><Declaration>public mutating func pop() -&gt; (Element, Value)?<\/Declaration><CommentParts><ResultDiscussion><Para>Minimum value element of <codeVoice>BinaryHeap<\/codeVoice> instance or <codeVoice>nil<\/codeVoice> if empty.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 43,
            "key.doc.name" : "pop()",
            "key.doc.result_discussion" : [
              {
                "Para" : "Minimum value element of `BinaryHeap` instance or `nil` if empty."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 81,
            "key.docoffset" : 1177,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>pop<\/decl.name>() -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 275,
            "key.name" : "pop()",
            "key.namelength" : 6,
            "key.nameoffset" : 1283,
            "key.offset" : 1278,
            "key.parsed_declaration" : "public mutating func pop () -> (Element, Value)?",
            "key.parsed_scope.end" : 51,
            "key.parsed_scope.start" : 43,
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (inout BinaryHeap<Element, Value>) -> () -> (Element, Value)?",
            "key.typeusr" : "$Sx_q_tSgycD",
            "key.usr" : "s:14DataStructures10BinaryHeapV3popx_q_tSgyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal mutating func suggestDecrease(of element: <Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type>, to suggestion: <Type usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1682
              },
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 1673
              }
            ],
            "key.bodylength" : 115,
            "key.bodyoffset" : 1757,
            "key.doc.column" : 28,
            "key.doc.comment" : "Propose update of `element` to value `suggestion` (accept if `value(of: element)`\ndecreases).",
            "key.doc.declaration" : "internal mutating func suggestDecrease(of element: Element, to suggestion: Value)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift\" line=\"55\" column=\"28\"><Name>suggestDecrease(of:to:)<\/Name><USR>s:14DataStructures10BinaryHeapV15suggestDecrease2of2toyx_q_tF<\/USR><Declaration>internal mutating func suggestDecrease(of element: Element, to suggestion: Value)<\/Declaration><CommentParts><Abstract><Para>Propose update of <codeVoice>element<\/codeVoice> to value <codeVoice>suggestion<\/codeVoice> (accept if <codeVoice>value(of: element)<\/codeVoice> decreases).<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 55,
            "key.doc.name" : "suggestDecrease(of:to:)",
            "key.doc.type" : "Function",
            "key.doclength" : 106,
            "key.docoffset" : 1563,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>suggestDecrease<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>suggestion<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 182,
            "key.name" : "suggestDecrease(of:to:)",
            "key.namelength" : 59,
            "key.nameoffset" : 1696,
            "key.offset" : 1691,
            "key.parsed_declaration" : "internal mutating func suggestDecrease (of element: Element, to suggestion: Value)",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 55,
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (inout BinaryHeap<Element, Value>) -> (Element, Value) -> ()",
            "key.typeusr" : "$S2of2toyx_q_tcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV15suggestDecrease2of2toyx_q_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func lessAt(_ i: <Type usr=\"s:Si\">Int<\/Type>, than j: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1883
              }
            ],
            "key.bodylength" : 48,
            "key.bodyoffset" : 1936,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>lessAt<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>than<\/decl.var.parameter.argument_label> <decl.var.parameter.name>j<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 94,
            "key.name" : "lessAt(_:than:)",
            "key.namelength" : 30,
            "key.nameoffset" : 1896,
            "key.offset" : 1891,
            "key.parsed_declaration" : "private func lessAt (_ i: Int, than j: Int) -> Bool",
            "key.parsed_scope.end" : 63,
            "key.parsed_scope.start" : 61,
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (BinaryHeap<Element, Value>) -> (Int, Int) -> Bool",
            "key.typeusr" : "$S_4thanSbSi_SitcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV6lessAt33_09E98BAA6C26B7188E3D3E75C6E313E0LL_4thanSbSi_SitF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func value(of element: <Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type>) -&gt; <Type usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1995
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 2046,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>value<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 81,
            "key.name" : "value(of:)",
            "key.namelength" : 27,
            "key.nameoffset" : 2008,
            "key.offset" : 2003,
            "key.parsed_declaration" : "private func value (of element: Element) -> Value",
            "key.parsed_scope.end" : 67,
            "key.parsed_scope.start" : 65,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures10BinaryHeapV5value33_09E98BAA6C26B7188E3D3E75C6E313E0LL2atq_Si_tF\">value(at:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (BinaryHeap<Element, Value>) -> (Element) -> Value",
            "key.typeusr" : "$S2ofq_x_tcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV5value33_09E98BAA6C26B7188E3D3E75C6E313E0LL2ofq_x_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func value(at i: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2094
              }
            ],
            "key.bodylength" : 42,
            "key.bodyoffset" : 2135,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>value<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 76,
            "key.name" : "value(at:)",
            "key.namelength" : 17,
            "key.nameoffset" : 2107,
            "key.offset" : 2102,
            "key.parsed_declaration" : "private func value (at i: Int) -> Value",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 69,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures10BinaryHeapV5value33_09E98BAA6C26B7188E3D3E75C6E313E0LL2ofq_x_tF\">value(of:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (BinaryHeap<Element, Value>) -> (Int) -> Value",
            "key.typeusr" : "$S2atq_Si_tcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV5value33_09E98BAA6C26B7188E3D3E75C6E313E0LL2atq_Si_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private mutating func decreaseValue(of element: <Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type>, to value: <Type usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 2196
              },
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2188
              }
            ],
            "key.bodylength" : 92,
            "key.bodyoffset" : 2264,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decreaseValue<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 152,
            "key.name" : "decreaseValue(of:to:)",
            "key.namelength" : 52,
            "key.nameoffset" : 2210,
            "key.offset" : 2205,
            "key.parsed_declaration" : "private mutating func decreaseValue (of element: Element, to value: Value)",
            "key.parsed_scope.end" : 76,
            "key.parsed_scope.start" : 73,
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (inout BinaryHeap<Element, Value>) -> (Element, Value) -> ()",
            "key.typeusr" : "$S2of2toyx_q_tcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV13decreaseValue33_09E98BAA6C26B7188E3D3E75C6E313E0LL2of2toyx_q_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private mutating func updateIndex(of element: <Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type>, to i: <Type usr=\"s:Si\">Int<\/Type>?)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 2375
              },
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2367
              }
            ],
            "key.bodylength" : 34,
            "key.bodyoffset" : 2436,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updateIndex<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 87,
            "key.name" : "updateIndex(of:to:)",
            "key.namelength" : 45,
            "key.nameoffset" : 2389,
            "key.offset" : 2384,
            "key.parsed_declaration" : "private mutating func updateIndex (of element: Element, to i: Int?)",
            "key.parsed_scope.end" : 80,
            "key.parsed_scope.start" : 78,
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (inout BinaryHeap<Element, Value>) -> (Element, Int?) -> ()",
            "key.typeusr" : "$S2of2toyx_SiSgtcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV11updateIndex33_09E98BAA6C26B7188E3D3E75C6E313E0LL2of2toyx_SiSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private mutating func updateValue(of element: <Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type>, to value: <Type usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 2489
              },
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2481
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 2555,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updateValue<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV5Valueq_mfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 95,
            "key.name" : "updateValue(of:to:)",
            "key.namelength" : 50,
            "key.nameoffset" : 2503,
            "key.offset" : 2498,
            "key.parsed_declaration" : "private mutating func updateValue (of element: Element, to value: Value)",
            "key.parsed_scope.end" : 84,
            "key.parsed_scope.start" : 82,
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (inout BinaryHeap<Element, Value>) -> (Element, Value) -> ()",
            "key.typeusr" : "$S2of2toyx_q_tcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV11updateValue33_09E98BAA6C26B7188E3D3E75C6E313E0LL2of2toyx_q_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func index(of element: <Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2603
              }
            ],
            "key.bodylength" : 38,
            "key.bodyoffset" : 2652,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 80,
            "key.name" : "index(of:)",
            "key.namelength" : 27,
            "key.nameoffset" : 2616,
            "key.offset" : 2611,
            "key.parsed_declaration" : "private func index (of element: Element) -> Int",
            "key.parsed_scope.end" : 88,
            "key.parsed_scope.start" : 86,
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (BinaryHeap<Element, Value>) -> (Element) -> Int",
            "key.typeusr" : "$S2ofSix_tcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV5index33_09E98BAA6C26B7188E3D3E75C6E313E0LL2ofSix_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private mutating func removeLast() -&gt; <Type usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 2709
              },
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2701
              }
            ],
            "key.bodylength" : 114,
            "key.bodyoffset" : 2749,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>removeLast<\/decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures10BinaryHeapV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 146,
            "key.name" : "removeLast()",
            "key.namelength" : 13,
            "key.nameoffset" : 2723,
            "key.offset" : 2718,
            "key.parsed_declaration" : "private mutating func removeLast () -> Element",
            "key.parsed_scope.end" : 94,
            "key.parsed_scope.start" : 90,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let element: Element<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>element<\/decl.name>: <decl.var.type>Element<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 34,
                "key.name" : "element",
                "key.namelength" : 7,
                "key.nameoffset" : 2762,
                "key.offset" : 2758,
                "key.parsed_declaration" : "let element = storage.removeLast()",
                "key.parsed_scope.end" : 91,
                "key.parsed_scope.start" : 91,
                "key.typename" : "Element",
                "key.typeusr" : "$SxD",
                "key.usr" : "s:14DataStructures10BinaryHeapV10removeLast33_09E98BAA6C26B7188E3D3E75C6E313E0LLxyF7elementL_xvp"
              }
            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (inout BinaryHeap<Element, Value>) -> () -> Element",
            "key.typeusr" : "$SxycD",
            "key.usr" : "s:14DataStructures10BinaryHeapV10removeLast33_09E98BAA6C26B7188E3D3E75C6E313E0LLxyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private mutating func swapAt(_ i: <Type usr=\"s:Si\">Int<\/Type>, _ j: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 2882
              },
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2874
              }
            ],
            "key.bodylength" : 120,
            "key.bodyoffset" : 2925,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>swapAt<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>j<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 155,
            "key.name" : "swapAt(_:_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 2896,
            "key.offset" : 2891,
            "key.parsed_declaration" : "private mutating func swapAt (_ i: Int, _ j: Int)",
            "key.parsed_scope.end" : 100,
            "key.parsed_scope.start" : 96,
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (inout BinaryHeap<Element, Value>) -> (Int, Int) -> ()",
            "key.typeusr" : "$SyySi_SitcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV6swapAt33_09E98BAA6C26B7188E3D3E75C6E313E0LLyySi_SitF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private mutating func bubbleUp(from i: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 3064
              },
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3056
              }
            ],
            "key.bodylength" : 203,
            "key.bodyoffset" : 3102,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bubbleUp<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 233,
            "key.name" : "bubbleUp(from:)",
            "key.namelength" : 22,
            "key.nameoffset" : 3078,
            "key.offset" : 3073,
            "key.parsed_declaration" : "private mutating func bubbleUp (from i: Int)",
            "key.parsed_scope.end" : 111,
            "key.parsed_scope.start" : 102,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var i: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>i<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 9,
                "key.name" : "i",
                "key.namelength" : 1,
                "key.nameoffset" : 3115,
                "key.offset" : 3111,
                "key.parsed_declaration" : "var i = i",
                "key.parsed_scope.end" : 103,
                "key.parsed_scope.start" : 103,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:14DataStructures10BinaryHeapV8bubbleUp33_09E98BAA6C26B7188E3D3E75C6E313E0LL4fromySi_tF1iL0_Sivp"
              }
            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (inout BinaryHeap<Element, Value>) -> (Int) -> ()",
            "key.typeusr" : "$S4fromySi_tcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV8bubbleUp33_09E98BAA6C26B7188E3D3E75C6E313E0LL4fromySi_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private mutating func bubbleDown(from i: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 3324
              },
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3316
              }
            ],
            "key.bodylength" : 547,
            "key.bodyoffset" : 3364,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>bubbleDown<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 579,
            "key.name" : "bubbleDown(from:)",
            "key.namelength" : 24,
            "key.nameoffset" : 3338,
            "key.offset" : 3333,
            "key.parsed_declaration" : "private mutating func bubbleDown (from i: Int)",
            "key.parsed_scope.end" : 131,
            "key.parsed_scope.start" : 113,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>func minValueAt(_ i: <Type usr=\"s:Si\">Int<\/Type>, _ j: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.bodylength" : 84,
                "key.bodyoffset" : 3427,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
                "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>minValueAt<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>j<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
                "key.kind" : "source.lang.swift.decl.function.free",
                "key.length" : 130,
                "key.name" : "minValueAt(_:_:)",
                "key.namelength" : 31,
                "key.nameoffset" : 3387,
                "key.offset" : 3382,
                "key.parsed_declaration" : "func minValueAt (_ i: Int, _ j: Int) -> Int",
                "key.parsed_scope.end" : 117,
                "key.parsed_scope.start" : 115,
                "key.substructure" : [

                ],
                "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (Int, Int) -> Int",
                "key.typeusr" : "$SyS2i_SitcSHRzSLR_r0_luD",
                "key.usr" : "s:14DataStructures10BinaryHeapV10bubbleDown33_09E98BAA6C26B7188E3D3E75C6E313E0LL4fromySi_tF10minValueAtL_yS2i_SitSHRzSLR_r0_lF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>func hasOneChild(_ i: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.bodylength" : 55,
                "key.bodyoffset" : 3567,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
                "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasOneChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
                "key.kind" : "source.lang.swift.decl.function.free",
                "key.length" : 93,
                "key.name" : "hasOneChild(_:)",
                "key.namelength" : 22,
                "key.nameoffset" : 3535,
                "key.offset" : 3530,
                "key.parsed_declaration" : "func hasOneChild (_ i: Int) -> Bool",
                "key.parsed_scope.end" : 121,
                "key.parsed_scope.start" : 119,
                "key.substructure" : [

                ],
                "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (Int) -> Bool",
                "key.typeusr" : "$SySbSicSHRzSLR_r0_luD",
                "key.usr" : "s:14DataStructures10BinaryHeapV10bubbleDown33_09E98BAA6C26B7188E3D3E75C6E313E0LL4fromySi_tF11hasOneChildL_ySbSiSHRzSLR_r0_lF"
              },
              {
                "key.annotated_decl" : "<Declaration>var i: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>i<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 9,
                "key.name" : "i",
                "key.namelength" : 1,
                "key.nameoffset" : 3645,
                "key.offset" : 3641,
                "key.parsed_declaration" : "var i = i",
                "key.parsed_scope.end" : 123,
                "key.parsed_scope.start" : 123,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:14DataStructures10BinaryHeapV10bubbleDown33_09E98BAA6C26B7188E3D3E75C6E313E0LL4fromySi_tF1iL0_Sivp"
              }
            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (inout BinaryHeap<Element, Value>) -> (Int) -> ()",
            "key.typeusr" : "$S4fromySi_tcD",
            "key.usr" : "s:14DataStructures10BinaryHeapV10bubbleDown33_09E98BAA6C26B7188E3D3E75C6E313E0LL4fromySi_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private mutating func balance()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 3930
              },
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3922
              }
            ],
            "key.bodylength" : 33,
            "key.bodyoffset" : 3956,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/BinaryHeap.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>balance<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 51,
            "key.name" : "balance()",
            "key.namelength" : 10,
            "key.nameoffset" : 3944,
            "key.offset" : 3939,
            "key.parsed_declaration" : "private mutating func balance ()",
            "key.parsed_scope.end" : 135,
            "key.parsed_scope.start" : 133,
            "key.substructure" : [

            ],
            "key.typename" : "<Element, Value where Element : Hashable, Value : Comparable> (inout BinaryHeap<Element, Value>) -> () -> ()",
            "key.typeusr" : "$SyycD",
            "key.usr" : "s:14DataStructures10BinaryHeapV7balance33_09E98BAA6C26B7188E3D3E75C6E313E0LLyyF"
          }
        ],
        "key.typename" : "BinaryHeap<Element, Value>.Type",
        "key.typeusr" : "$S14DataStructures10BinaryHeapVyxq_GmD",
        "key.usr" : "s:14DataStructures10BinaryHeapV"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 6365,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 381
          }
        ],
        "key.bodylength" : 2009,
        "key.bodyoffset" : 419,
        "key.doc.column" : 15,
        "key.doc.comment" : "Array-like structure that allows retrieval of elements at indices outside of the bounds of\nthe internal storage.\n\n**Example Usage**\n\n    let loop: CircularArray = [0,1,2,3,4,5]\n    loop[circular: 6] \/\/ => 0\n    loop[from: 2, through: 7] \/\/ => [2,3,4,5,0,1]",
        "key.doc.declaration" : "public struct CircularArray<Element>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"18\" column=\"15\"><Name>CircularArray<\/Name><USR>s:14DataStructures13CircularArrayV<\/USR><Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Array-like structure that allows retrieval of elements at indices outside of the bounds of the internal storage.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let loop: CircularArray = [0,1,2,3,4,5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[circular: 6] \/\/ => 0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[from: 2, through: 7] \/\/ => [2,3,4,5,0,1]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 18,
        "key.doc.name" : "CircularArray",
        "key.doc.type" : "Class",
        "key.doclength" : 291,
        "key.docoffset" : 90,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CircularArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 2041,
        "key.name" : "CircularArray",
        "key.namelength" : 13,
        "key.nameoffset" : 395,
        "key.offset" : 388,
        "key.parsed_declaration" : "public struct CircularArray<Element>",
        "key.parsed_scope.end" : 74,
        "key.parsed_scope.start" : 18,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Element<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 7,
            "key.name" : "Element",
            "key.namelength" : 7,
            "key.nameoffset" : 409,
            "key.offset" : 409,
            "key.parsed_declaration" : "public struct CircularArray<Element>",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV7Elementa\">Element<\/RelatedName>"
              }
            ],
            "key.typename" : "Element.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures13CircularArrayV7Elementxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var storage: <Type usr=\"s:Sa\">Array<\/Type>&lt;<Type usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 425
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>storage<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sa\">Array<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.name" : "storage",
            "key.namelength" : 7,
            "key.nameoffset" : 437,
            "key.offset" : 433,
            "key.parsed_declaration" : "private var storage: Array<Element>",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Array<Element>",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures13CircularArrayV7storage33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLSayxGvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - Initializers",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 469
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init&lt;S&gt;(_ storage: <Type usr=\"s:14DataStructures13CircularArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp\">S<\/Type>) where Element == S.Element, S : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 547
              }
            ],
            "key.bodylength" : 43,
            "key.bodyoffset" : 616,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a `CircularArray` with an sequence.",
            "key.doc.declaration" : "public init<S>(_ storage: S) where Element == S.Element, S : Sequence",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"25\" column=\"12\"><Name>init(_:)<\/Name><USR>s:14DataStructures13CircularArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc<\/USR><Declaration>public init&lt;S&gt;(_ storage: S) where Element == S.Element, S : Sequence<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>CircularArray<\/codeVoice> with an sequence.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 25,
            "key.doc.name" : "init(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 48,
            "key.docoffset" : 495,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:14DataStructures13CircularArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp\"><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>storage<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures13CircularArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp\">S<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element == S.Element<\/decl.generic_type_requirement>, <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 106,
            "key.name" : "init(_:)",
            "key.namelength" : 33,
            "key.nameoffset" : 554,
            "key.offset" : 554,
            "key.overrides" : [
              {
                "key.usr" : "s:Smyxqd__cSTRd__7ElementQyd__AARtzlufc"
              }
            ],
            "key.parsed_declaration" : "public init <S: Sequence> (_ storage: S) where S.Element == Element",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 25,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayVACyxGycfc\">init()<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV12arrayLiteralACyxGxd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>S : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 8,
                    "key.offset" : 563
                  }
                ],
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>S<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Sequence"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 11,
                "key.name" : "S",
                "key.namelength" : 1,
                "key.nameoffset" : 560,
                "key.offset" : 560,
                "key.parsed_declaration" : "public init <S: Sequence> (_ storage: S) where S.Element == Element",
                "key.parsed_scope.end" : 25,
                "key.parsed_scope.start" : 25,
                "key.typename" : "S.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures13CircularArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp"
              }
            ],
            "key.typename" : "<Element, S where Element == S.Element, S : Sequence> (CircularArray<Element>.Type) -> (S) -> CircularArray<Element>",
            "key.typeusr" : "$Sy14DataStructures13CircularArrayVyxGqd__c7ElementQyd__RszSTRd__luD",
            "key.usr" : "s:14DataStructures13CircularArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 669
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(circular index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 754
              }
            ],
            "key.bodylength" : 50,
            "key.bodyoffset" : 805,
            "key.doc.column" : 12,
            "key.doc.comment" : "- Returns: Element at the given logical index.",
            "key.doc.declaration" : "public subscript(circular index: Int) -> Element { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"32\" column=\"12\"><Name>subscript(circular:)<\/Name><USR>s:14DataStructures13CircularArrayV8circularxSi_tcip<\/USR><Declaration>public subscript(circular index: Int) -&gt; Element { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Element at the given logical index.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 32,
            "key.doc.name" : "subscript(circular:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Element at the given logical index."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 51,
            "key.docoffset" : 699,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>circular<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 95,
            "key.name" : "subscript(circular:)",
            "key.namelength" : 31,
            "key.nameoffset" : 761,
            "key.offset" : 761,
            "key.parsed_declaration" : "public subscript (circular index: Int) -> Element",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 32,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV4from7throughSayxGSi_Sitcip\">subscript(from:through:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV5after4upToSayxGSi_Sitcip\">subscript(after:upTo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayVyxSicip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (circular: Int) -> Element",
            "key.typeusr" : "$S8circularxSi_tcD",
            "key.usr" : "s:14DataStructures13CircularArrayV8circularxSi_tcip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(from start: <Type usr=\"s:Si\">Int<\/Type>, through end: <Type usr=\"s:Si\">Int<\/Type>) -&gt; [<Type usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1232
              }
            ],
            "key.bodylength" : 298,
            "key.bodyoffset" : 1299,
            "key.doc.column" : 12,
            "key.doc.comment" : "- Returns: Array of elements from (and including) the given logical `start` index\nthrough (and including) the given logical `end` index.\n\n- Note: If the real start index is greater than the real end index (for the given\nlogical indices), the resultant array will loop around the back, to the front of the\ninternal storage.",
            "key.doc.declaration" : "public subscript(from start: Int, through end: Int) -> [Element] { get }",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"42\" column=\"12\"><Name>subscript(from:through:)<\/Name><USR>s:14DataStructures13CircularArrayV4from7throughSayxGSi_Sitcip<\/USR><Declaration>public subscript(from start: Int, through end: Int) -&gt; [Element] { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Array of elements from (and including) the given logical <codeVoice>start<\/codeVoice> index through (and including) the given logical <codeVoice>end<\/codeVoice> index.<\/Para><\/ResultDiscussion><Discussion><Note><Para>If the real start index is greater than the real end index (for the given logical indices), the resultant array will loop around the back, to the front of the internal storage.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 42,
            "key.doc.name" : "subscript(from:through:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Array of elements from (and including) the given logical `start` index through (and including) the given logical `end` index."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 366,
            "key.docoffset" : 862,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>start<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>through<\/decl.var.parameter.argument_label> <decl.var.parameter.name>end<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/ref.generic_type_param>]<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 359,
            "key.name" : "subscript(from:through:)",
            "key.namelength" : 45,
            "key.nameoffset" : 1239,
            "key.offset" : 1239,
            "key.parsed_declaration" : "public subscript (from start: Int, through end: Int) -> [Element]",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 42,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV8circularxSi_tcip\">subscript(circular:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV5after4upToSayxGSi_Sitcip\">subscript(after:upTo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayVyxSicip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (from: Int, through: Int) -> [Element]",
            "key.typeusr" : "$S4from7throughSayxGSi_SitcD",
            "key.usr" : "s:14DataStructures13CircularArrayV4from7throughSayxGSi_Sitcip"
          },
          {
            "key.annotated_decl" : "<Declaration>let start: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>start<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 32,
            "key.name" : "start",
            "key.namelength" : 5,
            "key.nameoffset" : 1313,
            "key.offset" : 1309,
            "key.parsed_declaration" : "let start = circularIndex(start)",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 44,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures13CircularArrayV4from7throughSayxGSi_Sitcig5startL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let end: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>end<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 28,
            "key.name" : "end",
            "key.namelength" : 3,
            "key.nameoffset" : 1354,
            "key.offset" : 1350,
            "key.parsed_declaration" : "let end = circularIndex(end)",
            "key.parsed_scope.end" : 45,
            "key.parsed_scope.start" : 45,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures13CircularArrayV4from7throughSayxGSi_Sitcig3endL_Sivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(after start: <Type usr=\"s:Si\">Int<\/Type>, upTo end: <Type usr=\"s:Si\">Int<\/Type>) -&gt; [<Type usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1973
              }
            ],
            "key.bodylength" : 60,
            "key.bodyoffset" : 2038,
            "key.doc.column" : 12,
            "key.doc.comment" : "- Returns: Array of elements after (not including) the given logical `start` index\nup to (not including) the given logical `end` index.\n\n- Note: If the real start index is greater than the real end index (for the given\nlogical indices), the resultant array will loop around the back, to the front of the\ninternal storage.",
            "key.doc.declaration" : "public subscript(after start: Int, upTo end: Int) -> [Element] { get }",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"62\" column=\"12\"><Name>subscript(after:upTo:)<\/Name><USR>s:14DataStructures13CircularArrayV5after4upToSayxGSi_Sitcip<\/USR><Declaration>public subscript(after start: Int, upTo end: Int) -&gt; [Element] { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Array of elements after (not including) the given logical <codeVoice>start<\/codeVoice> index up to (not including) the given logical <codeVoice>end<\/codeVoice> index.<\/Para><\/ResultDiscussion><Discussion><Note><Para>If the real start index is greater than the real end index (for the given logical indices), the resultant array will loop around the back, to the front of the internal storage.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 62,
            "key.doc.name" : "subscript(after:upTo:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Array of elements after (not including) the given logical `start` index up to (not including) the given logical `end` index."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 365,
            "key.docoffset" : 1604,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>after<\/decl.var.parameter.argument_label> <decl.var.parameter.name>start<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>upTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>end<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/ref.generic_type_param>]<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 119,
            "key.name" : "subscript(after:upTo:)",
            "key.namelength" : 43,
            "key.nameoffset" : 1980,
            "key.offset" : 1980,
            "key.parsed_declaration" : "public subscript (after start: Int, upTo end: Int) -> [Element]",
            "key.parsed_scope.end" : 64,
            "key.parsed_scope.start" : 62,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV8circularxSi_tcip\">subscript(circular:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV4from7throughSayxGSi_Sitcip\">subscript(from:through:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayVyxSicip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (after: Int, upTo: Int) -> [Element]",
            "key.typeusr" : "$S5after4upToSayxGSi_SitcD",
            "key.usr" : "s:14DataStructures13CircularArrayV5after4upToSayxGSi_Sitcip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func sorted(by areInIncreasingOrder: (<Type usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/Type>, <Type usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type>) -&gt; <Type usr=\"s:14DataStructures13CircularArrayV\">CircularArray<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2158
              }
            ],
            "key.bodylength" : 76,
            "key.bodyoffset" : 2248,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: A sorted copy of `CircularArray`.",
            "key.doc.declaration" : "public func sorted(by areInIncreasingOrder: (Element, Element) -> Bool) -> CircularArray",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"67\" column=\"17\"><Name>sorted(by:)<\/Name><USR>s:14DataStructures13CircularArrayV6sorted2byACyxGSbx_xtXE_tF<\/USR><Declaration>public func sorted(by areInIncreasingOrder: (Element, Element) -&gt; Bool) -&gt; CircularArray<\/Declaration><CommentParts><ResultDiscussion><Para>A sorted copy of <codeVoice>CircularArray<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 67,
            "key.doc.name" : "sorted(by:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A sorted copy of `CircularArray`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 49,
            "key.docoffset" : 2105,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sorted<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>by<\/decl.var.parameter.argument_label> <decl.var.parameter.name>areInIncreasingOrder<\/decl.var.parameter.name>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures13CircularArrayV\">CircularArray<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 160,
            "key.name" : "sorted(by:)",
            "key.namelength" : 59,
            "key.nameoffset" : 2170,
            "key.offset" : 2165,
            "key.parsed_declaration" : "public func sorted(by areInIncreasingOrder: (Element, Element) -> Bool) -> CircularArray",
            "key.parsed_scope.end" : 69,
            "key.parsed_scope.start" : 67,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (CircularArray<Element>) -> ((Element, Element) -> Bool) -> CircularArray<Element>",
            "key.typeusr" : "$S2by14DataStructures13CircularArrayVyxGSbx_xtXE_tcD",
            "key.usr" : "s:14DataStructures13CircularArrayV6sorted2byACyxGSbx_xtXE_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func circularIndex(_ index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2331
              }
            ],
            "key.bodylength" : 46,
            "key.bodyoffset" : 2380,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>circularIndex<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 88,
            "key.name" : "circularIndex(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 2344,
            "key.offset" : 2339,
            "key.parsed_declaration" : "private func circularIndex(_ index: Int) -> Int",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 71,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (CircularArray<Element>) -> (Int) -> Int",
            "key.typeusr" : "$SyS2icD",
            "key.usr" : "s:14DataStructures13CircularArrayV13circularIndex33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyS2iF"
          }
        ],
        "key.typename" : "CircularArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures13CircularArrayVyxGmD",
        "key.usr" : "s:14DataStructures13CircularArrayV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 189,
        "key.bodyoffset" : 2488,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct CircularArray<Element>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"18\" column=\"15\"><Name>CircularArray<\/Name><USR>s:14DataStructures13CircularArrayV<\/USR><Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Array-like structure that allows retrieval of elements at indices outside of the bounds of the internal storage.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let loop: CircularArray = [0,1,2,3,4,5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[circular: 6] \/\/ => 0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[from: 2, through: 7] \/\/ => [2,3,4,5,0,1]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 18,
        "key.doc.name" : "CircularArray",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 30,
            "key.offset" : 2456
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CircularArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "RandomAccessCollectionWrapping"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 247,
        "key.name" : "CircularArray",
        "key.namelength" : 13,
        "key.nameoffset" : 2441,
        "key.offset" : 2431,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 36,
            "key.name" : "MARK: RandomAccessCollectionWrapping",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2497
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var base: [<Type usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2619
              }
            ],
            "key.bodylength" : 28,
            "key.bodyoffset" : 2647,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: The underlying, non-circular contiguous storage of elements.",
            "key.doc.declaration" : "public var base: [Element] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"81\" column=\"16\"><Name>base<\/Name><USR>s:14DataStructures13CircularArrayV4baseSayxGvp<\/USR><Declaration>public var base: [Element] { get }<\/Declaration><CommentParts><ResultDiscussion><Para>The underlying, non-circular contiguous storage of elements.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 81,
            "key.doc.name" : "base",
            "key.doc.result_discussion" : [
              {
                "Para" : "The underlying, non-circular contiguous storage of elements."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 76,
            "key.docoffset" : 2539,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>base<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/ref.generic_type_param>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 50,
            "key.name" : "base",
            "key.namelength" : 4,
            "key.nameoffset" : 2630,
            "key.offset" : 2626,
            "key.overrides" : [
              {
                "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingP4base4BaseQzvp"
              }
            ],
            "key.parsed_declaration" : "public var base: [Element]",
            "key.parsed_scope.end" : 83,
            "key.parsed_scope.start" : 81,
            "key.typename" : "[Element]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures13CircularArrayV4baseSayxGvp"
          }
        ],
        "key.typename" : "CircularArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures13CircularArrayVyxGmD",
        "key.usr" : "s:14DataStructures13CircularArrayV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 605,
        "key.bodyoffset" : 2730,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct CircularArray<Element>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"18\" column=\"15\"><Name>CircularArray<\/Name><USR>s:14DataStructures13CircularArrayV<\/USR><Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Array-like structure that allows retrieval of elements at indices outside of the bounds of the internal storage.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let loop: CircularArray = [0,1,2,3,4,5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[circular: 6] \/\/ => 0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[from: 2, through: 7] \/\/ => [2,3,4,5,0,1]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 18,
        "key.doc.name" : "CircularArray",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 2705
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CircularArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "BidirectionalCollection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 656,
        "key.name" : "CircularArray",
        "key.namelength" : 13,
        "key.nameoffset" : 2690,
        "key.offset" : 2680,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 31,
            "key.name" : "MARK: - BidirectionalCollection",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2739
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var startIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2797
              }
            ],
            "key.bodylength" : 39,
            "key.bodyoffset" : 2825,
            "key.doc.column" : 16,
            "key.doc.comment" : "Start index.",
            "key.doc.declaration" : "public var startIndex: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"91\" column=\"16\"><Name>startIndex<\/Name><USR>s:14DataStructures13CircularArrayV10startIndexSivp<\/USR><Declaration>public var startIndex: Int { get }<\/Declaration><CommentParts><Abstract><Para>Start index.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 91,
            "key.doc.name" : "startIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 17,
            "key.docoffset" : 2776,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>startIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 61,
            "key.name" : "startIndex",
            "key.namelength" : 10,
            "key.nameoffset" : 2808,
            "key.offset" : 2804,
            "key.overrides" : [
              {
                "key.usr" : "s:Sk10startIndex0B0Qzvp"
              },
              {
                "key.usr" : "s:SK10startIndex0B0Qzvp"
              },
              {
                "key.usr" : "s:Sl10startIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var startIndex: Int",
            "key.parsed_scope.end" : 93,
            "key.parsed_scope.start" : 91,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures13CircularArrayV10startIndexSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var endIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2890
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 2916,
            "key.doc.column" : 16,
            "key.doc.comment" : "End index.",
            "key.doc.declaration" : "public var endIndex: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"96\" column=\"16\"><Name>endIndex<\/Name><USR>s:14DataStructures13CircularArrayV8endIndexSivp<\/USR><Declaration>public var endIndex: Int { get }<\/Declaration><CommentParts><Abstract><Para>End index.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 96,
            "key.doc.name" : "endIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 15,
            "key.docoffset" : 2871,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>endIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 57,
            "key.name" : "endIndex",
            "key.namelength" : 8,
            "key.nameoffset" : 2901,
            "key.offset" : 2897,
            "key.overrides" : [
              {
                "key.usr" : "s:Sk8endIndex0B0Qzvp"
              },
              {
                "key.usr" : "s:SK8endIndex0B0Qzvp"
              },
              {
                "key.usr" : "s:Sl8endIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var endIndex: Int",
            "key.parsed_scope.end" : 98,
            "key.parsed_scope.start" : 96,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures13CircularArrayV8endIndexSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2986
              }
            ],
            "key.bodylength" : 35,
            "key.bodyoffset" : 3028,
            "key.doc.column" : 12,
            "key.doc.comment" : "Element at index.",
            "key.doc.declaration" : "public subscript(index: Int) -> Element { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"101\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:14DataStructures13CircularArrayVyxSicip<\/USR><Declaration>public subscript(index: Int) -&gt; Element { get }<\/Declaration><CommentParts><Abstract><Para>Element at index.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 101,
            "key.doc.name" : "subscript(_:)",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 2960,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 71,
            "key.name" : "subscript(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 2993,
            "key.offset" : 2993,
            "key.overrides" : [
              {
                "key.usr" : "s:Sky7ElementQz5IndexQzcip"
              },
              {
                "key.usr" : "s:SKy7ElementQz5IndexQzcip"
              },
              {
                "key.usr" : "s:Sly7ElementQz5IndexQzcip"
              },
              {
                "key.usr" : "s:Smy7ElementQz5IndexQzcip"
              }
            ],
            "key.parsed_declaration" : "public subscript (index: Int) -> Element",
            "key.parsed_scope.end" : 103,
            "key.parsed_scope.start" : 101,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV8circularxSi_tcip\">subscript(circular:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV4from7throughSayxGSi_Sitcip\">subscript(from:through:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV5after4upToSayxGSi_Sitcip\">subscript(after:upTo:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (Int) -> Element",
            "key.typeusr" : "$SyxSicD",
            "key.usr" : "s:14DataStructures13CircularArrayVyxSicip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(after i: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3101
              }
            ],
            "key.bodylength" : 55,
            "key.bodyoffset" : 3141,
            "key.doc.column" : 17,
            "key.doc.comment" : "Index after given `i`.",
            "key.doc.declaration" : "public func index(after i: Int) -> Int",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"106\" column=\"17\"><Name>index(after:)<\/Name><USR>s:14DataStructures13CircularArrayV5index5afterS2i_tF<\/USR><Declaration>public func index(after i: Int) -&gt; Int<\/Declaration><CommentParts><Abstract><Para>Index after given <codeVoice>i<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 106,
            "key.doc.name" : "index(after:)",
            "key.doc.type" : "Function",
            "key.doclength" : 27,
            "key.docoffset" : 3070,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>after<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 89,
            "key.name" : "index(after:)",
            "key.namelength" : 19,
            "key.nameoffset" : 3113,
            "key.offset" : 3108,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl5index5after5IndexQzAD_tF"
              }
            ],
            "key.parsed_declaration" : "public func index(after i: Int) -> Int",
            "key.parsed_scope.end" : 109,
            "key.parsed_scope.start" : 106,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV5index6beforeS2i_tF\">index(before:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (CircularArray<Element>) -> (Int) -> Int",
            "key.typeusr" : "$S5afterS2i_tcD",
            "key.usr" : "s:14DataStructures13CircularArrayV5index5afterS2i_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(before i: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3235
              }
            ],
            "key.bodylength" : 57,
            "key.bodyoffset" : 3276,
            "key.doc.column" : 17,
            "key.doc.comment" : "Index before given `i`.",
            "key.doc.declaration" : "public func index(before i: Int) -> Int",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"112\" column=\"17\"><Name>index(before:)<\/Name><USR>s:14DataStructures13CircularArrayV5index6beforeS2i_tF<\/USR><Declaration>public func index(before i: Int) -&gt; Int<\/Declaration><CommentParts><Abstract><Para>Index before given <codeVoice>i<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 112,
            "key.doc.name" : "index(before:)",
            "key.doc.type" : "Function",
            "key.doclength" : 28,
            "key.docoffset" : 3203,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>before<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 92,
            "key.name" : "index(before:)",
            "key.namelength" : 20,
            "key.nameoffset" : 3247,
            "key.offset" : 3242,
            "key.overrides" : [
              {
                "key.usr" : "s:SK5index6before5IndexQzAD_tF"
              }
            ],
            "key.parsed_declaration" : "public func index(before i: Int) -> Int",
            "key.parsed_scope.end" : 115,
            "key.parsed_scope.start" : 112,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV5index5afterS2i_tF\">index(after:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (CircularArray<Element>) -> (Int) -> Int",
            "key.typeusr" : "$S6beforeS2i_tcD",
            "key.usr" : "s:14DataStructures13CircularArrayV5index6beforeS2i_tF"
          }
        ],
        "key.typename" : "CircularArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures13CircularArrayVyxGmD",
        "key.usr" : "s:14DataStructures13CircularArrayV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 2216,
        "key.bodyoffset" : 3391,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct CircularArray<Element>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"18\" column=\"15\"><Name>CircularArray<\/Name><USR>s:14DataStructures13CircularArrayV<\/USR><Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Array-like structure that allows retrieval of elements at indices outside of the bounds of the internal storage.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let loop: CircularArray = [0,1,2,3,4,5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[circular: 6] \/\/ => 0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[from: 2, through: 7] \/\/ => [2,3,4,5,0,1]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 18,
        "key.doc.name" : "CircularArray",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 26,
            "key.offset" : 3363
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CircularArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "RangeReplaceableCollection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2270,
        "key.name" : "CircularArray",
        "key.namelength" : 13,
        "key.nameoffset" : 3348,
        "key.offset" : 3338,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 34,
            "key.name" : "MARK: - RangeReplaceableCollection",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3400
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func replaceSubrange&lt;C&gt;(_ subrange: <Type usr=\"s:Sn\">Range<\/Type>&lt;<Type usr=\"s:Si\">Int<\/Type>&gt;, with newElements: <Type usr=\"s:14DataStructures13CircularArrayV15replaceSubrange_4withySnySiG_qd__t7ElementQyd__RszSlRd__lF1CL_qd__mfp\">C<\/Type>) where Element == C.Element, C : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 5296
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5289
              }
            ],
            "key.bodylength" : 71,
            "key.bodyoffset" : 5439,
            "key.doc.column" : 26,
            "key.doc.comment" : "Replaces the specified subrange of elements with the given collection.\n\nThis method has the effect of removing the specified range of elements\nfrom the collection and inserting the new elements at the same location.\nThe number of new elements need not match the number of elements being\nremoved.\n\nIn this example, three elements in the middle of an array of integers are\nreplaced by the five elements of a `Repeated<Int>` instance.\n\n     var nums = [10, 20, 30, 40, 50]\n     nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))\n     print(nums)\n     \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\"\n\nIf you pass a zero-length range as the `subrange` parameter, this method\ninserts the elements of `newElements` at `subrange.startIndex`. Calling\nthe `insert(contentsOf:at:)` method instead is preferred.\n\nLikewise, if you pass a zero-length collection as the `newElements`\nparameter, this method removes the elements in the given subrange\nwithout replacement. Calling the `removeSubrange(_:)` method instead is\npreferred.\n\nCalling this method may invalidate any existing indices for use with this\ncollection.\n\n- Parameters:\n  - subrange: The subrange of the collection to replace. The bounds of\n    the range must be valid indices of the collection.\n  - newElements: The new elements to add to the collection.\n\n- Complexity: O(*m*), where *m* is the combined length of the collection\n  and `newElements`. If the call to `replaceSubrange` simply appends the\n  contents of `newElements` to the collection, the complexity is O(*n*),\n  where *n* is the length of `newElements`.",
            "key.doc.declaration" : "public mutating func replaceSubrange<C>(_ subrange: Range<Int>, with newElements: C) where Element == C.Element, C : Collection",
            "key.doc.discussion" : [
              {
                "Para" : "This method has the effect of removing the specified range of elements from the collection and inserting the new elements at the same location. The number of new elements need not match the number of elements being removed."
              },
              {
                "Para" : "In this example, three elements in the middle of an array of integers are replaced by the five elements of a `Repeated<Int>` instance."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "If you pass a zero-length range as the `subrange` parameter, this method inserts the elements of `newElements` at `subrange.startIndex`. Calling the `insert(contentsOf:at:)` method instead is preferred."
              },
              {
                "Para" : "Likewise, if you pass a zero-length collection as the `newElements` parameter, this method removes the elements in the given subrange without replacement. Calling the `removeSubrange(_:)` method instead is preferred."
              },
              {
                "Para" : "Calling this method may invalidate any existing indices for use with this collection."
              },
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"158\" column=\"26\"><Name>replaceSubrange(_:with:)<\/Name><USR>s:14DataStructures13CircularArrayV15replaceSubrange_4withySnySiG_qd__t7ElementQyd__RszSlRd__lF<\/USR><Declaration>public mutating func replaceSubrange&lt;C&gt;(_ subrange: Range&lt;Int&gt;, with newElements: C) where Element == C.Element, C : Collection<\/Declaration><CommentParts><Abstract><Para>Replaces the specified subrange of elements with the given collection.<\/Para><\/Abstract><Parameters><Parameter><Name>subrange<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The subrange of the collection to replace. The bounds of the range must be valid indices of the collection.<\/Para><\/Discussion><\/Parameter><Parameter><Name>newElements<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The new elements to add to the collection.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This method has the effect of removing the specified range of elements from the collection and inserting the new elements at the same location. The number of new elements need not match the number of elements being removed.<\/Para><Para>In this example, three elements in the middle of an array of integers are replaced by the five elements of a <codeVoice>Repeated&lt;Int&gt;<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[ var nums = [10, 20, 30, 40, 50]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ print(nums)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you pass a zero-length range as the <codeVoice>subrange<\/codeVoice> parameter, this method inserts the elements of <codeVoice>newElements<\/codeVoice> at <codeVoice>subrange.startIndex<\/codeVoice>. Calling the <codeVoice>insert(contentsOf:at:)<\/codeVoice> method instead is preferred.<\/Para><Para>Likewise, if you pass a zero-length collection as the <codeVoice>newElements<\/codeVoice> parameter, this method removes the elements in the given subrange without replacement. Calling the <codeVoice>removeSubrange(_:)<\/codeVoice> method instead is preferred.<\/Para><Para>Calling this method may invalidate any existing indices for use with this collection.<\/Para><Complexity><Para>O(<emphasis>m<\/emphasis>), where <emphasis>m<\/emphasis> is the combined length of the collection and <codeVoice>newElements<\/codeVoice>. If the call to <codeVoice>replaceSubrange<\/codeVoice> simply appends the contents of <codeVoice>newElements<\/codeVoice> to the collection, the complexity is O(<emphasis>n<\/emphasis>), where <emphasis>n<\/emphasis> is the length of <codeVoice>newElements<\/codeVoice>.<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 158,
            "key.doc.name" : "replaceSubrange(_:with:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The subrange of the collection to replace. The bounds of the range must be valid indices of the collection."
                  }
                ],
                "name" : "subrange"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The new elements to add to the collection."
                  }
                ],
                "name" : "newElements"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 1845,
            "key.docoffset" : 3440,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>replaceSubrange<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures13CircularArrayV15replaceSubrange_4withySnySiG_qd__t7ElementQyd__RszSlRd__lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>subrange<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range<\/ref.struct>&lt;<ref.struct usr=\"s:Si\">Int<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>newElements<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures13CircularArrayV15replaceSubrange_4withySnySiG_qd__t7ElementQyd__RszSlRd__lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element == C.Element<\/decl.generic_type_requirement>, <decl.generic_type_requirement>C : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 206,
            "key.name" : "replaceSubrange(_:with:)",
            "key.namelength" : 63,
            "key.nameoffset" : 5310,
            "key.offset" : 5305,
            "key.overrides" : [
              {
                "key.usr" : "s:Sm15replaceSubrange_4withySny5IndexQzG_qd__tSlRd__7ElementQyd__AFRtzlF"
              }
            ],
            "key.parsed_declaration" : "public mutating func replaceSubrange<C>(_ subrange: Range<Int>, with newElements: C)\n    where C : Collection, C.Iterator.Element == Element",
            "key.parsed_scope.end" : 162,
            "key.parsed_scope.start" : 158,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 5326,
                "key.offset" : 5326,
                "key.parsed_declaration" : "public mutating func replaceSubrange<C>(_ subrange: Range<Int>, with newElements: C)",
                "key.parsed_scope.end" : 158,
                "key.parsed_scope.start" : 158,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures13CircularArrayV15replaceSubrange_4withySnySiG_qd__t7ElementQyd__RszSlRd__lF1CL_qd__mfp"
              }
            ],
            "key.typename" : "<Element, C where Element == C.Element, C : Collection> (inout CircularArray<Element>) -> (Range<Int>, C) -> ()",
            "key.typeusr" : "$S_4withySnySiG_qd__tc7ElementQyd__RszSlRd__luD",
            "key.usr" : "s:14DataStructures13CircularArrayV15replaceSubrange_4withySnySiG_qd__t7ElementQyd__RszSlRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5559
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 5574,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates an empty `CircularArray`.",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"165\" column=\"12\"><Name>init()<\/Name><USR>s:14DataStructures13CircularArrayVACyxGycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Creates an empty <codeVoice>CircularArray<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 165,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 38,
            "key.docoffset" : 5517,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 40,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 5566,
            "key.offset" : 5566,
            "key.overrides" : [
              {
                "key.usr" : "s:Smxycfc"
              }
            ],
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 167,
            "key.parsed_scope.start" : 165,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayV12arrayLiteralACyxGxd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (CircularArray<Element>.Type) -> () -> CircularArray<Element>",
            "key.typeusr" : "$S14DataStructures13CircularArrayVyxGycD",
            "key.usr" : "s:14DataStructures13CircularArrayVACyxGycfc"
          }
        ],
        "key.typename" : "CircularArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures13CircularArrayVyxGmD",
        "key.usr" : "s:14DataStructures13CircularArrayV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 5671,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct CircularArray<Element>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"18\" column=\"15\"><Name>CircularArray<\/Name><USR>s:14DataStructures13CircularArrayV<\/USR><Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Array-like structure that allows retrieval of elements at indices outside of the bounds of the internal storage.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let loop: CircularArray = [0,1,2,3,4,5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[circular: 6] \/\/ => 0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[from: 2, through: 7] \/\/ => [2,3,4,5,0,1]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 18,
        "key.doc.name" : "CircularArray",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 5635
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CircularArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Equatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 63,
        "key.name" : "CircularArray",
        "key.namelength" : 13,
        "key.nameoffset" : 5620,
        "key.offset" : 5610,
        "key.typename" : "CircularArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures13CircularArrayVyxGmD",
        "key.usr" : "s:14DataStructures13CircularArrayV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 199,
        "key.bodyoffset" : 5727,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct CircularArray<Element>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"18\" column=\"15\"><Name>CircularArray<\/Name><USR>s:14DataStructures13CircularArrayV<\/USR><Declaration>public struct CircularArray&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Array-like structure that allows retrieval of elements at indices outside of the bounds of the internal storage.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let loop: CircularArray = [0,1,2,3,4,5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[circular: 6] \/\/ => 0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[loop[from: 2, through: 7] \/\/ => [2,3,4,5,0,1]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 18,
        "key.doc.name" : "CircularArray",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 25,
            "key.offset" : 5700
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CircularArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ExpressibleByArrayLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 252,
        "key.name" : "CircularArray",
        "key.namelength" : 13,
        "key.nameoffset" : 5685,
        "key.offset" : 5675,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 33,
            "key.name" : "MARK: - ExpressibleByArrayLiteral",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 5736
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(arrayLiteral elements: <Type usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/Type>...)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5832
              }
            ],
            "key.bodylength" : 44,
            "key.bodyoffset" : 5880,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a `CircularArray` with an array literal.",
            "key.doc.declaration" : "public init(arrayLiteral elements: Element...)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"177\" column=\"12\"><Name>init(arrayLiteral:)<\/Name><USR>s:14DataStructures13CircularArrayV12arrayLiteralACyxGxd_tcfc<\/USR><Declaration>public init(arrayLiteral elements: Element...)<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>CircularArray<\/codeVoice> with an array literal.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 177,
            "key.doc.name" : "init(arrayLiteral:)",
            "key.doc.type" : "Function",
            "key.doclength" : 53,
            "key.docoffset" : 5775,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>arrayLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures13CircularArrayV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type>...<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 86,
            "key.name" : "init(arrayLiteral:)",
            "key.namelength" : 39,
            "key.nameoffset" : 5839,
            "key.offset" : 5839,
            "key.overrides" : [
              {
                "key.usr" : "s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(arrayLiteral elements: Element...)",
            "key.parsed_scope.end" : 179,
            "key.parsed_scope.start" : 177,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13CircularArrayVACyxGycfc\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (CircularArray<Element>.Type) -> (Element...) -> CircularArray<Element>",
            "key.typeusr" : "$S12arrayLiteral14DataStructures13CircularArrayVyxGxd_tcD",
            "key.usr" : "s:14DataStructures13CircularArrayV12arrayLiteralACyxGxd_tcfc"
          }
        ],
        "key.typename" : "CircularArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures13CircularArrayVyxGmD",
        "key.usr" : "s:14DataStructures13CircularArrayV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private func mod&lt;T&gt;(_ dividend: <Type usr=\"s:14DataStructures3mod33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyxx_xtSzRzlF1TL_xmfp\">T<\/Type>, _ modulus: <Type usr=\"s:14DataStructures3mod33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyxx_xtSzRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures3mod33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyxx_xtSzRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:Sz\">BinaryInteger<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 6014
          }
        ],
        "key.bodylength" : 87,
        "key.bodyoffset" : 6086,
        "key.doc.column" : 14,
        "key.doc.comment" : "- Returns: \"True\" modulo (not \"remainder\", which is implemented by Swift's `%`).",
        "key.doc.declaration" : "private func mod<T>(_ dividend: T, _ modulus: T) -> T where T : BinaryInteger",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"183\" column=\"14\"><Name>mod(_:_:)<\/Name><USR>s:14DataStructures3mod33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyxx_xtSzRzlF<\/USR><Declaration>private func mod&lt;T&gt;(_ dividend: T, _ modulus: T) -&gt; T where T : BinaryInteger<\/Declaration><CommentParts><ResultDiscussion><Para>“True” modulo (not “remainder”, which is implemented by Swift’s <codeVoice>%<\/codeVoice>).<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 183,
        "key.doc.name" : "mod(_:_:)",
        "key.doc.result_discussion" : [
          {
            "Para" : "“True” modulo (not “remainder”, which is implemented by Swift’s `%`)."
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 85,
        "key.docoffset" : 5929,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>mod<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures3mod33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyxx_xtSzRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dividend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3mod33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyxx_xtSzRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>modulus<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3mod33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyxx_xtSzRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures3mod33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyxx_xtSzRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:Sz\">BinaryInteger<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 152,
        "key.name" : "mod(_:_:)",
        "key.namelength" : 52,
        "key.nameoffset" : 6027,
        "key.offset" : 6022,
        "key.parsed_declaration" : "private func mod <T: BinaryInteger> (_ dividend: T, _ modulus: T) -> T",
        "key.parsed_scope.end" : 186,
        "key.parsed_scope.start" : 183,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:Sz\">BinaryInteger<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 6035
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Sz\">BinaryInteger<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "BinaryInteger"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 6032,
            "key.offset" : 6032,
            "key.parsed_declaration" : "private func mod <T: BinaryInteger> (_ dividend: T, _ modulus: T) -> T",
            "key.parsed_scope.end" : 183,
            "key.parsed_scope.start" : 183,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures3mod33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyxx_xtSzRzlF1TL_xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>let result: T<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>result<\/decl.name>: <decl.var.type>T<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 31,
            "key.name" : "result",
            "key.namelength" : 6,
            "key.nameoffset" : 6095,
            "key.offset" : 6091,
            "key.parsed_declaration" : "let result = dividend % modulus",
            "key.parsed_scope.end" : 184,
            "key.parsed_scope.start" : 184,
            "key.typename" : "T",
            "key.typeusr" : "$SxD",
            "key.usr" : "s:14DataStructures3mod33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyxx_xtSzRzlF6resultL_xvp"
          }
        ],
        "key.typename" : "<T where T : BinaryInteger> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtcSzRzluD",
        "key.usr" : "s:14DataStructures3mod33_87E2C8D01EDDCCD4E60FC93ACF46F74DLLyxx_xtSzRzlF"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/Type><\/Declaration>",
        "key.bodylength" : 170,
        "key.bodyoffset" : 6193,
        "key.doc.declaration" : "struct Array<Element>",
        "key.doc.discussion" : [
          {
            "Para" : "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the `Array` type to hold elements of a single type, the array’s `Element` type. An array can store any kind of elements—from integers to strings to classes."
          },
          {
            "Para" : "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s `Element` type. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to perform an operation on all of an array’s elements, use a `for`-`in` loop to iterate through the array’s contents."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `first` and `last` properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are `nil`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can replace an existing element with a new value by assigning the new value to the subscript."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."
          },
          {
            "Para" : "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."
          },
          {
            "Para" : "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."
          },
          {
            "Para" : "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."
          },
          {
            "Para" : "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."
          },
          {
            "Para" : "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."
          },
          {
            "Para" : "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array’s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array’s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."
          },
          {
            "Para" : "When the destination array’s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."
          },
          {
            "Para" : "When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."
          },
          {
            "Note" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Array<\/Name><USR>s:Sa<\/USR><Declaration>struct Array&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.<\/Para><\/Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the <codeVoice>Array<\/codeVoice> type to hold elements of a single type, the array’s <codeVoice>Element<\/codeVoice> type. An array can store any kind of elements—from integers to strings to classes.<\/Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s <codeVoice>Element<\/codeVoice> type. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An array of 'Int' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ An array of 'String' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element<\/codeVoice> type of your array in the declaration. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Shortened forms are preferred]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The full type name is also allowed]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Array Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to perform an operation on all of an array’s elements, use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop to iterate through the array’s contents.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Albemarle.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Brandywine.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Chesapeake.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>isEmpty<\/codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count<\/codeVoice> property to find the number of elements in the array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I know 8 odd numbers.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>first<\/codeVoice> and <codeVoice>last<\/codeVoice> properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are <codeVoice>nil<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 15\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"nil, nil\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count<\/codeVoice> triggers a runtime error. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Triggers runtime error: Index out of range]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Adding and Removing Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)<\/codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)<\/codeVoice> method.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)<\/codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)<\/codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)<\/codeVoice>, <codeVoice>removeSubrange(_:)<\/codeVoice>, and <codeVoice>removeLast()<\/codeVoice> methods.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Ben's family is moving to another state]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ William is signing up for a different class]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Growing the Size of an Array<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.<\/Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)<\/codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity<\/codeVoice> and <codeVoice>count<\/codeVoice> properties to determine how many more elements the array can store without allocating larger storage.<\/Para><Para>For arrays of most <codeVoice>Element<\/codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element<\/codeVoice> type that is a class or <codeVoice>@objc<\/codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray<\/codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray<\/codeVoice> can become an <codeVoice>Array<\/codeVoice>, there are no guarantees about representation or efficiency in this case.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[100, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[1, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An integer type with reference semantics]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Modifications to an instance are visible from either array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Replacements, additions, and removals are still visible]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ only in the modified array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.<\/Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.<\/Para><Para>In the example below, a <codeVoice>numbers<\/codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers<\/codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers<\/codeVoice> are made in place, while the two copies continue to share the original storage.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The storage for 'numbers' is copied here]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'numbers' is [100, 200, 300, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray<\/codeVoice> instance instead of <codeVoice>Array<\/codeVoice>, use the type-cast operator (<codeVoice>as<\/codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element<\/codeVoice> type of your array must be a class, an <codeVoice>@objc<\/codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc<\/codeVoice> attribute), or a type that bridges to a Foundation type.<\/Para><Para>The following example shows how you can bridge an <codeVoice>Array<\/codeVoice> instance to <codeVoice>NSArray<\/codeVoice> to use the <codeVoice>write(to:atomically:)<\/codeVoice> method. In this example, the <codeVoice>colors<\/codeVoice> array can be bridged to <codeVoice>NSArray<\/codeVoice> because the <codeVoice>colors<\/codeVoice> array’s <codeVoice>String<\/codeVoice> elements bridge to <codeVoice>NSString<\/codeVoice>. The compiler prevents bridging the <codeVoice>moreColors<\/codeVoice> array, on the other hand, because its <codeVoice>Element<\/codeVoice> type is <codeVoice>Optional&lt;String&gt;<\/codeVoice>, which does <emphasis>not<\/emphasis> bridge to a Foundation type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = NSURL(fileURLWithPath: \"names.plist\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: cannot convert value of type '[String?]' to type 'NSArray']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Bridging from <codeVoice>Array<\/codeVoice> to <codeVoice>NSArray<\/codeVoice> takes O(1) time and O(1) space if the array’s elements are already instances of a class or an <codeVoice>@objc<\/codeVoice> protocol; otherwise, it takes O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When the destination array’s element type is a class or an <codeVoice>@objc<\/codeVoice> protocol, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)<\/codeVoice> returns the same array, the instances of <codeVoice>NSArray<\/codeVoice> and <codeVoice>Array<\/codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array<\/codeVoice> share storage.<\/Para><Para>When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n<\/emphasis>) time. For example, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array&lt;Int&gt;<\/codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array<\/codeVoice> instance.<\/Para><Note><Para>The <codeVoice>ContiguousArray<\/codeVoice> and <codeVoice>ArraySlice<\/codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Array",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Array<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Collection\/Array",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 188,
        "key.modulename" : "Swift",
        "key.name" : "Array",
        "key.namelength" : 5,
        "key.nameoffset" : 6186,
        "key.offset" : 6176,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var circular: <Type usr=\"s:14DataStructures13CircularArrayV\">CircularArray<\/Type>&lt;<Type usr=\"s:Sa7Elementa\">Element<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6276
              }
            ],
            "key.bodylength" : 40,
            "key.bodyoffset" : 6321,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: `CircularArray` containing the elements contained herein.",
            "key.doc.declaration" : "public var circular: CircularArray<Element> { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift\" line=\"191\" column=\"16\"><Name>circular<\/Name><USR>s:Sa14DataStructuresE8circularAA13CircularArrayVyxGvp<\/USR><Declaration>public var circular: CircularArray&lt;Element&gt; { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>CircularArray<\/codeVoice> containing the elements contained herein.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 191,
            "key.doc.name" : "circular",
            "key.doc.result_discussion" : [
              {
                "Para" : "`CircularArray` containing the elements contained herein."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 73,
            "key.docoffset" : 6199,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CircularArray.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>circular<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures13CircularArrayV\">CircularArray<\/ref.struct>&lt;<ref.typealias usr=\"s:Sa7Elementa\">Element<\/ref.typealias>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 79,
            "key.name" : "circular",
            "key.namelength" : 8,
            "key.nameoffset" : 6287,
            "key.offset" : 6283,
            "key.parsed_declaration" : "public var circular: CircularArray<Element>",
            "key.parsed_scope.end" : 193,
            "key.parsed_scope.start" : 191,
            "key.typename" : "CircularArray<Element>",
            "key.typeusr" : "$S14DataStructures13CircularArrayVyxGD",
            "key.usr" : "s:Sa14DataStructuresE8circularAA13CircularArrayVyxGvp"
          }
        ],
        "key.typename" : "Array<Element>.Type",
        "key.typeusr" : "$SSayxGmD",
        "key.usr" : "s:Sa"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3381,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/Type><\/Declaration>",
        "key.bodylength" : 690,
        "key.bodyoffset" : 115,
        "key.doc.declaration" : "struct Array<Element>",
        "key.doc.discussion" : [
          {
            "Para" : "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the `Array` type to hold elements of a single type, the array’s `Element` type. An array can store any kind of elements—from integers to strings to classes."
          },
          {
            "Para" : "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s `Element` type. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to perform an operation on all of an array’s elements, use a `for`-`in` loop to iterate through the array’s contents."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `first` and `last` properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are `nil`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can replace an existing element with a new value by assigning the new value to the subscript."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."
          },
          {
            "Para" : "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."
          },
          {
            "Para" : "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."
          },
          {
            "Para" : "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."
          },
          {
            "Para" : "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."
          },
          {
            "Para" : "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."
          },
          {
            "Para" : "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array’s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array’s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."
          },
          {
            "Para" : "When the destination array’s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."
          },
          {
            "Para" : "When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."
          },
          {
            "Note" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Array<\/Name><USR>s:Sa<\/USR><Declaration>struct Array&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.<\/Para><\/Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the <codeVoice>Array<\/codeVoice> type to hold elements of a single type, the array’s <codeVoice>Element<\/codeVoice> type. An array can store any kind of elements—from integers to strings to classes.<\/Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s <codeVoice>Element<\/codeVoice> type. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An array of 'Int' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ An array of 'String' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element<\/codeVoice> type of your array in the declaration. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Shortened forms are preferred]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The full type name is also allowed]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Array Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to perform an operation on all of an array’s elements, use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop to iterate through the array’s contents.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Albemarle.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Brandywine.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Chesapeake.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>isEmpty<\/codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count<\/codeVoice> property to find the number of elements in the array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I know 8 odd numbers.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>first<\/codeVoice> and <codeVoice>last<\/codeVoice> properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are <codeVoice>nil<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 15\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"nil, nil\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count<\/codeVoice> triggers a runtime error. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Triggers runtime error: Index out of range]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Adding and Removing Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)<\/codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)<\/codeVoice> method.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)<\/codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)<\/codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)<\/codeVoice>, <codeVoice>removeSubrange(_:)<\/codeVoice>, and <codeVoice>removeLast()<\/codeVoice> methods.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Ben's family is moving to another state]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ William is signing up for a different class]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Growing the Size of an Array<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.<\/Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)<\/codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity<\/codeVoice> and <codeVoice>count<\/codeVoice> properties to determine how many more elements the array can store without allocating larger storage.<\/Para><Para>For arrays of most <codeVoice>Element<\/codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element<\/codeVoice> type that is a class or <codeVoice>@objc<\/codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray<\/codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray<\/codeVoice> can become an <codeVoice>Array<\/codeVoice>, there are no guarantees about representation or efficiency in this case.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[100, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[1, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An integer type with reference semantics]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Modifications to an instance are visible from either array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Replacements, additions, and removals are still visible]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ only in the modified array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.<\/Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.<\/Para><Para>In the example below, a <codeVoice>numbers<\/codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers<\/codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers<\/codeVoice> are made in place, while the two copies continue to share the original storage.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The storage for 'numbers' is copied here]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'numbers' is [100, 200, 300, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray<\/codeVoice> instance instead of <codeVoice>Array<\/codeVoice>, use the type-cast operator (<codeVoice>as<\/codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element<\/codeVoice> type of your array must be a class, an <codeVoice>@objc<\/codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc<\/codeVoice> attribute), or a type that bridges to a Foundation type.<\/Para><Para>The following example shows how you can bridge an <codeVoice>Array<\/codeVoice> instance to <codeVoice>NSArray<\/codeVoice> to use the <codeVoice>write(to:atomically:)<\/codeVoice> method. In this example, the <codeVoice>colors<\/codeVoice> array can be bridged to <codeVoice>NSArray<\/codeVoice> because the <codeVoice>colors<\/codeVoice> array’s <codeVoice>String<\/codeVoice> elements bridge to <codeVoice>NSString<\/codeVoice>. The compiler prevents bridging the <codeVoice>moreColors<\/codeVoice> array, on the other hand, because its <codeVoice>Element<\/codeVoice> type is <codeVoice>Optional&lt;String&gt;<\/codeVoice>, which does <emphasis>not<\/emphasis> bridge to a Foundation type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = NSURL(fileURLWithPath: \"names.plist\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: cannot convert value of type '[String?]' to type 'NSArray']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Bridging from <codeVoice>Array<\/codeVoice> to <codeVoice>NSArray<\/codeVoice> takes O(1) time and O(1) space if the array’s elements are already instances of a class or an <codeVoice>@objc<\/codeVoice> protocol; otherwise, it takes O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When the destination array’s element type is a class or an <codeVoice>@objc<\/codeVoice> protocol, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)<\/codeVoice> returns the same array, the instances of <codeVoice>NSArray<\/codeVoice> and <codeVoice>Array<\/codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array<\/codeVoice> share storage.<\/Para><Para>When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n<\/emphasis>) time. For example, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array&lt;Int&gt;<\/codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array<\/codeVoice> instance.<\/Para><Note><Para>The <codeVoice>ContiguousArray<\/codeVoice> and <codeVoice>ArraySlice<\/codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Array",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Array<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Collection\/Array",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 708,
        "key.modulename" : "Swift",
        "key.name" : "Array",
        "key.namelength" : 5,
        "key.nameoffset" : 108,
        "key.offset" : 98,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func appending(_ element: <Type usr=\"s:Sa7Elementa\">Element<\/Type>) -&gt; <Type usr=\"s:Sa\">Array<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 175
              }
            ],
            "key.bodylength" : 78,
            "key.bodyoffset" : 227,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: Array with the `element` appended.",
            "key.doc.declaration" : "public func appending(_ element: Element) -> Array",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"11\" column=\"17\"><Name>appending(_:)<\/Name><USR>s:Sa14DataStructuresE9appendingySayxGxF<\/USR><Declaration>public func appending(_ element: Element) -&gt; Array<\/Declaration><CommentParts><ResultDiscussion><Para>Array with the <codeVoice>element<\/codeVoice> appended.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 11,
            "key.doc.name" : "appending(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Array with the `element` appended."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 50,
            "key.docoffset" : 121,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>appending<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:Sa7Elementa\">Element<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sa\">Array<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 124,
            "key.name" : "appending(_:)",
            "key.namelength" : 29,
            "key.nameoffset" : 187,
            "key.offset" : 182,
            "key.parsed_declaration" : "public func appending(_ element: Element) -> Array",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var copy: [Element]<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>copy<\/decl.name>: <decl.var.type>[Element]<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Collection\/Array",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 15,
                "key.name" : "copy",
                "key.namelength" : 4,
                "key.nameoffset" : 240,
                "key.offset" : 236,
                "key.parsed_declaration" : "var copy = self",
                "key.parsed_scope.end" : 12,
                "key.parsed_scope.start" : 12,
                "key.typename" : "[Element]",
                "key.typeusr" : "$SSayxGD",
                "key.usr" : "s:Sa14DataStructuresE9appendingySayxGxF4copyL_ACvp"
              }
            ],
            "key.typename" : "<Element> (Array<Element>) -> (Element) -> Array<Element>",
            "key.typeusr" : "$SySayxGxcD",
            "key.usr" : "s:Sa14DataStructuresE9appendingySayxGxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func + (lhs: <Type usr=\"s:Sa\">Array<\/Type>, rhs: <Type usr=\"s:Sa7Elementa\">Element<\/Type>?) -&gt; <Type usr=\"s:Sa\">Array<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 448
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 507,
            "key.doc.column" : 24,
            "key.doc.comment" : "- Returns: Left-hand-side value appending the right-hand-side value, if it exists.\nOtherwise, the left-hand-side value.",
            "key.doc.declaration" : "public static func + (lhs: Array, rhs: Element?) -> Array",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"19\" column=\"24\"><Name>+(_:_:)<\/Name><USR>s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ<\/USR><Declaration>public static func + (lhs: Array, rhs: Element?) -&gt; Array<\/Declaration><CommentParts><ResultDiscussion><Para>Left-hand-side value appending the right-hand-side value, if it exists. Otherwise, the left-hand-side value.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 19,
            "key.doc.name" : "+(_:_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Left-hand-side value appending the right-hand-side value, if it exists. Otherwise, the left-hand-side value."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 132,
            "key.docoffset" : 312,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sa\">Array<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:Sa7Elementa\">Element<\/ref.typealias>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sa\">Array<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 148,
            "key.name" : "+(_:_:)",
            "key.namelength" : 29,
            "key.nameoffset" : 467,
            "key.offset" : 455,
            "key.parsed_declaration" : "public static func + (lhs: Array, rhs: Element?) -> Array",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 19,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let lhs: <Type usr=\"s:Sa\">Array<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
                "key.fully_annotated_decl" : "<decl.var.parameter><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sa\">Array<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>",
                "key.groupname" : "Collection\/Array",
                "key.kind" : "source.lang.swift.decl.var.parameter",
                "key.length" : 3,
                "key.name" : "lhs",
                "key.offset" : 470,
                "key.parent_loc" : 467,
                "key.parsed_declaration" : "public static func + (lhs: Array, rhs: Element?) -> Array",
                "key.parsed_scope.end" : 19,
                "key.parsed_scope.start" : 19,
                "key.typename" : "Array<Element>",
                "key.typeusr" : "$SSayxGD",
                "key.usr" : "s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ3lhsL_ACvp"
              }
            ],
            "key.typename" : "<Element> (Array<Element>.Type) -> (Array<Element>, Element?) -> Array<Element>",
            "key.typeusr" : "$SySayxGAA_xSgtcD",
            "key.usr" : "s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func + (head: <Type usr=\"s:Sa7Elementa\">Element<\/Type>, tail: <Type usr=\"s:Sa\">Array<\/Type>) -&gt; <Type usr=\"s:Sa\">Array<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 709
              }
            ],
            "key.bodylength" : 34,
            "key.bodyoffset" : 769,
            "key.doc.column" : 24,
            "key.doc.comment" : "- Returns: New `Array` with the first element `head`, and the remaining elements of `tail`.",
            "key.doc.declaration" : "public static func + (head: Element, tail: Array) -> Array",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"25\" column=\"24\"><Name>+(_:_:)<\/Name><USR>s:Sa14DataStructuresE1poiySayxGx_ACtFZ<\/USR><Declaration>public static func + (head: Element, tail: Array) -&gt; Array<\/Declaration><CommentParts><ResultDiscussion><Para>New <codeVoice>Array<\/codeVoice> with the first element <codeVoice>head<\/codeVoice>, and the remaining elements of <codeVoice>tail<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 25,
            "key.doc.name" : "+(_:_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "New `Array` with the first element `head`, and the remaining elements of `tail`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 96,
            "key.docoffset" : 609,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>head<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:Sa7Elementa\">Element<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>tail<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sa\">Array<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sa\">Array<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 88,
            "key.name" : "+(_:_:)",
            "key.namelength" : 30,
            "key.nameoffset" : 728,
            "key.offset" : 716,
            "key.parsed_declaration" : "public static func + (head: Element, tail: Array) -> Array",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 25,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let head: <Type usr=\"s:Sa7Elementa\">Element<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
                "key.fully_annotated_decl" : "<decl.var.parameter><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.var.parameter.name>head<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:Sa7Elementa\">Element<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>",
                "key.groupname" : "Collection\/Array",
                "key.kind" : "source.lang.swift.decl.var.parameter",
                "key.length" : 4,
                "key.name" : "head",
                "key.offset" : 731,
                "key.parent_loc" : 728,
                "key.parsed_declaration" : "public static func + (head: Element, tail: Array) -> Array",
                "key.parsed_scope.end" : 25,
                "key.parsed_scope.start" : 25,
                "key.typename" : "Element",
                "key.typeusr" : "$SxD",
                "key.usr" : "s:Sa14DataStructuresE1poiySayxGx_ACtFZ4headL_xvp"
              }
            ],
            "key.typename" : "<Element> (Array<Element>.Type) -> (Element, Array<Element>) -> Array<Element>",
            "key.typeusr" : "$SySayxGx_AAtcD",
            "key.usr" : "s:Sa14DataStructuresE1poiySayxGx_ACtFZ"
          }
        ],
        "key.typename" : "Array<Element>.Type",
        "key.typeusr" : "$SSayxGmD",
        "key.usr" : "s:Sa"
      },
      {
        "key.annotated_decl" : "<Declaration>protocol Collection : <Type usr=\"s:ST\">Sequence<\/Type> where <Type usr=\"s:Sl4Selfxmfp\">Self<\/Type>.SubSequence : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.bodylength" : 182,
        "key.bodyoffset" : 830,
        "key.doc.declaration" : "protocol Collection : Sequence where Self.SubSequence : Collection",
        "key.doc.discussion" : [
          {
            "Para" : "Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the `Collection` protocol declares and implements. In addition to the operations that collections inherit from the `Sequence` protocol, you gain access to methods that depend on accessing an element at a specific position in a collection."
          },
          {
            "Para" : "For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `firstSpace` constant is an index into the `text` string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, `firstSpace` is used to extract the prefix that contains elements up to that index."
          },
          {
            "Para" : "You can access an element of a collection through its subscript by using any valid index except the collection’s `endIndex` property. This property is a “past the end” index that does not correspond with any element of the collection."
          },
          {
            "Para" : "Here’s an example of accessing the first character in a string through its subscript:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Collection` protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of `text` using the `first` property, which has the value of the first element of the collection, or `nil` if the collection is empty."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s `startIndex` property and finding every successor up to, and including, the `endIndex` property. All other values of the `Index` type, such as the `startIndex` property of a different collection, are invalid indices for this collection."
          },
          {
            "Para" : "Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the `MutableCollection` and `RangeReplaceableCollection` protocols, as well as for the specific type you’re using."
          },
          {
            "Para" : "You can access a slice of a collection through its ranged subscript or by calling methods like `prefix(while:)` or `suffix(_:)`. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics."
          },
          {
            "Para" : "The following example creates a `firstWord` constant by using the `prefix(while:)` method to get a slice of the `text` string."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can retrieve the same slice using the string’s ranged subscript, which takes a range expression."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The retrieved slice of `text` is equivalent in each of these cases."
          },
          {
            "Para" : "A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created."
          },
          {
            "Para" : "For example, suppose you have an array holding the number of absences from each class during a session."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:"
          },
          {
            "List-Number" : ""
          },
          {
            "Para" : "Here’s an implementation of those steps:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice."
          },
          {
            "Para" : "For example, if you update the last element of the `absences` array from `0` to `2`, the `secondHalf` slice is unchanged."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Although a sequence can be consumed as it is traversed, a collection is guaranteed to be : Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the `contains(_:)` method to test whether a collection includes an element."
          },
          {
            "Para" : "Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the `characters` view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the `Collection` protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add `Collection` conformance to your type, you must declare at least the following requirements:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "Types that conform to `Collection` are expected to provide the `startIndex` and `endIndex` properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees."
          },
          {
            "Para" : "The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its `count` property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its `count` property is an O() operation."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Collection<\/Name><USR>s:Sl<\/USR><Declaration>protocol Collection : Sequence where Self.SubSequence : Collection<\/Declaration><CommentParts><Abstract><Para>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by an indexed subscript.<\/Para><\/Abstract><Discussion><Para>Collections are used extensively throughout the standard library. When you use arrays, dictionaries, and other collections, you benefit from the operations that the <codeVoice>Collection<\/codeVoice> protocol declares and implements. In addition to the operations that collections inherit from the <codeVoice>Sequence<\/codeVoice> protocol, you gain access to methods that depend on accessing an element at a specific position in a collection.<\/Para><Para>For example, if you want to print only the first word in a string, you can search for the index of the first space, and then create a substring up to that position.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let text = \"Buffalo buffalo buffalo buffalo.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Buffalo\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstSpace<\/codeVoice> constant is an index into the <codeVoice>text<\/codeVoice> string—the position of the first space in the string. You can store indices in variables, and pass them to collection algorithms or use them later to access the corresponding element. In the example above, <codeVoice>firstSpace<\/codeVoice> is used to extract the prefix that contains elements up to that index.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Individual Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can access an element of a collection through its subscript by using any valid index except the collection’s <codeVoice>endIndex<\/codeVoice> property. This property is a “past the end” index that does not correspond with any element of the collection.<\/Para><Para>Here’s an example of accessing the first character in a string through its subscript:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstChar = text[text.startIndex]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstChar)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"B\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Collection<\/codeVoice> protocol declares and provides default implementations for many operations that depend on elements being accessible by their subscript. For example, you can also access the first character of <codeVoice>text<\/codeVoice> using the <codeVoice>first<\/codeVoice> property, which has the value of the first element of the collection, or <codeVoice>nil<\/codeVoice> if the collection is empty.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(text.first)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"B\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can pass only valid indices to collection operations. You can find a complete set of a collection’s valid indices by starting with the collection’s <codeVoice>startIndex<\/codeVoice> property and finding every successor up to, and including, the <codeVoice>endIndex<\/codeVoice> property. All other values of the <codeVoice>Index<\/codeVoice> type, such as the <codeVoice>startIndex<\/codeVoice> property of a different collection, are invalid indices for this collection.<\/Para><Para>Saved indices may become invalid as a result of mutating operations. For more information about index invalidation in mutable collections, see the reference for the <codeVoice>MutableCollection<\/codeVoice> and <codeVoice>RangeReplaceableCollection<\/codeVoice> protocols, as well as for the specific type you’re using.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Slices of a Collection<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can access a slice of a collection through its ranged subscript or by calling methods like <codeVoice>prefix(while:)<\/codeVoice> or <codeVoice>suffix(_:)<\/codeVoice>. A slice of a collection can contain zero or more of the original collection’s elements and shares the original collection’s semantics.<\/Para><Para>The following example creates a <codeVoice>firstWord<\/codeVoice> constant by using the <codeVoice>prefix(while:)<\/codeVoice> method to get a slice of the <codeVoice>text<\/codeVoice> string.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstWord = text.prefix(while: { $0 != \" \" })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstWord)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Buffalo\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can retrieve the same slice using the string’s ranged subscript, which takes a range expression.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstSpace = text.firstIndex(of: \" \") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(text[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ Prints \"Buffalo\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The retrieved slice of <codeVoice>text<\/codeVoice> is equivalent in each of these cases.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Slices Share Indices<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A collection and its slices share the same indices. An element of a collection is located under the same index in a slice as in the base collection, as long as neither the collection nor the slice has been mutated since the slice was created.<\/Para><Para>For example, suppose you have an array holding the number of absences from each class during a session.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var absences = [0, 2, 0, 4, 0, 3, 1, 0]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You’re tasked with finding the day with the most absences in the second half of the session. To find the index of the day in question, follow these steps:<\/Para><List-Number><Item><Para>Create a slice of the <codeVoice>absences<\/codeVoice> array that holds the second half of the days.<\/Para><\/Item><Item><Para>Use the <codeVoice>max(by:)<\/codeVoice> method to determine the index of the day with the most absences.<\/Para><\/Item><Item><Para>Print the result using the index found in step 2 on the original <codeVoice>absences<\/codeVoice> array.<\/Para><\/Item><\/List-Number><Para>Here’s an implementation of those steps:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let secondHalf = absences.suffix(absences.count \/ 2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Highest second-half absences: \\(absences[i])\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Highest second-half absences: 3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Slices Inherit Collection Semantics<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A slice inherits the value or reference semantics of its base collection. That is, when working with a slice of a mutable collection that has value semantics, such as an array, mutating the original collection triggers a copy of that collection and does not affect the contents of the slice.<\/Para><Para>For example, if you update the last element of the <codeVoice>absences<\/codeVoice> array from <codeVoice>0<\/codeVoice> to <codeVoice>2<\/codeVoice>, the <codeVoice>secondHalf<\/codeVoice> slice is unchanged.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[absences[7] = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(absences)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondHalf)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 3, 1, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Traversing a Collection<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although a sequence can be consumed as it is traversed, a collection is guaranteed to be <emphasis>multipass<\/emphasis>: Any element can be repeatedly accessed by saving its index. Moreover, a collection’s indices form a finite range of the positions of the collection’s elements. The fact that all collections are finite guarantees the safety of many sequence operations, such as using the <codeVoice>contains(_:)<\/codeVoice> method to test whether a collection includes an element.<\/Para><Para>Iterating over the elements of a collection by their positions yields the same elements in the same order as iterating over that collection using its iterator. This example demonstrates that the <codeVoice>characters<\/codeVoice> view of a string returns the same characters in the same order whether the view’s indices or the view itself is being iterated.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let word = \"Swift\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for character in word {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(character)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"S\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"w\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"i\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"f\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"t\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in word.indices {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(word[i])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"S\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"w\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"i\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"f\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"t\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Conforming to the Collection Protocol<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you create a custom sequence that can provide repeated access to its elements, make sure that its type conforms to the <codeVoice>Collection<\/codeVoice> protocol in order to give a more useful and more efficient interface for sequence and collection operations. To add <codeVoice>Collection<\/codeVoice> conformance to your type, you must declare at least the following requirements:<\/Para><List-Bullet><Item><Para>The <codeVoice>startIndex<\/codeVoice> and <codeVoice>endIndex<\/codeVoice> properties<\/Para><\/Item><Item><Para>A subscript that provides at least read-only access to your type’s elements<\/Para><\/Item><Item><Para>The <codeVoice>index(after:)<\/codeVoice> method for advancing an index into your collection<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h1>]]><\/rawHTML>Expected Performance<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Types that conform to <codeVoice>Collection<\/codeVoice> are expected to provide the <codeVoice>startIndex<\/codeVoice> and <codeVoice>endIndex<\/codeVoice> properties and subscript access to elements as O(1) operations. Types that are not able to guarantee this performance must document the departure, because many collection operations depend on O(1) subscripting performance for their own performance guarantees.<\/Para><Para>The performance of some collection operations depends on the type of index that the collection provides. For example, a random-access collection, which can measure the distance between two indices in O(1) time, can calculate its <codeVoice>count<\/codeVoice> property in O(1) time. Conversely, because a forward or bidirectional collection must traverse the entire collection to count the number of contained elements, accessing its <codeVoice>count<\/codeVoice> property is an O(<emphasis>n<\/emphasis>) operation.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Collection",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Collection<\/decl.name> : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:Sl4Selfxmfp\">Self<\/ref.generic_type_param>.SubSequence : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.protocol>",
        "key.groupname" : "Collection",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 205,
        "key.modulename" : "Swift",
        "key.name" : "Collection",
        "key.namelength" : 10,
        "key.nameoffset" : 818,
        "key.offset" : 808,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(safe index: <Type usr=\"s:Sl5IndexQa\">Index<\/Type>) -&gt; <Type usr=\"s:Sl7ElementQa\">Element<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 903
              }
            ],
            "key.bodylength" : 57,
            "key.bodyoffset" : 953,
            "key.doc.column" : 12,
            "key.doc.comment" : "- Returns: `Element` at index if present. Otherwise `nil`.",
            "key.doc.declaration" : "public subscript(safe index: Index) -> Element? { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"33\" column=\"12\"><Name>subscript(safe:)<\/Name><USR>s:Sl14DataStructuresE4safe7ElementQzSg5IndexQz_tcip<\/USR><Declaration>public subscript(safe index: Index) -&gt; Element? { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>Element<\/codeVoice> at index if present. Otherwise <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 33,
            "key.doc.name" : "subscript(safe:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`Element` at index if present. Otherwise `nil`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 63,
            "key.docoffset" : 836,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>safe<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:Sl7ElementQa\">Element<\/ref.associatedtype>?<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 101,
            "key.name" : "subscript(safe:)",
            "key.namelength" : 29,
            "key.nameoffset" : 910,
            "key.offset" : 910,
            "key.parsed_declaration" : "public subscript (safe index: Index) -> Element?",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 33,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sly7ElementQz5IndexQzcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sly11SubSequenceQzSny5IndexQzGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Slss5SliceVyxG11SubSequenceRtzrlEyACSny5IndexQzGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsEy11SubSequenceQzqd__cSXRd__5BoundQyd__5IndexRtzluip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsEy11SubSequenceQzys15UnboundedRange_OXEcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Collection> (safe: Self.Index) -> Self.Element?",
            "key.typeusr" : "$S4safe7ElementQzSg5IndexQz_tcD",
            "key.usr" : "s:Sl14DataStructuresE4safe7ElementQzSg5IndexQz_tcip"
          }
        ],
        "key.typename" : "Collection.Protocol",
        "key.typeusr" : "$SSl_pmD",
        "key.usr" : "s:Sl"
      },
      {
        "key.annotated_decl" : "<Declaration>protocol MutableCollection : <Type usr=\"s:Sl\">Collection<\/Type> where <Type usr=\"s:SM4Selfxmfp\">Self<\/Type>.SubSequence : <Type usr=\"s:SM\">MutableCollection<\/Type><\/Declaration>",
        "key.bodylength" : 219,
        "key.bodyoffset" : 1080,
        "key.doc.declaration" : "protocol MutableCollection : Collection where Self.SubSequence : MutableCollection",
        "key.doc.discussion" : [
          {
            "Para" : "Collections that conform to `MutableCollection` gain the ability to change the value of their elements. This example shows how you can modify one of the names in an array of students."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "In addition to changing the value of an individual element, you can also change the values of a slice of elements in a mutable collection. For example, you can sort  of a mutable collection by calling the mutable `sort()` method on a subscripted subsequence. Here’s an example that sorts the first half of an array of integers:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `MutableCollection` protocol allows changing the values of a collection’s elements but not the length of the collection itself. For operations that require adding or removing elements, see the `RangeReplaceableCollection` protocol instead."
          },
          {
            "Para" : "To add conformance to the `MutableCollection` protocol to your own custom collection, upgrade your type’s subscript to support both read and write access."
          },
          {
            "Para" : "A value stored into a subscript of a `MutableCollection` instance must subsequently be accessible at that same position. That is, for a mutable collection instance `a`, index `i`, and value `x`, the two sets of assignments in the following code sample must be equivalent:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>MutableCollection<\/Name><USR>s:SM<\/USR><Declaration>protocol MutableCollection : Collection where Self.SubSequence : MutableCollection<\/Declaration><CommentParts><Abstract><Para>A collection that supports subscript assignment.<\/Para><\/Abstract><Discussion><Para>Collections that conform to <codeVoice>MutableCollection<\/codeVoice> gain the ability to change the value of their elements. This example shows how you can modify one of the names in an array of students.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(students)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"Ben\", \"Ivy\", \"Jordell\", \"Max\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In addition to changing the value of an individual element, you can also change the values of a slice of elements in a mutable collection. For example, you can sort <emphasis>part<\/emphasis> of a mutable collection by calling the mutable <codeVoice>sort()<\/codeVoice> method on a subscripted subsequence. Here’s an example that sorts the first half of an array of integers:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [15, 40, 10, 30, 60, 25, 5, 100]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0..<4].sort()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[10, 15, 30, 40, 60, 25, 5, 100]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>MutableCollection<\/codeVoice> protocol allows changing the values of a collection’s elements but not the length of the collection itself. For operations that require adding or removing elements, see the <codeVoice>RangeReplaceableCollection<\/codeVoice> protocol instead.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Conforming to the MutableCollection Protocol<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To add conformance to the <codeVoice>MutableCollection<\/codeVoice> protocol to your own custom collection, upgrade your type’s subscript to support both read and write access.<\/Para><Para>A value stored into a subscript of a <codeVoice>MutableCollection<\/codeVoice> instance must subsequently be accessible at that same position. That is, for a mutable collection instance <codeVoice>a<\/codeVoice>, index <codeVoice>i<\/codeVoice>, and value <codeVoice>x<\/codeVoice>, the two sets of assignments in the following code sample must be equivalent:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[a[i] = x]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y = a[i]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Must be equivalent to:]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[a[i] = x]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let y = x]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "MutableCollection",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>MutableCollection<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:SM4Selfxmfp\">Self<\/ref.generic_type_param>.SubSequence : <ref.protocol usr=\"s:SM\">MutableCollection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.protocol>",
        "key.groupname" : "Collection",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 285,
        "key.modulename" : "Swift",
        "key.name" : "MutableCollection",
        "key.namelength" : 17,
        "key.nameoffset" : 1025,
        "key.offset" : 1015,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var second: <Type usr=\"s:SM7ElementQa\">Element<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1173
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 1202,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: The second `Element` in an `Array`, if not empty. Otherwise, `nil`.",
            "key.doc.declaration" : "public var second: Element? { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"41\" column=\"16\"><Name>second<\/Name><USR>s:SM14DataStructuresSKRzrlE6second7ElementSTQzSgvp<\/USR><Declaration>public var second: Element? { get }<\/Declaration><CommentParts><ResultDiscussion><Para>The second <codeVoice>Element<\/codeVoice> in an <codeVoice>Array<\/codeVoice>, if not empty. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 41,
            "key.doc.name" : "second",
            "key.doc.result_discussion" : [
              {
                "Para" : "The second `Element` in an `Array`, if not empty. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 83,
            "key.docoffset" : 1086,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>second<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:SM7ElementQa\">Element<\/ref.associatedtype>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 118,
            "key.name" : "second",
            "key.namelength" : 6,
            "key.nameoffset" : 1184,
            "key.offset" : 1180,
            "key.parsed_declaration" : "public var second: Element?",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 41,
            "key.typename" : "Self.Element?",
            "key.typeusr" : "$S7ElementSTQzSgD",
            "key.usr" : "s:SM14DataStructuresSKRzrlE6second7ElementSTQzSgvp"
          }
        ],
        "key.typename" : "MutableCollection.Protocol",
        "key.typeusr" : "$SSM_pmD",
        "key.usr" : "s:SM"
      },
      {
        "key.annotated_decl" : "<Declaration>protocol BidirectionalCollection : <Type usr=\"s:Sl\">Collection<\/Type> where <Type usr=\"s:SK4Selfxmfp\">Self<\/Type>.Indices : <Type usr=\"s:SK\">BidirectionalCollection<\/Type>, <Type usr=\"s:SK4Selfxmfp\">Self<\/Type>.SubSequence : <Type usr=\"s:SK\">BidirectionalCollection<\/Type><\/Declaration>",
        "key.bodylength" : 500,
        "key.bodyoffset" : 1337,
        "key.doc.declaration" : "protocol BidirectionalCollection : Collection where Self.Indices : BidirectionalCollection, Self.SubSequence : BidirectionalCollection",
        "key.doc.discussion" : [
          {
            "Para" : "Bidirectional collections offer traversal backward from any valid index, not including a collection’s `startIndex`. Bidirectional collections can therefore offer additional operations, such as a `last` property that provides efficient access to the last element and a `reversed()` method that presents the elements in reverse order. In addition, bidirectional collections have more efficient implementations of some sequence and collection methods, such as `suffix(_:)`."
          },
          {
            "Para" : "To add `BidirectionalProtocol` conformance to your custom types, implement the `index(before:)` method in addition to the requirements of the `Collection` protocol."
          },
          {
            "Para" : "Indices that are moved forward and backward in a bidirectional collection move by the same amount in each direction. That is, for any index `i` into a bidirectional collection `c`:"
          },
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>BidirectionalCollection<\/Name><USR>s:SK<\/USR><Declaration>protocol BidirectionalCollection : Collection where Self.Indices : BidirectionalCollection, Self.SubSequence : BidirectionalCollection<\/Declaration><CommentParts><Abstract><Para>A collection that supports backward as well as forward traversal.<\/Para><\/Abstract><Discussion><Para>Bidirectional collections offer traversal backward from any valid index, not including a collection’s <codeVoice>startIndex<\/codeVoice>. Bidirectional collections can therefore offer additional operations, such as a <codeVoice>last<\/codeVoice> property that provides efficient access to the last element and a <codeVoice>reversed()<\/codeVoice> method that presents the elements in reverse order. In addition, bidirectional collections have more efficient implementations of some sequence and collection methods, such as <codeVoice>suffix(_:)<\/codeVoice>.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Conforming to the BidirectionalCollection Protocol<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To add <codeVoice>BidirectionalProtocol<\/codeVoice> conformance to your custom types, implement the <codeVoice>index(before:)<\/codeVoice> method in addition to the requirements of the <codeVoice>Collection<\/codeVoice> protocol.<\/Para><Para>Indices that are moved forward and backward in a bidirectional collection move by the same amount in each direction. That is, for any index <codeVoice>i<\/codeVoice> into a bidirectional collection <codeVoice>c<\/codeVoice>:<\/Para><List-Bullet><Item><Para>If <codeVoice>i &gt;= c.startIndex &amp;&amp; i &lt; c.endIndex<\/codeVoice>, <codeVoice>c.index(before: c.index(after: i)) == i<\/codeVoice>.<\/Para><\/Item><Item><Para>If <codeVoice>i &gt; c.startIndex &amp;&amp; i &lt;= c.endIndex<\/codeVoice> <codeVoice>c.index(after: c.index(before: i)) == i<\/codeVoice>.<\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "BidirectionalCollection",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>BidirectionalCollection<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:SK4Selfxmfp\">Self<\/ref.generic_type_param>.Indices : <ref.protocol usr=\"s:SK\">BidirectionalCollection<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:SK4Selfxmfp\">Self<\/ref.generic_type_param>.SubSequence : <ref.protocol usr=\"s:SK\">BidirectionalCollection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.protocol>",
        "key.groupname" : "Collection",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 536,
        "key.modulename" : "Swift",
        "key.name" : "BidirectionalCollection",
        "key.namelength" : 23,
        "key.nameoffset" : 1312,
        "key.offset" : 1302,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var penultimate: <Type usr=\"s:SK7ElementQa\">Element<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1435
              }
            ],
            "key.bodylength" : 100,
            "key.bodyoffset" : 1469,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: The second-to-last `Element` in `Array`, if not empty. Otherwise, `nil`.",
            "key.doc.declaration" : "public var penultimate: Element? { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"50\" column=\"16\"><Name>penultimate<\/Name><USR>s:SK14DataStructuresE11penultimate7ElementQzSgvp<\/USR><Declaration>public var penultimate: Element? { get }<\/Declaration><CommentParts><ResultDiscussion><Para>The second-to-last <codeVoice>Element<\/codeVoice> in <codeVoice>Array<\/codeVoice>, if not empty. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 50,
            "key.doc.name" : "penultimate",
            "key.doc.result_discussion" : [
              {
                "Para" : "The second-to-last `Element` in `Array`, if not empty. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 88,
            "key.docoffset" : 1343,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>penultimate<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:SK7ElementQa\">Element<\/ref.associatedtype>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 128,
            "key.name" : "penultimate",
            "key.namelength" : 11,
            "key.nameoffset" : 1446,
            "key.offset" : 1442,
            "key.parsed_declaration" : "public var penultimate: Element?",
            "key.parsed_scope.end" : 53,
            "key.parsed_scope.start" : 50,
            "key.typename" : "Self.Element?",
            "key.typeusr" : "$S7ElementSTQzSgD",
            "key.usr" : "s:SK14DataStructuresE11penultimate7ElementQzSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func last(amount: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:SK11SubSequenceQa\">SubSequence<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1664
              }
            ],
            "key.bodylength" : 124,
            "key.bodyoffset" : 1711,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: An array with the given `amount` of elements from the end of `self`.",
            "key.doc.declaration" : "public func last(amount: Int) -> SubSequence?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"56\" column=\"17\"><Name>last(amount:)<\/Name><USR>s:SK14DataStructuresE4last6amount11SubSequenceQzSgSi_tF<\/USR><Declaration>public func last(amount: Int) -&gt; SubSequence?<\/Declaration><CommentParts><ResultDiscussion><Para>An array with the given <codeVoice>amount<\/codeVoice> of elements from the end of <codeVoice>self<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 56,
            "key.doc.name" : "last(amount:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "An array with the given `amount` of elements from the end of `self`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 84,
            "key.docoffset" : 1576,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>last<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>amount<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:SK11SubSequenceQa\">SubSequence<\/ref.associatedtype>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 165,
            "key.name" : "last(amount:)",
            "key.namelength" : 17,
            "key.nameoffset" : 1676,
            "key.offset" : 1671,
            "key.parsed_declaration" : "public func last(amount: Int) -> SubSequence?",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 56,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SK4last7ElementQzSgvp\">last<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SKsE4last7ElementQzSgvp\">last<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SKsE4last5where7ElementQzSgSbADKXE_tKF\">last(where:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BidirectionalCollection> (Self) -> (Int) -> Self.SubSequence?",
            "key.typeusr" : "$S6amount11SubSequenceQzSgSi_tcD",
            "key.usr" : "s:SK14DataStructuresE4last6amount11SubSequenceQzSgSi_tF"
          }
        ],
        "key.typename" : "BidirectionalCollection.Protocol",
        "key.typeusr" : "$SSK_pmD",
        "key.usr" : "s:SK"
      },
      {
        "key.annotated_decl" : "<Declaration>protocol RangeReplaceableCollection : <Type usr=\"s:Sl\">Collection<\/Type> where <Type usr=\"s:Sm4Selfxmfp\">Self<\/Type>.SubSequence : <Type usr=\"s:Sm\">RangeReplaceableCollection<\/Type><\/Declaration>",
        "key.bodylength" : 1142,
        "key.bodyoffset" : 1878,
        "key.doc.declaration" : "protocol RangeReplaceableCollection : Collection where Self.SubSequence : RangeReplaceableCollection",
        "key.doc.discussion" : [
          {
            "Para" : "Range-replaceable collections provide operations that insert and remove elements. For example, you can add elements to an array of strings by calling any of the inserting or appending operations that the `RangeReplaceableCollection` protocol defines."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Likewise, `RangeReplaceableCollection` types can remove one or more elements using a single operation."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Lastly, use the eponymous `replaceSubrange(_:with:)` method to replace a subrange of elements with the contents of another collection. Here, three elements in the middle of an array of integers are replaced by the five elements of a `Repeated<Int>` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add `RangeReplaceableCollection` conformance to your custom collection, add an empty initializer and the `replaceSubrange(_:with:)` method to your custom type. `RangeReplaceableCollection` provides default implementations of all its other methods using this initializer and method. For example, the `removeSubrange(_:)` method is implemented by calling `replaceSubrange(_:with:)` with an empty collection for the `newElements` parameter. You can override any of the protocol’s required methods to provide your own custom implementation."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>RangeReplaceableCollection<\/Name><USR>s:Sm<\/USR><Declaration>protocol RangeReplaceableCollection : Collection where Self.SubSequence : RangeReplaceableCollection<\/Declaration><CommentParts><Abstract><Para>A collection that supports replacement of an arbitrary subrange of elements with the elements of another collection.<\/Para><\/Abstract><Discussion><Para>Range-replaceable collections provide operations that insert and remove elements. For example, you can add elements to an array of strings by calling any of the inserting or appending operations that the <codeVoice>RangeReplaceableCollection<\/codeVoice> protocol defines.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var bugs = [\"Aphid\", \"Damselfly\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[bugs.append(\"Earwig\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[bugs.insert(contentsOf: [\"Bumblebee\", \"Cicada\"], at: 1)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(bugs)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"Aphid\", \"Bumblebee\", \"Cicada\", \"Damselfly\", \"Earwig\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Likewise, <codeVoice>RangeReplaceableCollection<\/codeVoice> types can remove one or more elements using a single operation.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[bugs.removeLast()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[bugs.removeSubrange(1...2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(bugs)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"Aphid\", \"Damselfly\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[bugs.removeAll()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(bugs)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Lastly, use the eponymous <codeVoice>replaceSubrange(_:with:)<\/codeVoice> method to replace a subrange of elements with the contents of another collection. Here, three elements in the middle of an array of integers are replaced by the five elements of a <codeVoice>Repeated&lt;Int&gt;<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[ var nums = [10, 20, 30, 40, 50]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ print(nums)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Conforming to the RangeReplaceableCollection Protocol<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To add <codeVoice>RangeReplaceableCollection<\/codeVoice> conformance to your custom collection, add an empty initializer and the <codeVoice>replaceSubrange(_:with:)<\/codeVoice> method to your custom type. <codeVoice>RangeReplaceableCollection<\/codeVoice> provides default implementations of all its other methods using this initializer and method. For example, the <codeVoice>removeSubrange(_:)<\/codeVoice> method is implemented by calling <codeVoice>replaceSubrange(_:with:)<\/codeVoice> with an empty collection for the <codeVoice>newElements<\/codeVoice> parameter. You can override any of the protocol’s required methods to provide your own custom implementation.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "RangeReplaceableCollection",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>RangeReplaceableCollection<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:Sm4Selfxmfp\">Self<\/ref.generic_type_param>.SubSequence : <ref.protocol usr=\"s:Sm\">RangeReplaceableCollection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.protocol>",
        "key.groupname" : "Collection",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1181,
        "key.modulename" : "Swift",
        "key.name" : "RangeReplaceableCollection",
        "key.namelength" : 26,
        "key.nameoffset" : 1850,
        "key.offset" : 1840,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public mutating func replaceElement(at index: <Type usr=\"s:Sl5IndexQa\">Index<\/Type>, with element: <Type usr=\"s:Sl7ElementQa\">Element<\/Type>) -&gt; <Type usr=\"s:Sl7ElementQa\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1981
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1974
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1951
              }
            ],
            "key.bodylength" : 145,
            "key.bodyoffset" : 2062,
            "key.doc.column" : 26,
            "key.doc.comment" : "Replace element at given `index` with the given `element`.",
            "key.doc.declaration" : "public mutating func replaceElement(at index: Index, with element: Element) -> Element",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"66\" column=\"26\"><Name>replaceElement(at:with:)<\/Name><USR>s:Sm14DataStructuresE14replaceElement2at4with0D0Qz5IndexQz_AFtF<\/USR><Declaration>public mutating func replaceElement(at index: Index, with element: Element) -&gt; Element<\/Declaration><CommentParts><Abstract><Para>Replace element at given <codeVoice>index<\/codeVoice> with the given <codeVoice>element<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 66,
            "key.doc.name" : "replaceElement(at:with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 63,
            "key.docoffset" : 1884,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>replaceElement<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:Sl7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:Sl7ElementQa\">Element<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 218,
            "key.name" : "replaceElement(at:with:)",
            "key.namelength" : 54,
            "key.nameoffset" : 1995,
            "key.offset" : 1990,
            "key.parsed_declaration" : "public mutating func replaceElement(at index: Index, with element: Element) -> Element",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 66,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let replaced: <Type usr=\"s:Sm4Selfxmfp\">Self<\/Type>.Element<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>replaced<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:Sm4Selfxmfp\">Self<\/ref.generic_type_param>.Element<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Collection",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 32,
                "key.name" : "replaced",
                "key.namelength" : 8,
                "key.nameoffset" : 2115,
                "key.offset" : 2111,
                "key.parsed_declaration" : "let replaced = remove(at: index)",
                "key.parsed_scope.end" : 68,
                "key.parsed_scope.start" : 68,
                "key.typename" : "Self.Element",
                "key.typeusr" : "$S7ElementSTQzD",
                "key.usr" : "s:Sm14DataStructuresE14replaceElement2at4with0D0Qz5IndexQz_AFtF8replacedL_AFvp"
              }
            ],
            "key.typename" : "<Self where Self : RangeReplaceableCollection> (inout Self) -> (Self.Index, Self.Element) -> Self.Element",
            "key.typeusr" : "$S2at4with7ElementQz5IndexQz_ADtcD",
            "key.usr" : "s:Sm14DataStructuresE14replaceElement2at4with0D0Qz5IndexQz_AFtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func replacingElement(at index: <Type usr=\"s:Sl5IndexQa\">Index<\/Type>, with element: <Type usr=\"s:Sl7ElementQa\">Element<\/Type>) -&gt; <Type usr=\"s:Sm14DataStructuresE4Selfxmfp\">Self<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2270
              }
            ],
            "key.bodylength" : 107,
            "key.bodyoffset" : 2348,
            "key.doc.column" : 17,
            "key.doc.comment" : "Immutable version of `replaceElement(at:with:)`",
            "key.doc.declaration" : "public func replacingElement(at index: Index, with element: Element) -> Self",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"74\" column=\"17\"><Name>replacingElement(at:with:)<\/Name><USR>s:Sm14DataStructuresE16replacingElement2at4withx5IndexQz_0D0QztF<\/USR><Declaration>public func replacingElement(at index: Index, with element: Element) -&gt; Self<\/Declaration><CommentParts><Abstract><Para>Immutable version of <codeVoice>replaceElement(at:with:)<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 74,
            "key.doc.name" : "replacingElement(at:with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 52,
            "key.docoffset" : 2214,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>replacingElement<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:Sl7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:Sm14DataStructuresE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 179,
            "key.name" : "replacingElement(at:with:)",
            "key.namelength" : 56,
            "key.nameoffset" : 2282,
            "key.offset" : 2277,
            "key.parsed_declaration" : "public func replacingElement(at index: Index, with element: Element) -> Self",
            "key.parsed_scope.end" : 78,
            "key.parsed_scope.start" : 74,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var copy: <Type usr=\"s:Sm4Selfxmfp\">Self<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>copy<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:Sm4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Collection",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 15,
                "key.name" : "copy",
                "key.namelength" : 4,
                "key.nameoffset" : 2361,
                "key.offset" : 2357,
                "key.parsed_declaration" : "var copy = self",
                "key.parsed_scope.end" : 75,
                "key.parsed_scope.start" : 75,
                "key.typename" : "Self",
                "key.typeusr" : "$SxD",
                "key.usr" : "s:Sm14DataStructuresE16replacingElement2at4withx5IndexQz_0D0QztF4copyL_xvp"
              }
            ],
            "key.typename" : "<Self where Self : RangeReplaceableCollection> (Self) -> (Self.Index, Self.Element) -> Self",
            "key.typeusr" : "$S2at4withx5IndexQz_7ElementQztcD",
            "key.usr" : "s:Sm14DataStructuresE16replacingElement2at4withx5IndexQz_0D0QztF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public mutating func replaceFirst(with element: <Type usr=\"s:Sl7ElementQa\">Element<\/Type>) -&gt; <Type usr=\"s:Sl7ElementQa\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 2551
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2544
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2521
              }
            ],
            "key.bodylength" : 131,
            "key.bodyoffset" : 2613,
            "key.doc.column" : 26,
            "key.doc.comment" : "Replace first element in Array with a new element.",
            "key.doc.declaration" : "public mutating func replaceFirst(with element: Element) -> Element",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"82\" column=\"26\"><Name>replaceFirst(with:)<\/Name><USR>s:Sm14DataStructuresE12replaceFirst4with7ElementQzAE_tF<\/USR><Declaration>public mutating func replaceFirst(with element: Element) -&gt; Element<\/Declaration><CommentParts><Abstract><Para>Replace first element in Array with a new element.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 82,
            "key.doc.name" : "replaceFirst(with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 55,
            "key.docoffset" : 2462,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>replaceFirst<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:Sl7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:Sl7ElementQa\">Element<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 185,
            "key.name" : "replaceFirst(with:)",
            "key.namelength" : 35,
            "key.nameoffset" : 2565,
            "key.offset" : 2560,
            "key.parsed_declaration" : "public mutating func replaceFirst(with element: Element) -> Element",
            "key.parsed_scope.end" : 87,
            "key.parsed_scope.start" : 82,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let replaced: <Type usr=\"s:Sm4Selfxmfp\">Self<\/Type>.Element<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>replaced<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:Sm4Selfxmfp\">Self<\/ref.generic_type_param>.Element<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Collection",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 28,
                "key.name" : "replaced",
                "key.namelength" : 8,
                "key.nameoffset" : 2651,
                "key.offset" : 2647,
                "key.parsed_declaration" : "let replaced = removeFirst()",
                "key.parsed_scope.end" : 84,
                "key.parsed_scope.start" : 84,
                "key.typename" : "Self.Element",
                "key.typeusr" : "$S7ElementSTQzD",
                "key.usr" : "s:Sm14DataStructuresE12replaceFirst4with7ElementQzAE_tF8replacedL_AEvp"
              }
            ],
            "key.typename" : "<Self where Self : RangeReplaceableCollection> (inout Self) -> (Self.Element) -> Self.Element",
            "key.typeusr" : "$S4with7ElementQzAC_tcD",
            "key.usr" : "s:Sm14DataStructuresE12replaceFirst4with7ElementQzAE_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func inserting(_ element: <Type usr=\"s:Sl7ElementQa\">Element<\/Type>, at index: <Type usr=\"s:Sl5IndexQa\">Index<\/Type>) -&gt; <Type usr=\"s:Sm14DataStructuresE4Selfxmfp\">Self<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2861
              }
            ],
            "key.bodylength" : 89,
            "key.bodyoffset" : 2929,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: A new `Array` with the given `element` inserted at the given `index`, if\npossible.",
            "key.doc.declaration" : "public func inserting(_ element: Element, at index: Index) -> Self",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"91\" column=\"17\"><Name>inserting(_:at:)<\/Name><USR>s:Sm14DataStructuresE9inserting_2atx7ElementQz_5IndexQztF<\/USR><Declaration>public func inserting(_ element: Element, at index: Index) -&gt; Self<\/Declaration><CommentParts><ResultDiscussion><Para>A new <codeVoice>Array<\/codeVoice> with the given <codeVoice>element<\/codeVoice> inserted at the given <codeVoice>index<\/codeVoice>, if possible.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 91,
            "key.doc.name" : "inserting(_:at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A new `Array` with the given `element` inserted at the given `index`, if possible."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 106,
            "key.docoffset" : 2751,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>inserting<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:Sl7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:Sm14DataStructuresE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 151,
            "key.name" : "inserting(_:at:)",
            "key.namelength" : 46,
            "key.nameoffset" : 2873,
            "key.offset" : 2868,
            "key.parsed_declaration" : "public func inserting(_ element: Element, at index: Index) -> Self",
            "key.parsed_scope.end" : 95,
            "key.parsed_scope.start" : 91,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var copy: <Type usr=\"s:Sm4Selfxmfp\">Self<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>copy<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:Sm4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Collection",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 15,
                "key.name" : "copy",
                "key.namelength" : 4,
                "key.nameoffset" : 2942,
                "key.offset" : 2938,
                "key.parsed_declaration" : "var copy = self",
                "key.parsed_scope.end" : 92,
                "key.parsed_scope.start" : 92,
                "key.typename" : "Self",
                "key.typeusr" : "$SxD",
                "key.usr" : "s:Sm14DataStructuresE9inserting_2atx7ElementQz_5IndexQztF4copyL_xvp"
              }
            ],
            "key.typename" : "<Self where Self : RangeReplaceableCollection> (Self) -> (Self.Element, Self.Index) -> Self",
            "key.typeusr" : "$S_2atx7ElementQz_5IndexQztcD",
            "key.usr" : "s:Sm14DataStructuresE9inserting_2atx7ElementQz_5IndexQztF"
          }
        ],
        "key.typename" : "RangeReplaceableCollection.Protocol",
        "key.typeusr" : "$SSm_pmD",
        "key.usr" : "s:Sm"
      },
      {
        "key.annotated_decl" : "<Declaration>protocol RangeReplaceableCollection : <Type usr=\"s:Sl\">Collection<\/Type> where <Type usr=\"s:Sm4Selfxmfp\">Self<\/Type>.SubSequence : <Type usr=\"s:Sm\">RangeReplaceableCollection<\/Type><\/Declaration>",
        "key.bodylength" : 282,
        "key.bodyoffset" : 3097,
        "key.doc.declaration" : "protocol RangeReplaceableCollection : Collection where Self.SubSequence : RangeReplaceableCollection",
        "key.doc.discussion" : [
          {
            "Para" : "Range-replaceable collections provide operations that insert and remove elements. For example, you can add elements to an array of strings by calling any of the inserting or appending operations that the `RangeReplaceableCollection` protocol defines."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Likewise, `RangeReplaceableCollection` types can remove one or more elements using a single operation."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Lastly, use the eponymous `replaceSubrange(_:with:)` method to replace a subrange of elements with the contents of another collection. Here, three elements in the middle of an array of integers are replaced by the five elements of a `Repeated<Int>` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add `RangeReplaceableCollection` conformance to your custom collection, add an empty initializer and the `replaceSubrange(_:with:)` method to your custom type. `RangeReplaceableCollection` provides default implementations of all its other methods using this initializer and method. For example, the `removeSubrange(_:)` method is implemented by calling `replaceSubrange(_:with:)` with an empty collection for the `newElements` parameter. You can override any of the protocol’s required methods to provide your own custom implementation."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>RangeReplaceableCollection<\/Name><USR>s:Sm<\/USR><Declaration>protocol RangeReplaceableCollection : Collection where Self.SubSequence : RangeReplaceableCollection<\/Declaration><CommentParts><Abstract><Para>A collection that supports replacement of an arbitrary subrange of elements with the elements of another collection.<\/Para><\/Abstract><Discussion><Para>Range-replaceable collections provide operations that insert and remove elements. For example, you can add elements to an array of strings by calling any of the inserting or appending operations that the <codeVoice>RangeReplaceableCollection<\/codeVoice> protocol defines.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var bugs = [\"Aphid\", \"Damselfly\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[bugs.append(\"Earwig\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[bugs.insert(contentsOf: [\"Bumblebee\", \"Cicada\"], at: 1)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(bugs)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"Aphid\", \"Bumblebee\", \"Cicada\", \"Damselfly\", \"Earwig\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Likewise, <codeVoice>RangeReplaceableCollection<\/codeVoice> types can remove one or more elements using a single operation.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[bugs.removeLast()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[bugs.removeSubrange(1...2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(bugs)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"Aphid\", \"Damselfly\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[bugs.removeAll()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(bugs)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Lastly, use the eponymous <codeVoice>replaceSubrange(_:with:)<\/codeVoice> method to replace a subrange of elements with the contents of another collection. Here, three elements in the middle of an array of integers are replaced by the five elements of a <codeVoice>Repeated&lt;Int&gt;<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[ var nums = [10, 20, 30, 40, 50]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ print(nums)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Conforming to the RangeReplaceableCollection Protocol<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To add <codeVoice>RangeReplaceableCollection<\/codeVoice> conformance to your custom collection, add an empty initializer and the <codeVoice>replaceSubrange(_:with:)<\/codeVoice> method to your custom type. <codeVoice>RangeReplaceableCollection<\/codeVoice> provides default implementations of all its other methods using this initializer and method. For example, the <codeVoice>removeSubrange(_:)<\/codeVoice> method is implemented by calling <codeVoice>replaceSubrange(_:with:)<\/codeVoice> with an empty collection for the <codeVoice>newElements<\/codeVoice> parameter. You can override any of the protocol’s required methods to provide your own custom implementation.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "RangeReplaceableCollection",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>RangeReplaceableCollection<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:Sm4Selfxmfp\">Self<\/ref.generic_type_param>.SubSequence : <ref.protocol usr=\"s:Sm\">RangeReplaceableCollection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.protocol>",
        "key.groupname" : "Collection",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 357,
        "key.modulename" : "Swift",
        "key.name" : "RangeReplaceableCollection",
        "key.namelength" : 26,
        "key.nameoffset" : 3033,
        "key.offset" : 3023,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public mutating func replaceLast(with element: <Type usr=\"s:SK7ElementQa\">Element<\/Type>) -&gt; <Type usr=\"s:SK7ElementQa\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 3202
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3195
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 3172
              }
            ],
            "key.bodylength" : 114,
            "key.bodyoffset" : 3263,
            "key.doc.column" : 26,
            "key.doc.comment" : "Replace the last element in `Self` with the given `element`.",
            "key.doc.declaration" : "public mutating func replaceLast(with element: Element) -> Element",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift\" line=\"102\" column=\"26\"><Name>replaceLast(with:)<\/Name><USR>s:Sm14DataStructuresSKRzrlE11replaceLast4with7ElementSTQzAE_tF<\/USR><Declaration>public mutating func replaceLast(with element: Element) -&gt; Element<\/Declaration><CommentParts><Abstract><Para>Replace the last element in <codeVoice>Self<\/codeVoice> with the given <codeVoice>element<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 102,
            "key.doc.name" : "replaceLast(with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 65,
            "key.docoffset" : 3103,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>replaceLast<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:SK7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:SK7ElementQa\">Element<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 167,
            "key.name" : "replaceLast(with:)",
            "key.namelength" : 34,
            "key.nameoffset" : 3216,
            "key.offset" : 3211,
            "key.parsed_declaration" : "public mutating func replaceLast(with element: Element) -> Element",
            "key.parsed_scope.end" : 107,
            "key.parsed_scope.start" : 102,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let replaced: <Type usr=\"s:Sm14DataStructuresSKRzrlE4Selfxmfp\">Self<\/Type>.Element<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/CollectionExtensions.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>replaced<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:Sm14DataStructuresSKRzrlE4Selfxmfp\">Self<\/ref.generic_type_param>.Element<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Collection",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 27,
                "key.name" : "replaced",
                "key.namelength" : 8,
                "key.nameoffset" : 3301,
                "key.offset" : 3297,
                "key.parsed_declaration" : "let replaced = removeLast()",
                "key.parsed_scope.end" : 104,
                "key.parsed_scope.start" : 104,
                "key.typename" : "Self.Element",
                "key.typeusr" : "$S7ElementSTQzD",
                "key.usr" : "s:Sm14DataStructuresSKRzrlE11replaceLast4with7ElementSTQzAE_tF8replacedL_AEvp"
              }
            ],
            "key.typename" : "<Self where Self : BidirectionalCollection, Self : RangeReplaceableCollection> (inout Self) -> (Self.Element) -> Self.Element",
            "key.typeusr" : "$S4with7ElementSTQzAC_tcD",
            "key.usr" : "s:Sm14DataStructuresSKRzrlE11replaceLast4with7ElementSTQzAE_tF"
          }
        ],
        "key.typename" : "RangeReplaceableCollection.Protocol",
        "key.typeusr" : "$SSm_pmD",
        "key.usr" : "s:Sm"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4110,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol DictionaryProtocol : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 143
          }
        ],
        "key.bodylength" : 378,
        "key.bodyoffset" : 191,
        "key.doc.column" : 17,
        "key.doc.comment" : "Interface for Dictionary-like structures.",
        "key.doc.declaration" : "public protocol DictionaryProtocol : Collection",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"10\" column=\"17\"><Name>DictionaryProtocol<\/Name><USR>s:14DataStructures18DictionaryProtocolP<\/USR><Declaration>public protocol DictionaryProtocol : Collection<\/Declaration><CommentParts><Abstract><Para>Interface for Dictionary-like structures.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "DictionaryProtocol",
        "key.doc.type" : "Class",
        "key.doclength" : 46,
        "key.docoffset" : 97,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 179
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DictionaryProtocol<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Collection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 420,
        "key.name" : "DictionaryProtocol",
        "key.namelength" : 18,
        "key.nameoffset" : 159,
        "key.offset" : 150,
        "key.parsed_declaration" : "public protocol DictionaryProtocol: Collection",
        "key.parsed_scope.end" : 29,
        "key.parsed_scope.start" : 10,
        "key.runtime_name" : "_TtP18DictionaryProtocol18DictionaryProtocol_",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Associated Types",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 200
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.comment" : "Key type.",
            "key.doc.declaration" : "associatedtype Key : Hashable",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"15\" column=\"20\"><Name>Key<\/Name><USR>s:14DataStructures18DictionaryProtocolP3KeyQa<\/USR><Declaration>associatedtype Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Key type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 15,
            "key.doc.name" : "Key",
            "key.doc.type" : "Other",
            "key.doclength" : 14,
            "key.docoffset" : 230,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>Key<\/decl.name> : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 28,
            "key.name" : "Key",
            "key.namelength" : 3,
            "key.nameoffset" : 263,
            "key.offset" : 248,
            "key.parsed_declaration" : "associatedtype Key: Hashable",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.typename" : "Self.Key.Type",
            "key.typeusr" : "$S3Key14DataStructures18DictionaryProtocolPQzmD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolP3KeyQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype Value<\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.comment" : "Value type.",
            "key.doc.declaration" : "associatedtype Value",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"18\" column=\"20\"><Name>Value<\/Name><USR>s:14DataStructures18DictionaryProtocolP5ValueQa<\/USR><Declaration>associatedtype Value<\/Declaration><CommentParts><Abstract><Para>Value type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 18,
            "key.doc.name" : "Value",
            "key.doc.type" : "Other",
            "key.doclength" : 16,
            "key.docoffset" : 282,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>Value<\/decl.name><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 20,
            "key.name" : "Value",
            "key.namelength" : 5,
            "key.nameoffset" : 317,
            "key.offset" : 302,
            "key.parsed_declaration" : "associatedtype Value",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.typename" : "Self.Value.Type",
            "key.typeusr" : "$S5Value14DataStructures18DictionaryProtocolPQzmD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolP5ValueQa"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - Initializers",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 331
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init()<\/Declaration>",
            "key.doc.column" : 5,
            "key.doc.comment" : "Create an empty `DictionaryProtocol` value.",
            "key.doc.declaration" : "init()",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"23\" column=\"5\"><Name>init()<\/Name><USR>s:14DataStructures18DictionaryProtocolPxycfc<\/USR><Declaration>init()<\/Declaration><CommentParts><Abstract><Para>Create an empty <codeVoice>DictionaryProtocol<\/codeVoice> value.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 23,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 48,
            "key.docoffset" : 357,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 6,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 409,
            "key.offset" : 409,
            "key.parsed_declaration" : "init()",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPAAEyxSay3KeyQzG_Say5ValueQzGtcfc\">init(_:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPAAEyxSay3KeyQz_5ValueQztGcfc\">init(_:)<\/RelatedName>"
              }
            ],
            "key.typename" : "<Self where Self : DictionaryProtocol> (Self.Type) -> () -> Self",
            "key.typeusr" : "$SxycD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPxycfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: - Subscripts",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 424
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>subscript(key: <Type usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/Type>) -&gt; <Type usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/Type>? { get set }<\/Declaration>",
            "key.bodylength" : 9,
            "key.bodyoffset" : 558,
            "key.doc.column" : 5,
            "key.doc.comment" : "- Returns: `Value` for the given `key`, if present. Otherwise, `nil`.",
            "key.doc.declaration" : "subscript(key: Key) -> Value? { get set }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"28\" column=\"5\"><Name>subscript(_:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPy5ValueQzSg3KeyQzcip<\/USR><Declaration>subscript(key: Key) -&gt; Value? { get set }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>Value<\/codeVoice> for the given <codeVoice>key<\/codeVoice>, if present. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 28,
            "key.doc.name" : "subscript(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`Value` for the given `key`, if present. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 74,
            "key.docoffset" : 448,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/ref.associatedtype>?<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 42,
            "key.name" : "subscript(_:)",
            "key.namelength" : 20,
            "key.nameoffset" : 526,
            "key.offset" : 526,
            "key.parsed_declaration" : "subscript (key: Key) -> Value?",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 28,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sly7ElementQz5IndexQzcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sly11SubSequenceQzSny5IndexQzGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl14DataStructuresE4safe7ElementQzSg5IndexQz_tcip\">subscript(safe:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsEy11SubSequenceQzqd__cSXRd__5BoundQyd__5IndexRtzluip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsEy11SubSequenceQzys15UnboundedRange_OXEcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Slss5SliceVyxG11SubSequenceRtzrlEyACSny5IndexQzGcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DictionaryProtocol> (Self.Key) -> Self.Value?",
            "key.typeusr" : "$Sy5ValueQzSg3KeyQzcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPy5ValueQzSg3KeyQzcip"
          }
        ],
        "key.typename" : "DictionaryProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures18DictionaryProtocol_pmD",
        "key.usr" : "s:14DataStructures18DictionaryProtocolP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol DictionaryProtocol : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.bodylength" : 508,
        "key.bodyoffset" : 602,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol DictionaryProtocol : Collection",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"10\" column=\"17\"><Name>DictionaryProtocol<\/Name><USR>s:14DataStructures18DictionaryProtocolP<\/USR><Declaration>public protocol DictionaryProtocol : Collection<\/Declaration><CommentParts><Abstract><Para>Interface for Dictionary-like structures.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "DictionaryProtocol",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DictionaryProtocol<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 539,
        "key.name" : "DictionaryProtocol",
        "key.namelength" : 18,
        "key.nameoffset" : 582,
        "key.offset" : 572,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public convenience init(_ xs: [<Type usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/Type>], _ ys: [<Type usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/Type>])<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 754
              }
            ],
            "key.bodylength" : 88,
            "key.bodyoffset" : 795,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a `DictionaryProtocol` with two parallel arrays.\n\n- Note: Useful for creating a dataset from x- and y-value arrays.",
            "key.doc.declaration" : "public convenience init(_ xs: [Key], _ ys: [Value])",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"36\" column=\"12\"><Name>init(_:_:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPAAEyxSay3KeyQzG_Say5ValueQzGtcfc<\/USR><Declaration>public convenience init(_ xs: [Key], _ ys: [Value])<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>DictionaryProtocol<\/codeVoice> with two parallel arrays.<\/Para><\/Abstract><Discussion><Note><Para>Useful for creating a dataset from x- and y-value arrays.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 36,
            "key.doc.name" : "init(_:_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 142,
            "key.docoffset" : 608,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>xs<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/ref.associatedtype>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>ys<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/ref.associatedtype>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 123,
            "key.name" : "init(_:_:)",
            "key.namelength" : 32,
            "key.nameoffset" : 761,
            "key.offset" : 761,
            "key.parsed_declaration" : "public init(_ xs: [Key], _ ys: [Value])",
            "key.parsed_scope.end" : 39,
            "key.parsed_scope.start" : 36,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPxycfc\">init()<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPAAEyxSay3KeyQz_5ValueQztGcfc\">init(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DictionaryProtocol> (Self.Type) -> ([Self.Key], [Self.Value]) -> Self",
            "key.typeusr" : "$SyxSay3KeyQzG_Say5ValueQzGtcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPAAEyxSay3KeyQzG_Say5ValueQzGtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public convenience init(_ keysAndValues: [(<Type usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/Type>, <Type usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/Type>)])<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 953
              }
            ],
            "key.bodylength" : 109,
            "key.bodyoffset" : 999,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a `DictionaryProtocol` with an array of tuples.",
            "key.doc.declaration" : "public convenience init(_ keysAndValues: [(Key, Value)])",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"42\" column=\"12\"><Name>init(_:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPAAEyxSay3KeyQz_5ValueQztGcfc<\/USR><Declaration>public convenience init(_ keysAndValues: [(Key, Value)])<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>DictionaryProtocol<\/codeVoice> with an array of tuples.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 42,
            "key.doc.name" : "init(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 59,
            "key.docoffset" : 890,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keysAndValues<\/decl.var.parameter.name>: <decl.var.parameter.type>[<tuple>(<tuple.element><tuple.element.type><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>)<\/tuple>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 149,
            "key.name" : "init(_:)",
            "key.namelength" : 37,
            "key.nameoffset" : 960,
            "key.offset" : 960,
            "key.parsed_declaration" : "public init(_ keysAndValues: [(Key, Value)])",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 42,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPxycfc\">init()<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPAAEyxSay3KeyQzG_Say5ValueQzGtcfc\">init(_:_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DictionaryProtocol> (Self.Type) -> ([(Self.Key, Self.Value)]) -> Self",
            "key.typeusr" : "$SyxSay3KeyQz_5ValueQztGcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPAAEyxSay3KeyQz_5ValueQztGcfc"
          }
        ],
        "key.typename" : "DictionaryProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures18DictionaryProtocol_pmD",
        "key.usr" : "s:14DataStructures18DictionaryProtocolP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol DictionaryProtocol : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.bodylength" : 497,
        "key.bodyoffset" : 1185,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol DictionaryProtocol : Collection",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"10\" column=\"17\"><Name>DictionaryProtocol<\/Name><USR>s:14DataStructures18DictionaryProtocolP<\/USR><Declaration>public protocol DictionaryProtocol : Collection<\/Declaration><CommentParts><Abstract><Para>Interface for Dictionary-like structures.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "DictionaryProtocol",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DictionaryProtocol<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 570,
        "key.name" : "DictionaryProtocol",
        "key.namelength" : 18,
        "key.nameoffset" : 1123,
        "key.offset" : 1113,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1194
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func merge(with dictionary: <Type usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE4Selfxmfp\">Self<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1313
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1306
              }
            ],
            "key.bodylength" : 53,
            "key.bodyoffset" : 1357,
            "key.doc.column" : 26,
            "key.doc.comment" : "Merge the contents of the given `dictionary` destructively into this one.",
            "key.doc.declaration" : "public mutating func merge(with dictionary: Self)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"55\" column=\"26\"><Name>merge(with:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE5merge4withyx_tF<\/USR><Declaration>public mutating func merge(with dictionary: Self)<\/Declaration><CommentParts><Abstract><Para>Merge the contents of the given <codeVoice>dictionary<\/codeVoice> destructively into this one.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 55,
            "key.doc.name" : "merge(with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 78,
            "key.docoffset" : 1224,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>merge<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dictionary<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 89,
            "key.name" : "merge(with:)",
            "key.namelength" : 28,
            "key.nameoffset" : 1327,
            "key.offset" : 1322,
            "key.parsed_declaration" : "public mutating func merge(with dictionary: Self)",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 55,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE5merge4withyx_tF\">merge(with: Self)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DictionaryProtocol, Self.Element == (key: Self.Key, value: Self.Value)> (inout Self) -> (Self) -> ()",
            "key.typeusr" : "$S4withyx_tcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE5merge4withyx_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func merged(with dictionary: <Type usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE4Selfxmfp\">Self<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1543
              }
            ],
            "key.bodylength" : 86,
            "key.bodyoffset" : 1594,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: A new `Dictionary` with the contents of the given `dictionary` merged `self`\nover those of `self`.",
            "key.doc.declaration" : "public func merged(with dictionary: Self) -> Self",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"61\" column=\"17\"><Name>merged(with:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE6merged4withxx_tF<\/USR><Declaration>public func merged(with dictionary: Self) -&gt; Self<\/Declaration><CommentParts><ResultDiscussion><Para>A new <codeVoice>Dictionary<\/codeVoice> with the contents of the given <codeVoice>dictionary<\/codeVoice> merged <codeVoice>self<\/codeVoice> over those of <codeVoice>self<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 61,
            "key.doc.name" : "merged(with:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A new `Dictionary` with the contents of the given `dictionary` merged `self` over those of `self`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 122,
            "key.docoffset" : 1417,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>merged<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dictionary<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 131,
            "key.name" : "merged(with:)",
            "key.namelength" : 29,
            "key.nameoffset" : 1555,
            "key.offset" : 1550,
            "key.parsed_declaration" : "public func merged(with dictionary: Self) -> Self",
            "key.parsed_scope.end" : 65,
            "key.parsed_scope.start" : 61,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE6merged4withxx_tF\">merged(with: Self) -&gt; Self<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var copy: <Type usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE4Selfxmfp\">Self<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>copy<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 15,
                "key.name" : "copy",
                "key.namelength" : 4,
                "key.nameoffset" : 1607,
                "key.offset" : 1603,
                "key.parsed_declaration" : "var copy = self",
                "key.parsed_scope.end" : 62,
                "key.parsed_scope.start" : 62,
                "key.typename" : "Self",
                "key.typeusr" : "$SxD",
                "key.usr" : "s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE6merged4withxx_tF4copyL_xvp"
              }
            ],
            "key.typename" : "<Self where Self : DictionaryProtocol, Self.Element == (key: Self.Key, value: Self.Value)> (Self) -> (Self) -> Self",
            "key.typeusr" : "$S4withxx_tcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE6merged4withxx_tF"
          }
        ],
        "key.typename" : "DictionaryProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures18DictionaryProtocol_pmD",
        "key.usr" : "s:14DataStructures18DictionaryProtocolP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol DictionaryProtocol : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.bodylength" : 689,
        "key.bodyoffset" : 1755,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol DictionaryProtocol : Collection",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"10\" column=\"17\"><Name>DictionaryProtocol<\/Name><USR>s:14DataStructures18DictionaryProtocolP<\/USR><Declaration>public protocol DictionaryProtocol : Collection<\/Declaration><CommentParts><Abstract><Para>Interface for Dictionary-like structures.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "DictionaryProtocol",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DictionaryProtocol<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 760,
        "key.name" : "DictionaryProtocol",
        "key.namelength" : 18,
        "key.nameoffset" : 1695,
        "key.offset" : 1685,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func ensureValue(for key: <Type usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1836
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1829
              }
            ],
            "key.bodylength" : 57,
            "key.bodyoffset" : 1877,
            "key.doc.column" : 26,
            "key.doc.comment" : "Ensure that an Array-type value exists for the given `key`.",
            "key.doc.declaration" : "public mutating func ensureValue(for key: Key)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"71\" column=\"26\"><Name>ensureValue(for:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPAASm5ValueRpzrlE06ensureE03fory3KeyQz_tF<\/USR><Declaration>public mutating func ensureValue(for key: Key)<\/Declaration><CommentParts><Abstract><Para>Ensure that an Array-type value exists for the given <codeVoice>key<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 71,
            "key.doc.name" : "ensureValue(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 64,
            "key.docoffset" : 1761,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ensureValue<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 90,
            "key.name" : "ensureValue(for:)",
            "key.namelength" : 25,
            "key.nameoffset" : 1850,
            "key.offset" : 1845,
            "key.parsed_declaration" : "public mutating func ensureValue(for key: Key)",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 71,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPA2aB5ValueRpzrlE06ensureE03fory3KeyQz_tF\">ensureValue(for: Key)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DictionaryProtocol, Self.Value : RangeReplaceableCollection> (inout Self) -> (Self.Key) -> ()",
            "key.typeusr" : "$S3fory3KeyQz_tcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPAASm5ValueRpzrlE06ensureE03fory3KeyQz_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func safelyAppend(_ value: <Type usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, toArrayWith key: <Type usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 2035
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2028
              }
            ],
            "key.bodylength" : 68,
            "key.bodyoffset" : 2109,
            "key.doc.column" : 26,
            "key.doc.comment" : "Safely append the given `value` to the Array-type `value` for the given `key`.",
            "key.doc.declaration" : "public mutating func safelyAppend(_ value: Value.Element, toArrayWith key: Key)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"76\" column=\"26\"><Name>safelyAppend(_:toArrayWith:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPAASm5ValueRpzrlE12safelyAppend_11toArrayWithyAD_7ElementQZ_3KeyQztF<\/USR><Declaration>public mutating func safelyAppend(_ value: Value.Element, toArrayWith key: Key)<\/Declaration><CommentParts><Abstract><Para>Safely append the given <codeVoice>value<\/codeVoice> to the Array-type <codeVoice>value<\/codeVoice> for the given <codeVoice>key<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 76,
            "key.doc.name" : "safelyAppend(_:toArrayWith:)",
            "key.doc.type" : "Function",
            "key.doclength" : 83,
            "key.docoffset" : 1941,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>safelyAppend<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/ref.associatedtype>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>toArrayWith<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 134,
            "key.name" : "safelyAppend(_:toArrayWith:)",
            "key.namelength" : 58,
            "key.nameoffset" : 2049,
            "key.offset" : 2044,
            "key.parsed_declaration" : "public mutating func safelyAppend(_ value: Value.Element, toArrayWith key: Key)",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 76,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DictionaryProtocol, Self.Value : RangeReplaceableCollection> (inout Self) -> (Self.Value.Element, Self.Key) -> ()",
            "key.typeusr" : "$S_11toArrayWithy5Value_7ElementQZ_3KeyQztcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPAASm5ValueRpzrlE12safelyAppend_11toArrayWithyAD_7ElementQZ_3KeyQztF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func safelyAppendContents(of values: <Type usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/Type>, toArrayWith key: <Type usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 2285
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2278
              }
            ],
            "key.bodylength" : 81,
            "key.bodyoffset" : 2361,
            "key.doc.column" : 26,
            "key.doc.comment" : "Safely append the contents of an array to the Array-type `value` for the given `key`.",
            "key.doc.declaration" : "public mutating func safelyAppendContents(of values: Value, toArrayWith key: Key)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"82\" column=\"26\"><Name>safelyAppendContents(of:toArrayWith:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPAASm5ValueRpzrlE20safelyAppendContents2of11toArrayWithyAE_3KeyQztF<\/USR><Declaration>public mutating func safelyAppendContents(of values: Value, toArrayWith key: Key)<\/Declaration><CommentParts><Abstract><Para>Safely append the contents of an array to the Array-type <codeVoice>value<\/codeVoice> for the given <codeVoice>key<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 82,
            "key.doc.name" : "safelyAppendContents(of:toArrayWith:)",
            "key.doc.type" : "Function",
            "key.doclength" : 90,
            "key.docoffset" : 2184,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>safelyAppendContents<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>values<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>toArrayWith<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 149,
            "key.name" : "safelyAppendContents(of:toArrayWith:)",
            "key.namelength" : 60,
            "key.nameoffset" : 2299,
            "key.offset" : 2294,
            "key.parsed_declaration" : "public mutating func safelyAppendContents(of values: Value, toArrayWith key: Key)",
            "key.parsed_scope.end" : 85,
            "key.parsed_scope.start" : 82,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DictionaryProtocol, Self.Value : RangeReplaceableCollection> (inout Self) -> (Self.Value, Self.Key) -> ()",
            "key.typeusr" : "$S2of11toArrayWithy5ValueQz_3KeyQztcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPAASm5ValueRpzrlE20safelyAppendContents2of11toArrayWithyAE_3KeyQztF"
          }
        ],
        "key.typename" : "DictionaryProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures18DictionaryProtocol_pmD",
        "key.usr" : "s:14DataStructures18DictionaryProtocolP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol DictionaryProtocol : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.bodylength" : 377,
        "key.bodyoffset" : 2543,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol DictionaryProtocol : Collection",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"10\" column=\"17\"><Name>DictionaryProtocol<\/Name><USR>s:14DataStructures18DictionaryProtocolP<\/USR><Declaration>public protocol DictionaryProtocol : Collection<\/Declaration><CommentParts><Abstract><Para>Interface for Dictionary-like structures.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "DictionaryProtocol",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DictionaryProtocol<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 474,
        "key.name" : "DictionaryProtocol",
        "key.namelength" : 18,
        "key.nameoffset" : 2457,
        "key.offset" : 2447,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func safelyAndUniquelyAppend(_ value: <Type usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, toArrayWith key: <Type usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 2716
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2709
              }
            ],
            "key.bodylength" : 117,
            "key.bodyoffset" : 2801,
            "key.doc.column" : 26,
            "key.doc.comment" : "Safely append value to the array value for a given key.\n\nIf this value already exists in desired array, the new value will not be added.",
            "key.doc.declaration" : "public mutating func safelyAndUniquelyAppend(_ value: Value.Element, toArrayWith key: Key)",
            "key.doc.discussion" : [
              {
                "Para" : "If this value already exists in desired array, the new value will not be added."
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"93\" column=\"26\"><Name>safelyAndUniquelyAppend(_:toArrayWith:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPAASm5ValueRpzSQAD_7ElementRPzrlE23safelyAndUniquelyAppend_11toArrayWithyAG_3KeyQztF<\/USR><Declaration>public mutating func safelyAndUniquelyAppend(_ value: Value.Element, toArrayWith key: Key)<\/Declaration><CommentParts><Abstract><Para>Safely append value to the array value for a given key.<\/Para><\/Abstract><Discussion><Para>If this value already exists in desired array, the new value will not be added.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 93,
            "key.doc.name" : "safelyAndUniquelyAppend(_:toArrayWith:)",
            "key.doc.type" : "Function",
            "key.doclength" : 156,
            "key.docoffset" : 2549,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>safelyAndUniquelyAppend<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP5ValueQa\">Value<\/ref.associatedtype>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>toArrayWith<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 194,
            "key.name" : "safelyAndUniquelyAppend(_:toArrayWith:)",
            "key.namelength" : 69,
            "key.nameoffset" : 2730,
            "key.offset" : 2725,
            "key.parsed_declaration" : "public mutating func safelyAndUniquelyAppend(_ value: Value.Element, toArrayWith key: Key)",
            "key.parsed_scope.end" : 97,
            "key.parsed_scope.start" : 93,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DictionaryProtocol, Self.Value : RangeReplaceableCollection, Self.Value.Element : Equatable> (inout Self) -> (Self.Value.Element, Self.Key) -> ()",
            "key.typeusr" : "$S_11toArrayWithy5Value_7ElementQZ_3KeyQztcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPAASm5ValueRpzSQAD_7ElementRPzrlE23safelyAndUniquelyAppend_11toArrayWithyAG_3KeyQztF"
          }
        ],
        "key.typename" : "DictionaryProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures18DictionaryProtocol_pmD",
        "key.usr" : "s:14DataStructures18DictionaryProtocolP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol DictionaryProtocol : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.bodylength" : 164,
        "key.bodyoffset" : 2985,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol DictionaryProtocol : Collection",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"10\" column=\"17\"><Name>DictionaryProtocol<\/Name><USR>s:14DataStructures18DictionaryProtocolP<\/USR><Declaration>public protocol DictionaryProtocol : Collection<\/Declaration><CommentParts><Abstract><Para>Interface for Dictionary-like structures.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "DictionaryProtocol",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DictionaryProtocol<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 227,
        "key.name" : "DictionaryProtocol",
        "key.namelength" : 18,
        "key.nameoffset" : 2933,
        "key.offset" : 2923,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func ensureValue(for key: <Type usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 3049
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3042
              }
            ],
            "key.bodylength" : 57,
            "key.bodyoffset" : 3090,
            "key.doc.column" : 26,
            "key.doc.comment" : "Ensure there is a value for a given `key`.",
            "key.doc.declaration" : "public mutating func ensureValue(for key: Key)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"103\" column=\"26\"><Name>ensureValue(for:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPA2aB5ValueRpzrlE06ensureE03fory3KeyQz_tF<\/USR><Declaration>public mutating func ensureValue(for key: Key)<\/Declaration><CommentParts><Abstract><Para>Ensure there is a value for a given <codeVoice>key<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 103,
            "key.doc.name" : "ensureValue(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 47,
            "key.docoffset" : 2991,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ensureValue<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures18DictionaryProtocolP3KeyQa\">Key<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 90,
            "key.name" : "ensureValue(for:)",
            "key.namelength" : 25,
            "key.nameoffset" : 3063,
            "key.offset" : 3058,
            "key.parsed_declaration" : "public mutating func ensureValue(for key: Key)",
            "key.parsed_scope.end" : 105,
            "key.parsed_scope.start" : 103,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPAASm5ValueRpzrlE06ensureE03fory3KeyQz_tF\">ensureValue(for: Key)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DictionaryProtocol, Self.Value : DictionaryProtocol> (inout Self) -> (Self.Key) -> ()",
            "key.typeusr" : "$S3fory3KeyQz_tcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPA2aB5ValueRpzrlE06ensureE03fory3KeyQz_tF"
          }
        ],
        "key.typename" : "DictionaryProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures18DictionaryProtocol_pmD",
        "key.usr" : "s:14DataStructures18DictionaryProtocolP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol DictionaryProtocol : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.bodylength" : 731,
        "key.bodyoffset" : 3294,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol DictionaryProtocol : Collection",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"10\" column=\"17\"><Name>DictionaryProtocol<\/Name><USR>s:14DataStructures18DictionaryProtocolP<\/USR><Declaration>public protocol DictionaryProtocol : Collection<\/Declaration><CommentParts><Abstract><Para>Interface for Dictionary-like structures.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "DictionaryProtocol",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DictionaryProtocol<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 874,
        "key.name" : "DictionaryProtocol",
        "key.namelength" : 18,
        "key.nameoffset" : 3162,
        "key.offset" : 3152,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func merge(with dictionary: <Type usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE4Selfxmfp\">Self<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 3506
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3499
              }
            ],
            "key.bodylength" : 194,
            "key.bodyoffset" : 3550,
            "key.doc.column" : 26,
            "key.doc.comment" : "Merge the contents of the given `dictionary` destructively into this one.\n\n- warning: The value of a given key of the given `dictionary` will override that of\nthis one.",
            "key.doc.declaration" : "public mutating func merge(with dictionary: Self)",
            "key.doc.discussion" : [
              {
                "Warning" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"117\" column=\"26\"><Name>merge(with:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE5merge4withyx_tF<\/USR><Declaration>public mutating func merge(with dictionary: Self)<\/Declaration><CommentParts><Abstract><Para>Merge the contents of the given <codeVoice>dictionary<\/codeVoice> destructively into this one.<\/Para><\/Abstract><Discussion><Warning><Para>The value of a given key of the given <codeVoice>dictionary<\/codeVoice> will override that of this one.<\/Para><\/Warning><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 117,
            "key.doc.name" : "merge(with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 196,
            "key.docoffset" : 3299,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>merge<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dictionary<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 230,
            "key.name" : "merge(with:)",
            "key.namelength" : 28,
            "key.nameoffset" : 3520,
            "key.offset" : 3515,
            "key.parsed_declaration" : "public mutating func merge(with dictionary: Self)",
            "key.parsed_scope.end" : 124,
            "key.parsed_scope.start" : 117,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE5merge4withyx_tF\">merge(with: Self)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DictionaryProtocol, Self.Element == (Self.Key, Self.Value), Self.Value : DictionaryProtocol, Self.Value.Element == (Self.Value.Key, Self.Value.Value)> (inout Self) -> (Self) -> ()",
            "key.typeusr" : "$S4withyx_tcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE5merge4withyx_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func merged(with dictionary: <Type usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE4Selfxmfp\">Self<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 3884
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3877
              }
            ],
            "key.bodylength" : 86,
            "key.bodyoffset" : 3937,
            "key.doc.column" : 26,
            "key.doc.comment" : "- returns: A new `Dictionary` with the contents of the given `dictionary` merged `self`\nover those of `self`.",
            "key.doc.declaration" : "public mutating func merged(with dictionary: Self) -> Self",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift\" line=\"128\" column=\"26\"><Name>merged(with:)<\/Name><USR>s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE6merged4withxx_tF<\/USR><Declaration>public mutating func merged(with dictionary: Self) -&gt; Self<\/Declaration><CommentParts><ResultDiscussion><Para>A new <codeVoice>Dictionary<\/codeVoice> with the contents of the given <codeVoice>dictionary<\/codeVoice> merged <codeVoice>self<\/codeVoice> over those of <codeVoice>self<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 128,
            "key.doc.name" : "merged(with:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A new `Dictionary` with the contents of the given `dictionary` merged `self` over those of `self`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 122,
            "key.docoffset" : 3751,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>merged<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dictionary<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 131,
            "key.name" : "merged(with:)",
            "key.namelength" : 29,
            "key.nameoffset" : 3898,
            "key.offset" : 3893,
            "key.parsed_declaration" : "public mutating func merged(with dictionary: Self) -> Self",
            "key.parsed_scope.end" : 132,
            "key.parsed_scope.start" : 128,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz3key_5ValueQz5valuet7ElementRtzrlE6merged4withxx_tF\">merged(with: Self) -&gt; Self<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var copy: <Type usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE4Selfxmfp\">Self<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/DictionaryProtocol.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>copy<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 15,
                "key.name" : "copy",
                "key.namelength" : 4,
                "key.nameoffset" : 3950,
                "key.offset" : 3946,
                "key.parsed_declaration" : "var copy = self",
                "key.parsed_scope.end" : 129,
                "key.parsed_scope.start" : 129,
                "key.typename" : "Self",
                "key.typeusr" : "$SxD",
                "key.usr" : "s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE6merged4withxx_tF4copyL_xvp"
              }
            ],
            "key.typename" : "<Self where Self : DictionaryProtocol, Self.Element == (Self.Key, Self.Value), Self.Value : DictionaryProtocol, Self.Value.Element == (Self.Value.Key, Self.Value.Value)> (inout Self) -> (Self) -> Self",
            "key.typeusr" : "$S4withxx_tcD",
            "key.usr" : "s:14DataStructures18DictionaryProtocolPAA3KeyQz_5ValueQzt7ElementRtzAabGRQAF_ADQZ_AF_AFQZtAF_AHRTzrlE6merged4withxx_tF"
          }
        ],
        "key.typename" : "DictionaryProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures18DictionaryProtocol_pmD",
        "key.usr" : "s:14DataStructures18DictionaryProtocolP"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Dictionary&lt;Key, Value&gt; where Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 38,
        "key.bodyoffset" : 4070,
        "key.doc.declaration" : "struct Dictionary<Key, Value> where Key : Hashable",
        "key.doc.discussion" : [
          {
            "Para" : "A dictionary is a type of hash table, providing fast access to the entries it contains. Each entry in the table is identified using its key, which is a hashable type such as a string or number. You use that key to retrieve the corresponding value, which can be any object. In other languages, similar data types are known as hashes or associated arrays."
          },
          {
            "Para" : "Create a new dictionary by using a dictionary literal. A dictionary literal is a comma-separated list of key-value pairs, in which a colon separates each key from its associated value, surrounded by square brackets. You can assign a dictionary literal to a variable or constant or pass it to a function that expects a dictionary."
          },
          {
            "Para" : "Here’s how you would create a dictionary of HTTP response codes and their related messages:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `responseMessages` variable is inferred to have type `[Int: String]`. The `Key` type of the dictionary is `Int`, and the `Value` type of the dictionary is `String`."
          },
          {
            "Para" : "To create a dictionary with no key-value pairs, use an empty dictionary literal (`[:]`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Any type that conforms to the `Hashable` protocol can be used as a dictionary’s `Key` type, including all of Swift’s basic types. You can use your own custom types as dictionary keys by making them conform to the `Hashable` protocol."
          },
          {
            "Para" : "The most common way to access values in a dictionary is to use a key as a subscript. Subscripting with a key takes the following form:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Subscripting a dictionary with a key returns an optional value, because a dictionary might not hold a value for the key that you use in the subscript."
          },
          {
            "Para" : "The next example uses key-based subscripting of the `responseMessages` dictionary with two keys that exist in the dictionary and one that does not."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also update, modify, or remove keys and values from a dictionary using the key-based subscript. To add a new key-value pair, assign a value to a key that isn’t yet a part of the dictionary."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Update an existing value by assigning a new value to a key that already exists in the dictionary. If you assign `nil` to an existing key, the key and its associated value are removed. The following example updates the value for the `404` code to be simply “Not found” and removes the key-value pair for the `500` code entirely."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "In a mutable `Dictionary` instance, you can modify in place a value that you’ve accessed through a keyed subscript. The code sample below declares a dictionary called `interestingNumbers` with string keys and values that are integer arrays, then sorts each array in-place in descending order."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every dictionary is an unordered collection of key-value pairs. You can iterate over a dictionary using a `for`-`in` loop, decomposing each key-value pair into the elements of a tuple."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The order of key-value pairs in a dictionary is stable between mutations but is otherwise unpredictable. If you need an ordered collection of key-value pairs and don’t need the fast key lookup that `Dictionary` provides, see the `DictionaryLiteral` type for an alternative."
          },
          {
            "Para" : "You can search a dictionary’s contents for a particular value using the `contains(where:)` or `firstIndex(where:)` methods supplied by default implementation. The following example checks to see if `imagePaths` contains any paths in the `\"\/glyphs\"` directory:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that in this example, `imagePaths` is subscripted using a dictionary index. Unlike the key-based subscript, the index-based subscript returns the corresponding key-value pair as a non-optional tuple."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A dictionary’s indices stay valid across additions to the dictionary as long as the dictionary has enough capacity to store the added values without allocating more buffer. When a dictionary outgrows its buffer, existing indices may be invalidated without any notification."
          },
          {
            "Para" : "When you know how many new values you’re adding to a dictionary, use the `init(minimumCapacity:)` initializer to allocate the correct amount of buffer."
          },
          {
            "Para" : "You can bridge between `Dictionary` and `NSDictionary` using the `as` operator. For bridging to be possible, the `Key` and `Value` types of a dictionary must be classes, `@objc` protocols, or types that bridge to Foundation types."
          },
          {
            "Para" : "Bridging from `Dictionary` to `NSDictionary` always takes O(1) time and space. When the dictionary’s `Key` and `Value` types are neither classes nor `@objc` protocols, any required bridging of elements occurs at the first access of each element. For this reason, the first operation that uses the contents of the dictionary may take O()."
          },
          {
            "Para" : "Bridging from `NSDictionary` to `Dictionary` first calls the `copy(with:)` method (`- copyWithZone:` in Objective-C) on the dictionary to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSDictionary` that are already immutable, `copy(with:)` usually returns the same dictionary in O(1) time; otherwise, the copying performance is unspecified. The instances of `NSDictionary` and `Dictionary` share buffer using the same copy-on-write optimization that is used when two instances of `Dictionary` share buffer."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Dictionary<\/Name><USR>s:SD<\/USR><Declaration>struct Dictionary&lt;Key, Value&gt; where Key : Hashable<\/Declaration><CommentParts><Abstract><Para>A collection whose elements are key-value pairs.<\/Para><\/Abstract><Discussion><Para>A dictionary is a type of hash table, providing fast access to the entries it contains. Each entry in the table is identified using its key, which is a hashable type such as a string or number. You use that key to retrieve the corresponding value, which can be any object. In other languages, similar data types are known as hashes or associated arrays.<\/Para><Para>Create a new dictionary by using a dictionary literal. A dictionary literal is a comma-separated list of key-value pairs, in which a colon separates each key from its associated value, surrounded by square brackets. You can assign a dictionary literal to a variable or constant or pass it to a function that expects a dictionary.<\/Para><Para>Here’s how you would create a dictionary of HTTP response codes and their related messages:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var responseMessages = [200: \"OK\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        403: \"Access forbidden\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        404: \"File not found\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        500: \"Internal server error\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>responseMessages<\/codeVoice> variable is inferred to have type <codeVoice>[Int: String]<\/codeVoice>. The <codeVoice>Key<\/codeVoice> type of the dictionary is <codeVoice>Int<\/codeVoice>, and the <codeVoice>Value<\/codeVoice> type of the dictionary is <codeVoice>String<\/codeVoice>.<\/Para><Para>To create a dictionary with no key-value pairs, use an empty dictionary literal (<codeVoice>[:]<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var emptyDict: [String: String] = [:]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Any type that conforms to the <codeVoice>Hashable<\/codeVoice> protocol can be used as a dictionary’s <codeVoice>Key<\/codeVoice> type, including all of Swift’s basic types. You can use your own custom types as dictionary keys by making them conform to the <codeVoice>Hashable<\/codeVoice> protocol.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Getting and Setting Dictionary Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>The most common way to access values in a dictionary is to use a key as a subscript. Subscripting with a key takes the following form:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(responseMessages[200])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"OK\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Subscripting a dictionary with a key returns an optional value, because a dictionary might not hold a value for the key that you use in the subscript.<\/Para><Para>The next example uses key-based subscripting of the <codeVoice>responseMessages<\/codeVoice> dictionary with two keys that exist in the dictionary and one that does not.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let httpResponseCodes = [200, 403, 301]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for code in httpResponseCodes {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if let message = responseMessages[code] {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Response \\(code): \\(message)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Unknown response \\(code)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Response 200: OK\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Response 403: Access Forbidden\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Unknown response 301\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also update, modify, or remove keys and values from a dictionary using the key-based subscript. To add a new key-value pair, assign a value to a key that isn’t yet a part of the dictionary.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[responseMessages[301] = \"Moved permanently\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(responseMessages[301])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"Moved permanently\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Update an existing value by assigning a new value to a key that already exists in the dictionary. If you assign <codeVoice>nil<\/codeVoice> to an existing key, the key and its associated value are removed. The following example updates the value for the <codeVoice>404<\/codeVoice> code to be simply “Not found” and removes the key-value pair for the <codeVoice>500<\/codeVoice> code entirely.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[responseMessages[404] = \"Not found\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[responseMessages[500] = nil]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(responseMessages)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[301: \"Moved permanently\", 200: \"OK\", 403: \"Access forbidden\", 404: \"Not found\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In a mutable <codeVoice>Dictionary<\/codeVoice> instance, you can modify in place a value that you’ve accessed through a keyed subscript. The code sample below declares a dictionary called <codeVoice>interestingNumbers<\/codeVoice> with string keys and values that are integer arrays, then sorts each array in-place in descending order.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var interestingNumbers = [\"primes\": [2, 3, 5, 7, 11, 13, 17],]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                          \"triangular\": [1, 3, 6, 10, 15, 21, 28],]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                          \"hexagonal\": [1, 6, 15, 28, 45, 66, 91]]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for key in interestingNumbers.keys {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    interestingNumbers[key]?.sort(by: >)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(interestingNumbers[\"primes\"]!)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[17, 13, 11, 7, 5, 3, 2]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Iterating Over the Contents of a Dictionary<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Every dictionary is an unordered collection of key-value pairs. You can iterate over a dictionary using a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop, decomposing each key-value pair into the elements of a tuple.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let imagePaths = [\"star\": \"\/glyphs\/star.png\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"portrait\": \"\/images\/content\/portrait.jpg\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"spacer\": \"\/images\/shared\/spacer.gif\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for (name, path) in imagePaths {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The path to '\\(name)' is '\\(path)'.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'star' is '\/glyphs\/star.png'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'portrait' is '\/images\/content\/portrait.jpg'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'spacer' is '\/images\/shared\/spacer.gif'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The order of key-value pairs in a dictionary is stable between mutations but is otherwise unpredictable. If you need an ordered collection of key-value pairs and don’t need the fast key lookup that <codeVoice>Dictionary<\/codeVoice> provides, see the <codeVoice>DictionaryLiteral<\/codeVoice> type for an alternative.<\/Para><Para>You can search a dictionary’s contents for a particular value using the <codeVoice>contains(where:)<\/codeVoice> or <codeVoice>firstIndex(where:)<\/codeVoice> methods supplied by default implementation. The following example checks to see if <codeVoice>imagePaths<\/codeVoice> contains any paths in the <codeVoice>&quot;\/glyphs&quot;<\/codeVoice> directory:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let glyphIndex = imagePaths.firstIndex(where: { $0.value.hasPrefix(\"\/glyphs\") })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let index = glyphIndex {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The '\\(imagesPaths[index].key)' image is a glyph.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No glyphs found!\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The 'star' image is a glyph.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that in this example, <codeVoice>imagePaths<\/codeVoice> is subscripted using a dictionary index. Unlike the key-based subscript, the index-based subscript returns the corresponding key-value pair as a non-optional tuple.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(imagePaths[glyphIndex!])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(\"star\", \"\/glyphs\/star.png\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A dictionary’s indices stay valid across additions to the dictionary as long as the dictionary has enough capacity to store the added values without allocating more buffer. When a dictionary outgrows its buffer, existing indices may be invalidated without any notification.<\/Para><Para>When you know how many new values you’re adding to a dictionary, use the <codeVoice>init(minimumCapacity:)<\/codeVoice> initializer to allocate the correct amount of buffer.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Dictionary and NSDictionary<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can bridge between <codeVoice>Dictionary<\/codeVoice> and <codeVoice>NSDictionary<\/codeVoice> using the <codeVoice>as<\/codeVoice> operator. For bridging to be possible, the <codeVoice>Key<\/codeVoice> and <codeVoice>Value<\/codeVoice> types of a dictionary must be classes, <codeVoice>@objc<\/codeVoice> protocols, or types that bridge to Foundation types.<\/Para><Para>Bridging from <codeVoice>Dictionary<\/codeVoice> to <codeVoice>NSDictionary<\/codeVoice> always takes O(1) time and space. When the dictionary’s <codeVoice>Key<\/codeVoice> and <codeVoice>Value<\/codeVoice> types are neither classes nor <codeVoice>@objc<\/codeVoice> protocols, any required bridging of elements occurs at the first access of each element. For this reason, the first operation that uses the contents of the dictionary may take O(<emphasis>n<\/emphasis>).<\/Para><Para>Bridging from <codeVoice>NSDictionary<\/codeVoice> to <codeVoice>Dictionary<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> method (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) on the dictionary to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSDictionary<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same dictionary in O(1) time; otherwise, the copying performance is unspecified. The instances of <codeVoice>NSDictionary<\/codeVoice> and <codeVoice>Dictionary<\/codeVoice> share buffer using the same copy-on-write optimization that is used when two instances of <codeVoice>Dictionary<\/codeVoice> share buffer.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Dictionary",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 4050
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Dictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:SD3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:SD5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.groupname" : "Collection\/HashedCollections",
        "key.inheritedtypes" : [
          {
            "key.name" : "DictionaryProtocol"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 81,
        "key.modulename" : "Swift",
        "key.name" : "Dictionary",
        "key.namelength" : 10,
        "key.nameoffset" : 4038,
        "key.offset" : 4028,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 28,
            "key.name" : "MARK: - `DictionaryProtocol`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 4079
          }
        ],
        "key.typename" : "Dictionary<Key, Value>.Type",
        "key.typeusr" : "$SSDyxq_GmD",
        "key.usr" : "s:SD"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1184,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum Either&lt;Left, Right&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 282
          }
        ],
        "key.bodylength" : 794,
        "key.bodyoffset" : 315,
        "key.doc.column" : 13,
        "key.doc.comment" : "`Either` is a sum type which holds either of two generic values.\n\n**Example Usage**\n\n    let one = Either<String,Int>.left(\"one\")\n    let two = Either<String,Int>.right(2)",
        "key.doc.declaration" : "public enum Either<Left, Right>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift\" line=\"16\" column=\"13\"><Name>Either<\/Name><USR>s:14DataStructures6EitherO<\/USR><Declaration>public enum Either&lt;Left, Right&gt;<\/Declaration><CommentParts><Abstract><Para><codeVoice>Either<\/codeVoice> is a sum type which holds either of two generic values.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let one = Either<String,Int>.left(\"one\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let two = Either<String,Int>.right(2)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 16,
        "key.doc.name" : "Either",
        "key.doc.type" : "Other",
        "key.doclength" : 198,
        "key.docoffset" : 84,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Either<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures6EitherO4Leftxmfp\"><decl.generic_type_param.name>Left<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures6EitherO5Rightq_mfp\"><decl.generic_type_param.name>Right<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 821,
        "key.name" : "Either",
        "key.namelength" : 6,
        "key.nameoffset" : 294,
        "key.offset" : 289,
        "key.parsed_declaration" : "public enum Either <Left,Right>",
        "key.parsed_scope.end" : 46,
        "key.parsed_scope.start" : 16,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Left<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Left<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 4,
            "key.name" : "Left",
            "key.namelength" : 4,
            "key.nameoffset" : 302,
            "key.offset" : 302,
            "key.parsed_declaration" : "public enum Either <Left,Right>",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 16,
            "key.typename" : "Left.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures6EitherO4Leftxmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Right<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Right<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 5,
            "key.name" : "Right",
            "key.namelength" : 5,
            "key.nameoffset" : 307,
            "key.offset" : 307,
            "key.parsed_declaration" : "public enum Either <Left,Right>",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 16,
            "key.typename" : "Right.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures6EitherO5Rightq_mfp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: - Cases",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 324
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 367,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case left(<Type usr=\"s:14DataStructures6EitherO4Leftxmfp\">Left<\/Type>)<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "The left value.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift\" line=\"21\" column=\"10\"><Name>left(_:)<\/Name><USR>s:14DataStructures6EitherO4leftyACyxq_GxcAEmr0_lF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The left value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 21,
                "key.doc.name" : "left(_:)",
                "key.doc.type" : "Other",
                "key.doclength" : 20,
                "key.docoffset" : 343,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>left<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures6EitherO4Leftxmfp\">Left<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.name" : "left(_:)",
                "key.namelength" : 10,
                "key.nameoffset" : 372,
                "key.offset" : 372,
                "key.parsed_declaration" : "case left(Left)",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures6EitherO4leftxSgvp\">left<\/RelatedName>"
                  }
                ],
                "key.typename" : "<Left, Right> (Either<Left, Right>.Type) -> (Left) -> Either<Left, Right>",
                "key.typeusr" : "$Sy14DataStructures6EitherOyxq_GxcADmcr0_luD",
                "key.usr" : "s:14DataStructures6EitherO4leftyACyxq_GxcAEmr0_lF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 17,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 413,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case right(<Type usr=\"s:14DataStructures6EitherO5Rightq_mfp\">Right<\/Type>)<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "The right value.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift\" line=\"24\" column=\"10\"><Name>right(_:)<\/Name><USR>s:14DataStructures6EitherO5rightyACyxq_Gq_cAEmr0_lF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The right value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 24,
                "key.doc.name" : "right(_:)",
                "key.doc.type" : "Other",
                "key.doclength" : 21,
                "key.docoffset" : 388,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>right<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures6EitherO5Rightq_mfp\">Right<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 12,
                "key.name" : "right(_:)",
                "key.namelength" : 12,
                "key.nameoffset" : 418,
                "key.offset" : 418,
                "key.parsed_declaration" : "case right(Right)",
                "key.parsed_scope.end" : 24,
                "key.parsed_scope.start" : 24,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures6EitherO5rightq_Sgvp\">right<\/RelatedName>"
                  }
                ],
                "key.typename" : "<Left, Right> (Either<Left, Right>.Type) -> (Right) -> Either<Left, Right>",
                "key.typeusr" : "$Sy14DataStructures6EitherOyxq_Gq_cADmcr0_luD",
                "key.usr" : "s:14DataStructures6EitherO5rightyACyxq_Gq_cAEmr0_lF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 439
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var left: <Type usr=\"s:14DataStructures6EitherO4Leftxmfp\">Left<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 675
              }
            ],
            "key.bodylength" : 89,
            "key.bodyoffset" : 699,
            "key.doc.column" : 16,
            "key.doc.comment" : "    let one = Either<String,Int>.left(\"one\")\n    one.left \/\/ => .some(\"one\")\n    one.right \/\/ => nil\n\n- Returns: The left value, if it is exists. Otherwise, `nil`.",
            "key.doc.declaration" : "public var left: Left? { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift\" line=\"33\" column=\"16\"><Name>left<\/Name><USR>s:14DataStructures6EitherO4leftxSgvp<\/USR><Declaration>public var left: Left? { get }<\/Declaration><CommentParts><Abstract><Para>let one = Either&lt;String,Int&gt;.left(“one”) one.left \/\/ =&gt; .some(“one”) one.right \/\/ =&gt; nil<\/Para><\/Abstract><ResultDiscussion><Para>The left value, if it is exists. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 33,
            "key.doc.name" : "left",
            "key.doc.result_discussion" : [
              {
                "Para" : "The left value, if it is exists. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 199,
            "key.docoffset" : 472,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>left<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures6EitherO4Leftxmfp\">Left<\/ref.generic_type_param>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 107,
            "key.name" : "left",
            "key.namelength" : 4,
            "key.nameoffset" : 686,
            "key.offset" : 682,
            "key.parsed_declaration" : "public var left: Left?",
            "key.parsed_scope.end" : 36,
            "key.parsed_scope.start" : 33,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures6EitherO4leftyACyxq_GxcAEmr0_lF\">left(_:)<\/RelatedName>"
              }
            ],
            "key.typename" : "Left?",
            "key.typeusr" : "$SxSgD",
            "key.usr" : "s:14DataStructures6EitherO4leftxSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var right: <Type usr=\"s:14DataStructures6EitherO5Rightq_mfp\">Right<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 991
              }
            ],
            "key.bodylength" : 90,
            "key.bodyoffset" : 1017,
            "key.doc.column" : 16,
            "key.doc.comment" : "    let one = Either<String,Int>.right(1)\n    one.left \/\/ => nil\n    one.right \/\/ => .some(1)\n\n- Returns: The right value, if it is exists. Otherwise, `nil`.",
            "key.doc.declaration" : "public var right: Right? { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift\" line=\"42\" column=\"16\"><Name>right<\/Name><USR>s:14DataStructures6EitherO5rightq_Sgvp<\/USR><Declaration>public var right: Right? { get }<\/Declaration><CommentParts><Abstract><Para>let one = Either&lt;String,Int&gt;.right(1) one.left \/\/ =&gt; nil one.right \/\/ =&gt; .some(1)<\/Para><\/Abstract><ResultDiscussion><Para>The right value, if it is exists. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 42,
            "key.doc.name" : "right",
            "key.doc.result_discussion" : [
              {
                "Para" : "The right value, if it is exists. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 193,
            "key.docoffset" : 794,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>right<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures6EitherO5Rightq_mfp\">Right<\/ref.generic_type_param>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 110,
            "key.name" : "right",
            "key.namelength" : 5,
            "key.nameoffset" : 1002,
            "key.offset" : 998,
            "key.parsed_declaration" : "public var right: Right?",
            "key.parsed_scope.end" : 45,
            "key.parsed_scope.start" : 42,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures6EitherO5rightyACyxq_Gq_cAEmr0_lF\">right(_:)<\/RelatedName>"
              }
            ],
            "key.typename" : "Right?",
            "key.typeusr" : "$Sq_SgD",
            "key.usr" : "s:14DataStructures6EitherO5rightq_Sgvp"
          }
        ],
        "key.typename" : "Either<Left, Right>.Type",
        "key.typeusr" : "$S14DataStructures6EitherOyxq_GmD",
        "key.usr" : "s:14DataStructures6EitherO"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum Either&lt;Left, Right&gt;<\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 1181,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum Either<Left, Right>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift\" line=\"16\" column=\"13\"><Name>Either<\/Name><USR>s:14DataStructures6EitherO<\/USR><Declaration>public enum Either&lt;Left, Right&gt;<\/Declaration><CommentParts><Abstract><Para><codeVoice>Either<\/codeVoice> is a sum type which holds either of two generic values.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let one = Either<String,Int>.left(\"one\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let two = Either<String,Int>.right(2)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 16,
        "key.doc.name" : "Either",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 1130
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Either.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Either<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures6EitherO4Leftxmfp\"><decl.generic_type_param.name>Left<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures6EitherO5Rightq_mfp\"><decl.generic_type_param.name>Right<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Equatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 71,
        "key.name" : "Either",
        "key.namelength" : 6,
        "key.nameoffset" : 1122,
        "key.offset" : 1112,
        "key.typename" : "Either<Left, Right>.Type",
        "key.typeusr" : "$S14DataStructures6EitherOyxq_GmD",
        "key.usr" : "s:14DataStructures6EitherO"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Homogeneity.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 824,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>protocol Sequence<\/Declaration>",
        "key.bodylength" : 674,
        "key.bodyoffset" : 148,
        "key.doc.declaration" : "protocol Sequence",
        "key.doc.discussion" : [
          {
            "Para" : "A sequence is a list of values that you can step through one at a time. The most common way to iterate over the elements of a sequence is to use a `for`-`in` loop:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "While seemingly simple, this capability gives you access to a large number of operations that you can perform on any sequence. As an example, to check whether a sequence includes a particular value, you can test each value sequentially until you’ve found a match or reached the end of the sequence. This example checks to see whether a particular insect is in an array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Sequence` protocol provides default implementations for many common operations that depend on sequential access to a sequence’s values. For clearer, more concise code, the example above could use the array’s `contains(_:)` method, which every sequence inherits from `Sequence`, instead of iterating manually:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Sequence` protocol makes no requirement on conforming types regarding whether they will be destructively consumed by iteration. As a consequence, don’t assume that multiple `for`-`in` loops on a sequence will either resume iteration or restart from the beginning:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "In this case, you cannot assume either that a sequence will be consumable and will resume iteration, or that a sequence is a collection and will restart iteration from the first element. A conforming sequence that is not a collection is allowed to produce an arbitrary sequence of elements in the second `for`-`in` loop."
          },
          {
            "Para" : "To establish that a type you’ve created supports nondestructive iteration, add conformance to the `Collection` protocol."
          },
          {
            "Para" : "Making your own custom types conform to `Sequence` enables many useful operations, like `for`-`in` looping and the `contains` method, without much effort. To add `Sequence` conformance to your own custom type, add a `makeIterator()` method that returns an iterator."
          },
          {
            "Para" : "Alternatively, if your type can act as its own iterator, implementing the requirements of the `IteratorProtocol` protocol and declaring conformance to both `Sequence` and `IteratorProtocol` are sufficient."
          },
          {
            "Para" : "Here’s a definition of a `Countdown` sequence that serves as its own iterator. The `makeIterator()` method is provided as a default implementation."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A sequence should provide its iterator in O(1). The `Sequence` protocol makes no other requirements about element access, so routines that traverse a sequence should be considered O() unless documented otherwise."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Sequence<\/Name><USR>s:ST<\/USR><Declaration>protocol Sequence<\/Declaration><CommentParts><Abstract><Para>A type that provides sequential, iterated access to its elements.<\/Para><\/Abstract><Discussion><Para>A sequence is a list of values that you can step through one at a time. The most common way to iterate over the elements of a sequence is to use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let oneTwoThree = 1...3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for number in oneTwoThree {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(number)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>While seemingly simple, this capability gives you access to a large number of operations that you can perform on any sequence. As an example, to check whether a sequence includes a particular value, you can test each value sequentially until you’ve found a match or reached the end of the sequence. This example checks to see whether a particular insect is in an array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let bugs = [\"Aphid\", \"Bumblebee\", \"Cicada\", \"Damselfly\", \"Earwig\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var hasMosquito = false]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for bug in bugs {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if bug == \"Mosquito\" {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        hasMosquito = true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        break]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(\"'bugs' has a mosquito: \\(hasMosquito)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"'bugs' has a mosquito: false\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Sequence<\/codeVoice> protocol provides default implementations for many common operations that depend on sequential access to a sequence’s values. For clearer, more concise code, the example above could use the array’s <codeVoice>contains(_:)<\/codeVoice> method, which every sequence inherits from <codeVoice>Sequence<\/codeVoice>, instead of iterating manually:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if bugs.contains(\"Mosquito\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Break out the bug spray.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Whew, no mosquitos!\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Whew, no mosquitos!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Repeated Access<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>The <codeVoice>Sequence<\/codeVoice> protocol makes no requirement on conforming types regarding whether they will be destructively consumed by iteration. As a consequence, don’t assume that multiple <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loops on a sequence will either resume iteration or restart from the beginning:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for element in sequence {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if ... some condition { break }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for element in sequence {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ No defined behavior]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In this case, you cannot assume either that a sequence will be consumable and will resume iteration, or that a sequence is a collection and will restart iteration from the first element. A conforming sequence that is not a collection is allowed to produce an arbitrary sequence of elements in the second <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop.<\/Para><Para>To establish that a type you’ve created supports nondestructive iteration, add conformance to the <codeVoice>Collection<\/codeVoice> protocol.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Conforming to the Sequence Protocol<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Making your own custom types conform to <codeVoice>Sequence<\/codeVoice> enables many useful operations, like <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> looping and the <codeVoice>contains<\/codeVoice> method, without much effort. To add <codeVoice>Sequence<\/codeVoice> conformance to your own custom type, add a <codeVoice>makeIterator()<\/codeVoice> method that returns an iterator.<\/Para><Para>Alternatively, if your type can act as its own iterator, implementing the requirements of the <codeVoice>IteratorProtocol<\/codeVoice> protocol and declaring conformance to both <codeVoice>Sequence<\/codeVoice> and <codeVoice>IteratorProtocol<\/codeVoice> are sufficient.<\/Para><Para>Here’s a definition of a <codeVoice>Countdown<\/codeVoice> sequence that serves as its own iterator. The <codeVoice>makeIterator()<\/codeVoice> method is provided as a default implementation.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Countdown: Sequence, IteratorProtocol {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var count: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    mutating func next() -> Int? {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        if count == 0 {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            return nil]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            defer { count -= 1 }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            return count]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let threeToGo = Countdown(count: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in threeToGo {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(i)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Expected Performance<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A sequence should provide its iterator in O(1). The <codeVoice>Sequence<\/codeVoice> protocol makes no other requirements about element access, so routines that traverse a sequence should be considered O(<emphasis>n<\/emphasis>) unless documented otherwise.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Sequence",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Sequence<\/decl.name><\/decl.protocol>",
        "key.groupname" : "Collection",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 720,
        "key.modulename" : "Swift",
        "key.name" : "Sequence",
        "key.namelength" : 8,
        "key.nameoffset" : 113,
        "key.offset" : 103,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var isHomogeneous: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 289
              }
            ],
            "key.bodylength" : 158,
            "key.bodyoffset" : 321,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: `true` if there are one or fewer elements in `self`, or if all elements in\n`self` are logically equivalent.",
            "key.doc.declaration" : "public var isHomogeneous: Bool { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Homogeneity.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Homogeneity.swift\" line=\"14\" column=\"16\"><Name>isHomogeneous<\/Name><USR>s:ST14DataStructuresSQ7ElementRpzrlE13isHomogeneousSbvp<\/USR><Declaration>public var isHomogeneous: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there are one or fewer elements in <codeVoice>self<\/codeVoice>, or if all elements in <codeVoice>self<\/codeVoice> are logically equivalent.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 14,
            "key.doc.name" : "isHomogeneous",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there are one or fewer elements in `self`, or if all elements in `self` are logically equivalent."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 131,
            "key.docoffset" : 154,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Homogeneity.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isHomogeneous<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 184,
            "key.name" : "isHomogeneous",
            "key.namelength" : 13,
            "key.nameoffset" : 300,
            "key.offset" : 296,
            "key.parsed_declaration" : "public var isHomogeneous: Bool",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 14,
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:ST14DataStructuresSQ7ElementRpzrlE13isHomogeneousSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var isHeterogeneous: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 626
              }
            ],
            "key.bodylength" : 160,
            "key.bodyoffset" : 660,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: `false` if there are one or fewer elements in `self`, or if any elements in\n`self` are not logically equivalent.",
            "key.doc.declaration" : "public var isHeterogeneous: Bool { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Homogeneity.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Homogeneity.swift\" line=\"22\" column=\"16\"><Name>isHeterogeneous<\/Name><USR>s:ST14DataStructuresSQ7ElementRpzrlE15isHeterogeneousSbvp<\/USR><Declaration>public var isHeterogeneous: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>false<\/codeVoice> if there are one or fewer elements in <codeVoice>self<\/codeVoice>, or if any elements in <codeVoice>self<\/codeVoice> are not logically equivalent.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 22,
            "key.doc.name" : "isHeterogeneous",
            "key.doc.result_discussion" : [
              {
                "Para" : "`false` if there are one or fewer elements in `self`, or if any elements in `self` are not logically equivalent."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 136,
            "key.docoffset" : 486,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Homogeneity.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isHeterogeneous<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 188,
            "key.name" : "isHeterogeneous",
            "key.namelength" : 15,
            "key.nameoffset" : 637,
            "key.offset" : 633,
            "key.parsed_declaration" : "public var isHeterogeneous: Bool",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 22,
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:ST14DataStructuresSQ7ElementRpzrlE15isHeterogeneousSbvp"
          }
        ],
        "key.typename" : "Sequence.Protocol",
        "key.typeusr" : "$SST_pmD",
        "key.usr" : "s:ST"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4350,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum IntervalRelation : <Type usr=\"s:14DataStructures14InvertibleEnumP\">InvertibleEnum<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1061
          }
        ],
        "key.bodylength" : 1535,
        "key.bodyoffset" : 1107,
        "key.doc.column" : 13,
        "key.doc.comment" : "Implementation of\n[Allen's Interval Algebra](https:\/\/en.wikipedia.org\/wiki\/Allen%27s_interval_algebra).\n\n**Background**\n\nFrom [Thomas A. Alspaugh](http:\/\/www.ics.uci.edu\/~alspaugh\/cls\/shr\/allen.html#Allen1983-mkti):\n> In 1983 James F. Allen published a paper in which he proposed thirteen basic relations\nbetween time intervals that are **distinct**, **exhaustive**, and **qualitative**.\n\n> - **Distinct** because no pair of definite intervals can be related by\nmore than one of the relationships\n> - **Exhaustive** because any pair of definite intervals are described by\none of the relations\n> - **Qualitative** (rather than quantitative) because no numeric time spans are considered\n\nThe naming conventions used in this implementation are those of\n[Allen](https:\/\/en.wikipedia.org\/wiki\/James_F._Allen), refined by\n[Krokhin et al.](http:\/\/www.ics.uci.edu\/~alspaugh\/cls\/shr\/allen.html#Allen1983-mkti).",
        "key.doc.declaration" : "public enum IntervalRelation : InvertibleEnum",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "From :"
          },
          {
            "Para" : "In 1983 James F. Allen published a paper in which he proposed thirteen basic relations between time intervals that are , , and ."
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "The naming conventions used in this implementation are those of , refined by ."
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"27\" column=\"13\"><Name>IntervalRelation<\/Name><USR>s:14DataStructures16IntervalRelationO<\/USR><Declaration>public enum IntervalRelation : InvertibleEnum<\/Declaration><CommentParts><Abstract><Para>Implementation of <Link href=\"https:\/\/en.wikipedia.org\/wiki\/Allen%27s_interval_algebra\">Allen’s Interval Algebra<\/Link>.<\/Para><\/Abstract><Discussion><Para><bold>Background<\/bold><\/Para><Para>From <Link href=\"http:\/\/www.ics.uci.edu\/~alspaugh\/cls\/shr\/allen.html#Allen1983-mkti\">Thomas A. Alspaugh<\/Link>:<\/Para><Para>In 1983 James F. Allen published a paper in which he proposed thirteen basic relations between time intervals that are <bold>distinct<\/bold>, <bold>exhaustive<\/bold>, and <bold>qualitative<\/bold>.<\/Para><List-Bullet><Item><Para><bold>Distinct<\/bold> because no pair of definite intervals can be related by more than one of the relationships<\/Para><\/Item><Item><Para><bold>Exhaustive<\/bold> because any pair of definite intervals are described by one of the relations<\/Para><\/Item><Item><Para><bold>Qualitative<\/bold> (rather than quantitative) because no numeric time spans are considered<\/Para><\/Item><\/List-Bullet><Para>The naming conventions used in this implementation are those of <Link href=\"https:\/\/en.wikipedia.org\/wiki\/James_F._Allen\">Allen<\/Link>, refined by <Link href=\"http:\/\/www.ics.uci.edu\/~alspaugh\/cls\/shr\/allen.html#Allen1983-mkti\">Krokhin et al.<\/Link>.<\/Para><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 27,
        "key.doc.name" : "IntervalRelation",
        "key.doc.type" : "Other",
        "key.doclength" : 974,
        "key.docoffset" : 87,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 14,
            "key.offset" : 1091
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>IntervalRelation<\/decl.name> : <ref.protocol usr=\"s:14DataStructures14InvertibleEnumP\">InvertibleEnum<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "InvertibleEnum"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 1575,
        "key.name" : "IntervalRelation",
        "key.namelength" : 16,
        "key.nameoffset" : 1073,
        "key.offset" : 1068,
        "key.parsed_declaration" : "public enum IntervalRelation: InvertibleEnum",
        "key.parsed_scope.end" : 122,
        "key.parsed_scope.start" : 27,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: - Cases",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1116
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1226,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case precedes<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _precedes_ `y`\n\n    x: |---|\n    y:       |---|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"36\" column=\"10\"><Name>precedes<\/Name><USR>s:14DataStructures16IntervalRelationO8precedesyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>precedes<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x: |---|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y:       |---|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 36,
                "key.doc.name" : "precedes",
                "key.doc.type" : "Other",
                "key.doclength" : 87,
                "key.docoffset" : 1135,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>precedes<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.name" : "precedes",
                "key.namelength" : 8,
                "key.nameoffset" : 1231,
                "key.offset" : 1231,
                "key.parsed_declaration" : "case precedes",
                "key.parsed_scope.end" : 36,
                "key.parsed_scope.start" : 36,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO8precedesyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 10,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1334,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case meets<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _meets_ `y`\n\n    x: |----|\n    y:      |----|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"43\" column=\"10\"><Name>meets<\/Name><USR>s:14DataStructures16IntervalRelationO5meetsyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>meets<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x: |----|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y:      |----|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 43,
                "key.doc.name" : "meets",
                "key.doc.type" : "Other",
                "key.doclength" : 85,
                "key.docoffset" : 1245,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>meets<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 5,
                "key.name" : "meets",
                "key.namelength" : 5,
                "key.nameoffset" : 1339,
                "key.offset" : 1339,
                "key.parsed_declaration" : "case meets",
                "key.parsed_scope.end" : 43,
                "key.parsed_scope.start" : 43,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO5meetsyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1444,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case overlaps<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _overlaps_ `y`\n\n    x: |------|\n    y:    |------|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"50\" column=\"10\"><Name>overlaps<\/Name><USR>s:14DataStructures16IntervalRelationO8overlapsyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>overlaps<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x: |------|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y:    |------|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 50,
                "key.doc.name" : "overlaps",
                "key.doc.type" : "Other",
                "key.doclength" : 90,
                "key.docoffset" : 1350,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>overlaps<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.name" : "overlaps",
                "key.namelength" : 8,
                "key.nameoffset" : 1449,
                "key.offset" : 1449,
                "key.parsed_declaration" : "case overlaps",
                "key.parsed_scope.end" : 50,
                "key.parsed_scope.start" : 50,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO8overlapsyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1566,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case finishedBy<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _is finished by_ `y`\n\n    x: |---------|\n    y:      |----|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"57\" column=\"10\"><Name>finishedBy<\/Name><USR>s:14DataStructures16IntervalRelationO10finishedByyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>is finished by<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x: |---------|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y:      |----|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 57,
                "key.doc.name" : "finishedBy",
                "key.doc.type" : "Other",
                "key.doclength" : 99,
                "key.docoffset" : 1463,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>finishedBy<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.name" : "finishedBy",
                "key.namelength" : 10,
                "key.nameoffset" : 1571,
                "key.offset" : 1571,
                "key.parsed_declaration" : "case finishedBy",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 57,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO10finishedByyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1683,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case contains<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _contains_ `y`\n\n    x: |----------|\n    y:    |----|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"64\" column=\"10\"><Name>contains<\/Name><USR>s:14DataStructures16IntervalRelationO8containsyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>contains<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x: |----------|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y:    |----|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 64,
                "key.doc.name" : "contains",
                "key.doc.type" : "Other",
                "key.doclength" : 92,
                "key.docoffset" : 1587,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>contains<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.name" : "contains",
                "key.namelength" : 8,
                "key.nameoffset" : 1688,
                "key.offset" : 1688,
                "key.parsed_declaration" : "case contains",
                "key.parsed_scope.end" : 64,
                "key.parsed_scope.start" : 64,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO8containsyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 11,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1794,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case starts<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _starts_ `y`\n\n    x: |-----|\n    y: |----------|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"71\" column=\"10\"><Name>starts<\/Name><USR>s:14DataStructures16IntervalRelationO6startsyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>starts<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x: |-----|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y: |----------|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 71,
                "key.doc.name" : "starts",
                "key.doc.type" : "Other",
                "key.doclength" : 88,
                "key.docoffset" : 1702,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>starts<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 6,
                "key.name" : "starts",
                "key.namelength" : 6,
                "key.nameoffset" : 1799,
                "key.offset" : 1799,
                "key.parsed_declaration" : "case starts",
                "key.parsed_scope.end" : 71,
                "key.parsed_scope.start" : 71,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO6startsyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 11,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1908,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case equals<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _equals_ `y`\n\n    x: |----------|\n    y: |----------|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"78\" column=\"10\"><Name>equals<\/Name><USR>s:14DataStructures16IntervalRelationO6equalsyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>equals<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x: |----------|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y: |----------|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 78,
                "key.doc.name" : "equals",
                "key.doc.type" : "Other",
                "key.doclength" : 93,
                "key.docoffset" : 1811,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>equals<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 6,
                "key.name" : "equals",
                "key.namelength" : 6,
                "key.nameoffset" : 1913,
                "key.offset" : 1913,
                "key.parsed_declaration" : "case equals",
                "key.parsed_scope.end" : 78,
                "key.parsed_scope.start" : 78,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO6equalsyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 14,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2024,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case startedBy<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _is started by_ `y`\n\n    x: |----------|\n    y: |-----|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"85\" column=\"10\"><Name>startedBy<\/Name><USR>s:14DataStructures16IntervalRelationO9startedByyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>is started by<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x: |----------|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y: |-----|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 85,
                "key.doc.name" : "startedBy",
                "key.doc.type" : "Other",
                "key.doclength" : 95,
                "key.docoffset" : 1925,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>startedBy<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 9,
                "key.name" : "startedBy",
                "key.namelength" : 9,
                "key.nameoffset" : 2029,
                "key.offset" : 2029,
                "key.parsed_declaration" : "case startedBy",
                "key.parsed_scope.end" : 85,
                "key.parsed_scope.start" : 85,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO9startedByyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 16,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2155,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case containedBy<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _is contained by_ `y`\n\n\n    x:    |----|\n    y: |----------|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"93\" column=\"10\"><Name>containedBy<\/Name><USR>s:14DataStructures16IntervalRelationO11containedByyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>is contained by<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x:    |----|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y: |----------|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 93,
                "key.doc.name" : "containedBy",
                "key.doc.type" : "Other",
                "key.doclength" : 107,
                "key.docoffset" : 2044,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>containedBy<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 11,
                "key.name" : "containedBy",
                "key.namelength" : 11,
                "key.nameoffset" : 2160,
                "key.offset" : 2160,
                "key.parsed_declaration" : "case containedBy",
                "key.parsed_scope.end" : 93,
                "key.parsed_scope.start" : 93,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO11containedByyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 13,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2276,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case finishes<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _finishes_ `y`\n\n    x:      |-----|\n    y: |----------|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"100\" column=\"10\"><Name>finishes<\/Name><USR>s:14DataStructures16IntervalRelationO8finishesyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>finishes<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x:      |-----|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y: |----------|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 100,
                "key.doc.name" : "finishes",
                "key.doc.type" : "Other",
                "key.doclength" : 95,
                "key.docoffset" : 2177,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>finishes<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 8,
                "key.name" : "finishes",
                "key.namelength" : 8,
                "key.nameoffset" : 2281,
                "key.offset" : 2281,
                "key.parsed_declaration" : "case finishes",
                "key.parsed_scope.end" : 100,
                "key.parsed_scope.start" : 100,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO8finishesyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 17,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2397,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case overlappedBy<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _is overlapped by_ `y`\n\n    x:    |------|\n    y: |------|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"107\" column=\"10\"><Name>overlappedBy<\/Name><USR>s:14DataStructures16IntervalRelationO12overlappedByyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>is overlapped by<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x:    |------|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y: |------|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 107,
                "key.doc.name" : "overlappedBy",
                "key.doc.type" : "Other",
                "key.doclength" : 98,
                "key.docoffset" : 2295,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>overlappedBy<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 12,
                "key.name" : "overlappedBy",
                "key.namelength" : 12,
                "key.nameoffset" : 2402,
                "key.offset" : 2402,
                "key.parsed_declaration" : "case overlappedBy",
                "key.parsed_scope.end" : 107,
                "key.parsed_scope.start" : 107,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO12overlappedByyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 10,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2513,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case metBy<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _is met by_ `y`\n\n    x:      |----|\n    y: |----|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"114\" column=\"10\"><Name>metBy<\/Name><USR>s:14DataStructures16IntervalRelationO5metByyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>is met by<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x:      |----|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y: |----|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 114,
                "key.doc.name" : "metBy",
                "key.doc.type" : "Other",
                "key.doclength" : 89,
                "key.docoffset" : 2420,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>metBy<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 5,
                "key.name" : "metBy",
                "key.namelength" : 5,
                "key.nameoffset" : 2518,
                "key.offset" : 2518,
                "key.parsed_declaration" : "case metBy",
                "key.parsed_scope.end" : 114,
                "key.parsed_scope.start" : 114,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO5metByyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2626,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case precededBy<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "`x` _is preceded by_ `y`\n\n    x:       |---|\n    y: |---|",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "CodeListing" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"121\" column=\"10\"><Name>precededBy<\/Name><USR>s:14DataStructures16IntervalRelationO10precededByyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para><codeVoice>x<\/codeVoice> <emphasis>is preceded by<\/emphasis> <codeVoice>y<\/codeVoice><\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[x:       |---|]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[y: |---|]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 121,
                "key.doc.name" : "precededBy",
                "key.doc.type" : "Other",
                "key.doclength" : 93,
                "key.docoffset" : 2529,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>precededBy<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.name" : "precededBy",
                "key.namelength" : 10,
                "key.nameoffset" : 2631,
                "key.offset" : 2631,
                "key.parsed_declaration" : "case precededBy",
                "key.parsed_scope.end" : 121,
                "key.parsed_scope.start" : 121,
                "key.typename" : "(IntervalRelation.Type) -> IntervalRelation",
                "key.typeusr" : "$Sy14DataStructures16IntervalRelationOACmcD",
                "key.usr" : "s:14DataStructures16IntervalRelationO10precededByyA2CmF"
              }
            ]
          }
        ],
        "key.typename" : "IntervalRelation.Type",
        "key.typeusr" : "$S14DataStructures16IntervalRelationOmD",
        "key.usr" : "s:14DataStructures16IntervalRelationO"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol RangeProtocol<\/Declaration>",
        "key.bodylength" : 1678,
        "key.bodyoffset" : 2670,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol RangeProtocol",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift\" line=\"9\" column=\"17\"><Name>RangeProtocol<\/Name><USR>s:14DataStructures13RangeProtocolP<\/USR><Declaration>public protocol RangeProtocol<\/Declaration><CommentParts><Abstract><Para>Unifying interface for <codeVoice>Range<\/codeVoice> and <codeVoice>ClosedRange<\/codeVoice> types.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 9,
        "key.doc.name" : "RangeProtocol",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>RangeProtocol<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1704,
        "key.name" : "RangeProtocol",
        "key.namelength" : 13,
        "key.nameoffset" : 2655,
        "key.offset" : 2645,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func relation(with range: <Type usr=\"s:14DataStructures13RangeProtocolPAAE4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:14DataStructures16IntervalRelationO\">IntervalRelation<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2776
              }
            ],
            "key.bodylength" : 1265,
            "key.bodyoffset" : 2836,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: The `IntervalRelation` between this `RangeProtocol`-conforming type and another.",
            "key.doc.declaration" : "public func relation(with range: Self) -> IntervalRelation",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"127\" column=\"17\"><Name>relation(with:)<\/Name><USR>s:14DataStructures13RangeProtocolPAAE8relation4withAA16IntervalRelationOx_tF<\/USR><Declaration>public func relation(with range: Self) -&gt; IntervalRelation<\/Declaration><CommentParts><ResultDiscussion><Para>The <codeVoice>IntervalRelation<\/codeVoice> between this <codeVoice>RangeProtocol<\/codeVoice>-conforming type and another.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 127,
            "key.doc.name" : "relation(with:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "The `IntervalRelation` between this `RangeProtocol`-conforming type and another."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 96,
            "key.docoffset" : 2676,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>relation<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>range<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures13RangeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures16IntervalRelationO\">IntervalRelation<\/ref.enum><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1319,
            "key.name" : "relation(with:)",
            "key.namelength" : 26,
            "key.nameoffset" : 2788,
            "key.offset" : 2783,
            "key.parsed_declaration" : "public func relation(with range: Self) -> IntervalRelation",
            "key.parsed_scope.end" : 156,
            "key.parsed_scope.start" : 127,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : RangeProtocol> (Self) -> (Self) -> IntervalRelation",
            "key.typeusr" : "$S4with14DataStructures16IntervalRelationOx_tcD",
            "key.usr" : "s:14DataStructures13RangeProtocolPAAE8relation4withAA16IntervalRelationOx_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func openContains(_ value: <Type usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 4234
              }
            ],
            "key.bodylength" : 61,
            "key.bodyoffset" : 4285,
            "key.doc.column" : 18,
            "key.doc.comment" : "- returns: `true` if the given `value` is greater than the `lowerBound` and\n`upperBound`. Otherwise, `false`.",
            "key.doc.declaration" : "private func openContains(_ value: Bound) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift\" line=\"160\" column=\"18\"><Name>openContains(_:)<\/Name><USR>s:14DataStructures13RangeProtocolPAAE12openContains33_9011B516DDD5EC7769F85EAFE870D4C6LLySb5BoundQzF<\/USR><Declaration>private func openContains(_ value: Bound) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given <codeVoice>value<\/codeVoice> is greater than the <codeVoice>lowerBound<\/codeVoice> and <codeVoice>upperBound<\/codeVoice>. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 160,
            "key.doc.name" : "openContains(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given `value` is greater than the `lowerBound` and `upperBound`. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 122,
            "key.docoffset" : 4108,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/IntervalRelation.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>openContains<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 105,
            "key.name" : "openContains(_:)",
            "key.namelength" : 28,
            "key.nameoffset" : 4247,
            "key.offset" : 4242,
            "key.parsed_declaration" : "private func openContains(_ value: Bound) -> Bool",
            "key.parsed_scope.end" : 162,
            "key.parsed_scope.start" : 160,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : RangeProtocol> (Self) -> (Self.Bound) -> Bool",
            "key.typeusr" : "$SySb5BoundQzcD",
            "key.usr" : "s:14DataStructures13RangeProtocolPAAE12openContains33_9011B516DDD5EC7769F85EAFE870D4C6LLySb5BoundQzF"
          }
        ],
        "key.typename" : "RangeProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures13RangeProtocol_pmD",
        "key.usr" : "s:14DataStructures13RangeProtocolP"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 563,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol InvertibleEnum : <Type usr=\"s:s12CaseIterableP\">CaseIterable<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 147
          }
        ],
        "key.bodylength" : 69,
        "key.bodyoffset" : 204,
        "key.doc.column" : 17,
        "key.doc.comment" : "Interface for `enum` values whose values can be inverted.",
        "key.doc.declaration" : "public protocol InvertibleEnum : CaseIterable, Equatable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift\" line=\"9\" column=\"17\"><Name>InvertibleEnum<\/Name><USR>s:14DataStructures14InvertibleEnumP<\/USR><Declaration>public protocol InvertibleEnum : CaseIterable, Equatable<\/Declaration><CommentParts><Abstract><Para>Interface for <codeVoice>enum<\/codeVoice> values whose values can be inverted.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 9,
        "key.doc.name" : "InvertibleEnum",
        "key.doc.type" : "Class",
        "key.doclength" : 62,
        "key.docoffset" : 85,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 12,
            "key.offset" : 179
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 193
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>InvertibleEnum<\/decl.name> : <ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "CaseIterable"
          },
          {
            "key.name" : "Equatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 120,
        "key.name" : "InvertibleEnum",
        "key.namelength" : 14,
        "key.nameoffset" : 163,
        "key.offset" : 154,
        "key.parsed_declaration" : "public protocol InvertibleEnum: CaseIterable, Equatable",
        "key.parsed_scope.end" : 12,
        "key.parsed_scope.start" : 9,
        "key.runtime_name" : "_TtP14InvertibleEnum14InvertibleEnum_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var inverse: <Type usr=\"s:14DataStructures14InvertibleEnumP4Selfxmfp\">Self<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 266,
            "key.doc.column" : 9,
            "key.doc.comment" : "- Returns: Inverse of `self`.",
            "key.doc.declaration" : "var inverse: Self { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift\" line=\"11\" column=\"9\"><Name>inverse<\/Name><USR>s:14DataStructures14InvertibleEnumP7inversexvp<\/USR><Declaration>var inverse: Self { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Inverse of <codeVoice>self<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 11,
            "key.doc.name" : "inverse",
            "key.doc.result_discussion" : [
              {
                "Para" : "Inverse of `self`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 34,
            "key.docoffset" : 209,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>inverse<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures14InvertibleEnumP4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.name" : "inverse",
            "key.namelength" : 7,
            "key.nameoffset" : 251,
            "key.offset" : 247,
            "key.parsed_declaration" : "var inverse: Self",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14InvertibleEnumPAASi8AllCases_5IndexRTzrlE7inversexvp\">inverse<\/RelatedName>"
              }
            ],
            "key.typename" : "Self",
            "key.typeusr" : "$SxD",
            "key.usr" : "s:14DataStructures14InvertibleEnumP7inversexvp"
          }
        ],
        "key.typename" : "InvertibleEnum.Protocol",
        "key.typeusr" : "$S14DataStructures14InvertibleEnum_pmD",
        "key.usr" : "s:14DataStructures14InvertibleEnumP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol InvertibleEnum : <Type usr=\"s:s12CaseIterableP\">CaseIterable<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.bodylength" : 231,
        "key.bodyoffset" : 330,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol InvertibleEnum : CaseIterable, Equatable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift\" line=\"9\" column=\"17\"><Name>InvertibleEnum<\/Name><USR>s:14DataStructures14InvertibleEnumP<\/USR><Declaration>public protocol InvertibleEnum : CaseIterable, Equatable<\/Declaration><CommentParts><Abstract><Para>Interface for <codeVoice>enum<\/codeVoice> values whose values can be inverted.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 9,
        "key.doc.name" : "InvertibleEnum",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>InvertibleEnum<\/decl.name> : <ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 286,
        "key.name" : "InvertibleEnum",
        "key.namelength" : 14,
        "key.nameoffset" : 286,
        "key.offset" : 276,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var inverse: <Type usr=\"s:14DataStructures14InvertibleEnumPAASi8AllCases_5IndexRTzrlE4Selfxmfp\">Self<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 373
              }
            ],
            "key.bodylength" : 160,
            "key.bodyoffset" : 399,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: Inverse of `self`.",
            "key.doc.declaration" : "public var inverse: Self { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift\" line=\"16\" column=\"16\"><Name>inverse<\/Name><USR>s:14DataStructures14InvertibleEnumPAASi8AllCases_5IndexRTzrlE7inversexvp<\/USR><Declaration>public var inverse: Self { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Inverse of <codeVoice>self<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 16,
            "key.doc.name" : "inverse",
            "key.doc.result_discussion" : [
              {
                "Para" : "Inverse of `self`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 34,
            "key.docoffset" : 335,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>inverse<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures14InvertibleEnumPAASi8AllCases_5IndexRTzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 180,
            "key.name" : "inverse",
            "key.namelength" : 7,
            "key.nameoffset" : 384,
            "key.offset" : 380,
            "key.parsed_declaration" : "public var inverse: Self",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 16,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14InvertibleEnumP7inversexvp\">inverse<\/RelatedName>"
              }
            ],
            "key.typename" : "Self",
            "key.typeusr" : "$SxD",
            "key.usr" : "s:14DataStructures14InvertibleEnumPAASi8AllCases_5IndexRTzrlE7inversexvp"
          },
          {
            "key.annotated_decl" : "<Declaration>let index: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>index<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 42,
            "key.name" : "index",
            "key.namelength" : 5,
            "key.nameoffset" : 412,
            "key.offset" : 408,
            "key.parsed_declaration" : "let index = Self.allCases.index(of: self)!",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures14InvertibleEnumPAASi8AllCases_5IndexRTzrlE7inversexvg5indexL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let inverseIndex: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/InvertibleEnum.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>inverseIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 52,
            "key.name" : "inverseIndex",
            "key.namelength" : 12,
            "key.nameoffset" : 463,
            "key.offset" : 459,
            "key.parsed_declaration" : "let inverseIndex = Self.allCases.count - (1 + index)",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures14InvertibleEnumPAASi8AllCases_5IndexRTzrlE7inversexvg0hG0L_Sivp"
          }
        ],
        "key.typename" : "InvertibleEnum.Protocol",
        "key.typeusr" : "$S14DataStructures14InvertibleEnum_pmD",
        "key.usr" : "s:14DataStructures14InvertibleEnumP"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2364,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 180
          }
        ],
        "key.bodylength" : 164,
        "key.bodyoffset" : 214,
        "key.doc.column" : 13,
        "key.doc.comment" : "The `LinkedList`.",
        "key.doc.declaration" : "public enum LinkedList<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"11\" column=\"13\"><Name>LinkedList<\/Name><USR>s:14DataStructures10LinkedListO<\/USR><Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>LinkedList<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 11,
        "key.doc.name" : "LinkedList",
        "key.doc.type" : "Other",
        "key.doclength" : 22,
        "key.docoffset" : 158,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>LinkedList<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 192,
        "key.name" : "LinkedList",
        "key.namelength" : 10,
        "key.nameoffset" : 192,
        "key.offset" : 187,
        "key.parsed_declaration" : "public enum LinkedList <Element>",
        "key.parsed_scope.end" : 20,
        "key.parsed_scope.start" : 11,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Element<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 7,
            "key.name" : "Element",
            "key.namelength" : 7,
            "key.nameoffset" : 204,
            "key.offset" : 204,
            "key.parsed_declaration" : "public enum LinkedList <Element>",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures10LinkedListO7Elementa\">Element<\/RelatedName>"
              }
            ],
            "key.typename" : "Element.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures10LinkedListO7Elementxmfp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: - Cases",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 223
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 8,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 269,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case end<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "Last node in list.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"16\" column=\"10\"><Name>end<\/Name><USR>s:14DataStructures10LinkedListO3endyACyxGAEmlF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Last node in list.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 16,
                "key.doc.name" : "end",
                "key.doc.type" : "Other",
                "key.doclength" : 23,
                "key.docoffset" : 242,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>end<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 3,
                "key.name" : "end",
                "key.namelength" : 3,
                "key.nameoffset" : 274,
                "key.offset" : 274,
                "key.parsed_declaration" : "case end",
                "key.parsed_scope.end" : 16,
                "key.parsed_scope.start" : 16,
                "key.typename" : "<Element> (LinkedList<Element>.Type) -> LinkedList<Element>",
                "key.typeusr" : "$Sy14DataStructures10LinkedListOyxGADmcluD",
                "key.usr" : "s:14DataStructures10LinkedListO3endyACyxGAEmlF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 45,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 332,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>indirect case node(<Type usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/Type>, next: <Type usr=\"s:14DataStructures10LinkedListO\">LinkedList<\/Type>&lt;<Type usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/Type>&gt;)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.indirect",
                    "key.length" : 8,
                    "key.offset" : 323
                  }
                ],
                "key.doc.column" : 19,
                "key.doc.comment" : "Node with pointer to next node.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"19\" column=\"19\"><Name>node(_:next:)<\/Name><USR>s:14DataStructures10LinkedListO4nodeyACyxGx_AEtcAEmlF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Node with pointer to next node.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 19,
                "key.doc.name" : "node(_:next:)",
                "key.doc.type" : "Other",
                "key.doclength" : 36,
                "key.docoffset" : 283,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>indirect<\/syntaxtype.keyword> <syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>node<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>next<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures10LinkedListO\">LinkedList<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 40,
                "key.name" : "node(_:next:)",
                "key.namelength" : 40,
                "key.nameoffset" : 337,
                "key.offset" : 337,
                "key.parsed_declaration" : "indirect case node(Element, next: LinkedList<Element>)",
                "key.parsed_scope.end" : 19,
                "key.parsed_scope.start" : 19,
                "key.typename" : "<Element> (LinkedList<Element>.Type) -> (Element, LinkedList<Element>) -> LinkedList<Element>",
                "key.typeusr" : "$Sy14DataStructures10LinkedListOyxGx_ADtcADmcluD",
                "key.usr" : "s:14DataStructures10LinkedListO4nodeyACyxGx_AEtcAEmlF"
              }
            ]
          }
        ],
        "key.typename" : "LinkedList<Element>.Type",
        "key.typeusr" : "$S14DataStructures10LinkedListOyxGmD",
        "key.usr" : "s:14DataStructures10LinkedListO"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 531,
        "key.bodyoffset" : 403,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum LinkedList<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"11\" column=\"13\"><Name>LinkedList<\/Name><USR>s:14DataStructures10LinkedListO<\/USR><Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>LinkedList<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 11,
        "key.doc.name" : "LinkedList",
        "key.doc.type" : "Other",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>LinkedList<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 554,
        "key.name" : "LinkedList",
        "key.namelength" : 10,
        "key.nameoffset" : 391,
        "key.offset" : 381,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 412
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func push(x: <Type usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 523
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 516
              }
            ],
            "key.bodylength" : 40,
            "key.bodyoffset" : 555,
            "key.doc.column" : 26,
            "key.doc.comment" : "Push a node holding the given `value` onto the front of the list.",
            "key.doc.declaration" : "public mutating func push(x: Element)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"27\" column=\"26\"><Name>push(x:)<\/Name><USR>s:14DataStructures10LinkedListO4push1xyx_tF<\/USR><Declaration>public mutating func push(x: Element)<\/Declaration><CommentParts><Abstract><Para>Push a node holding the given <codeVoice>value<\/codeVoice> onto the front of the list.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 27,
            "key.doc.name" : "push(x:)",
            "key.doc.type" : "Function",
            "key.doclength" : 70,
            "key.docoffset" : 442,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>push<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>x<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 64,
            "key.name" : "push(x:)",
            "key.namelength" : 16,
            "key.nameoffset" : 537,
            "key.offset" : 532,
            "key.parsed_declaration" : "public mutating func push(x: Element)",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 27,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (inout LinkedList<Element>) -> (Element) -> ()",
            "key.typeusr" : "$S1xyx_tcD",
            "key.usr" : "s:14DataStructures10LinkedListO4push1xyx_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func pop() -&gt; <Type usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 740
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 733
              }
            ],
            "key.bodylength" : 159,
            "key.bodyoffset" : 773,
            "key.doc.column" : 26,
            "key.doc.comment" : "- returns: The element contained by the node at the front of the list, if the\nlist is not empty. Otherwise, `nil`.",
            "key.doc.declaration" : "public mutating func pop() -> Element?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"33\" column=\"26\"><Name>pop()<\/Name><USR>s:14DataStructures10LinkedListO3popxSgyF<\/USR><Declaration>public mutating func pop() -&gt; Element?<\/Declaration><CommentParts><ResultDiscussion><Para>The element contained by the node at the front of the list, if the list is not empty. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 33,
            "key.doc.name" : "pop()",
            "key.doc.result_discussion" : [
              {
                "Para" : "The element contained by the node at the front of the list, if the list is not empty. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 127,
            "key.docoffset" : 602,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>pop<\/decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/ref.generic_type_param>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 184,
            "key.name" : "pop()",
            "key.namelength" : 5,
            "key.nameoffset" : 754,
            "key.offset" : 749,
            "key.parsed_declaration" : "public mutating func pop() -> Element?",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 33,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (inout LinkedList<Element>) -> () -> Element?",
            "key.typeusr" : "$SxSgycD",
            "key.usr" : "s:14DataStructures10LinkedListO3popxSgyF"
          }
        ],
        "key.typename" : "LinkedList<Element>.Type",
        "key.typeusr" : "$S14DataStructures10LinkedListOyxGmD",
        "key.usr" : "s:14DataStructures10LinkedListO"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 184,
        "key.bodyoffset" : 959,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum LinkedList<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"11\" column=\"13\"><Name>LinkedList<\/Name><USR>s:14DataStructures10LinkedListO<\/USR><Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>LinkedList<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 11,
        "key.doc.name" : "LinkedList",
        "key.doc.type" : "Other",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>LinkedList<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 207,
        "key.name" : "LinkedList",
        "key.namelength" : 10,
        "key.nameoffset" : 947,
        "key.offset" : 937,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func cons(value: <Type usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/Type>) -&gt; <Type usr=\"s:14DataStructures10LinkedListO\">LinkedList<\/Type><\/Declaration>",
            "key.bodylength" : 45,
            "key.bodyoffset" : 1096,
            "key.doc.column" : 10,
            "key.doc.comment" : "- Returns: A new `LinkedList` with the given `value` held by a node at the front.",
            "key.doc.declaration" : "func cons(value: Element) -> LinkedList",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"47\" column=\"10\"><Name>cons(value:)<\/Name><USR>s:14DataStructures10LinkedListO4cons5valueACyxGx_tF<\/USR><Declaration>func cons(value: Element) -&gt; LinkedList<\/Declaration><CommentParts><ResultDiscussion><Para>A new <codeVoice>LinkedList<\/codeVoice> with the given <codeVoice>value<\/codeVoice> held by a node at the front.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 47,
            "key.doc.name" : "cons(value:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A new `LinkedList` with the given `value` held by a node at the front."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 86,
            "key.docoffset" : 965,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>cons<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures10LinkedListO\">LinkedList<\/ref.enum><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 87,
            "key.name" : "cons(value:)",
            "key.namelength" : 20,
            "key.nameoffset" : 1060,
            "key.offset" : 1055,
            "key.parsed_declaration" : "func cons(value: Element) -> LinkedList",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 47,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (LinkedList<Element>) -> (Element) -> LinkedList<Element>",
            "key.typeusr" : "$S5value14DataStructures10LinkedListOyxGx_tcD",
            "key.usr" : "s:14DataStructures10LinkedListO4cons5valueACyxGx_tF"
          }
        ],
        "key.typename" : "LinkedList<Element>.Type",
        "key.typeusr" : "$S14DataStructures10LinkedListOyxGmD",
        "key.usr" : "s:14DataStructures10LinkedListO"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 797,
        "key.bodyoffset" : 1180,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum LinkedList<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"11\" column=\"13\"><Name>LinkedList<\/Name><USR>s:14DataStructures10LinkedListO<\/USR><Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>LinkedList<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 11,
        "key.doc.name" : "LinkedList",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 1168
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>LinkedList<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Collection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 832,
        "key.name" : "LinkedList",
        "key.namelength" : 10,
        "key.nameoffset" : 1156,
        "key.offset" : 1146,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: - Collection",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1189
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(after i: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1261
              }
            ],
            "key.bodylength" : 26,
            "key.bodyoffset" : 1301,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: Index after given index `i`.",
            "key.doc.declaration" : "public func index(after i: Int) -> Int",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"57\" column=\"17\"><Name>index(after:)<\/Name><USR>s:14DataStructures10LinkedListO5index5afterS2i_tF<\/USR><Declaration>public func index(after i: Int) -&gt; Int<\/Declaration><CommentParts><ResultDiscussion><Para>Index after given index <codeVoice>i<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 57,
            "key.doc.name" : "index(after:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Index after given index `i`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 44,
            "key.docoffset" : 1213,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>after<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 60,
            "key.name" : "index(after:)",
            "key.namelength" : 19,
            "key.nameoffset" : 1273,
            "key.offset" : 1268,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl5index5after5IndexQzAD_tF"
              }
            ],
            "key.parsed_declaration" : "public func index(after i: Int) -> Int",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 57,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (LinkedList<Element>) -> (Int) -> Int",
            "key.typeusr" : "$S5afterS2i_tcD",
            "key.usr" : "s:14DataStructures10LinkedListO5index5afterS2i_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var startIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1366
              }
            ],
            "key.bodylength" : 22,
            "key.bodyoffset" : 1394,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: Start index.",
            "key.doc.declaration" : "public var startIndex: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"62\" column=\"16\"><Name>startIndex<\/Name><USR>s:14DataStructures10LinkedListO10startIndexSivp<\/USR><Declaration>public var startIndex: Int { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Start index.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 62,
            "key.doc.name" : "startIndex",
            "key.doc.result_discussion" : [
              {
                "Para" : "Start index."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 28,
            "key.docoffset" : 1334,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>startIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.name" : "startIndex",
            "key.namelength" : 10,
            "key.nameoffset" : 1377,
            "key.offset" : 1373,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl10startIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var startIndex: Int",
            "key.parsed_scope.end" : 64,
            "key.parsed_scope.start" : 62,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures10LinkedListO10startIndexSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var endIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1451
              }
            ],
            "key.bodylength" : 147,
            "key.bodyoffset" : 1477,
            "key.doc.column" : 16,
            "key.doc.comment" : "Returns: End index.",
            "key.doc.declaration" : "public var endIndex: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"67\" column=\"16\"><Name>endIndex<\/Name><USR>s:14DataStructures10LinkedListO8endIndexSivp<\/USR><Declaration>public var endIndex: Int { get }<\/Declaration><CommentParts><Abstract><Para>Returns: End index.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 67,
            "key.doc.name" : "endIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 24,
            "key.docoffset" : 1423,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>endIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 167,
            "key.name" : "endIndex",
            "key.namelength" : 8,
            "key.nameoffset" : 1462,
            "key.offset" : 1458,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl8endIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var endIndex: Int",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 67,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures10LinkedListO8endIndexSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(position: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1680
              }
            ],
            "key.bodylength" : 251,
            "key.bodyoffset" : 1724,
            "key.doc.column" : 12,
            "key.doc.comment" : "- Returns: Element at the given `index`.",
            "key.doc.declaration" : "public subscript(position: Int) -> Element { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"77\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:14DataStructures10LinkedListOyxSicip<\/USR><Declaration>public subscript(position: Int) -&gt; Element { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Element at the given <codeVoice>index<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 77,
            "key.doc.name" : "subscript(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Element at the given `index`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 45,
            "key.docoffset" : 1631,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>position<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 289,
            "key.name" : "subscript(_:)",
            "key.namelength" : 24,
            "key.nameoffset" : 1687,
            "key.offset" : 1687,
            "key.overrides" : [
              {
                "key.usr" : "s:Sly7ElementQz5IndexQzcip"
              }
            ],
            "key.parsed_declaration" : "public subscript(position: Int) -> Element",
            "key.parsed_scope.end" : 86,
            "key.parsed_scope.start" : 77,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (Int) -> Element",
            "key.typeusr" : "$SyxSicD",
            "key.usr" : "s:14DataStructures10LinkedListOyxSicip"
          }
        ],
        "key.typename" : "LinkedList<Element>.Type",
        "key.typeusr" : "$S14DataStructures10LinkedListOyxGmD",
        "key.usr" : "s:14DataStructures10LinkedListO"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 2038,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum LinkedList<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"11\" column=\"13\"><Name>LinkedList<\/Name><USR>s:14DataStructures10LinkedListO<\/USR><Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>LinkedList<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 11,
        "key.doc.name" : "LinkedList",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 2002
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>LinkedList<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Equatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 60,
        "key.name" : "LinkedList",
        "key.namelength" : 10,
        "key.nameoffset" : 1990,
        "key.offset" : 1980,
        "key.typename" : "LinkedList<Element>.Type",
        "key.typeusr" : "$S14DataStructures10LinkedListOyxGmD",
        "key.usr" : "s:14DataStructures10LinkedListO"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 271,
        "key.bodyoffset" : 2091,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum LinkedList<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"11\" column=\"13\"><Name>LinkedList<\/Name><USR>s:14DataStructures10LinkedListO<\/USR><Declaration>public enum LinkedList&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>LinkedList<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 11,
        "key.doc.name" : "LinkedList",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 25,
            "key.offset" : 2064
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>LinkedList<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ExpressibleByArrayLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 321,
        "key.name" : "LinkedList",
        "key.namelength" : 10,
        "key.nameoffset" : 2052,
        "key.offset" : 2042,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 31,
            "key.name" : "MARK: ExpressibleByArrayLiteral",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2102
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(arrayLiteral elements: <Type usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/Type>...)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2192
              }
            ],
            "key.bodylength" : 120,
            "key.bodyoffset" : 2240,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a `LinkedList` with an array literal.",
            "key.doc.declaration" : "public init(arrayLiteral elements: Element...)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift\" line=\"96\" column=\"12\"><Name>init(arrayLiteral:)<\/Name><USR>s:14DataStructures10LinkedListO12arrayLiteralACyxGxd_tcfc<\/USR><Declaration>public init(arrayLiteral elements: Element...)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>LinkedList<\/codeVoice> with an array literal.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 96,
            "key.doc.name" : "init(arrayLiteral:)",
            "key.doc.type" : "Function",
            "key.doclength" : 49,
            "key.docoffset" : 2139,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/LinkedList.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>arrayLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures10LinkedListO7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type>...<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 162,
            "key.name" : "init(arrayLiteral:)",
            "key.namelength" : 39,
            "key.nameoffset" : 2199,
            "key.offset" : 2199,
            "key.overrides" : [
              {
                "key.usr" : "s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(arrayLiteral elements: Element...)",
            "key.parsed_scope.end" : 101,
            "key.parsed_scope.start" : 96,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (LinkedList<Element>.Type) -> (Element...) -> LinkedList<Element>",
            "key.typeusr" : "$S12arrayLiteral14DataStructures10LinkedListOyxGxd_tcD",
            "key.usr" : "s:14DataStructures10LinkedListO12arrayLiteralACyxGxd_tcfc"
          }
        ],
        "key.typename" : "LinkedList<Element>.Type",
        "key.typeusr" : "$S14DataStructures10LinkedListOyxGmD",
        "key.usr" : "s:14DataStructures10LinkedListO"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4463,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct Matrix&lt;Element&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 772
          }
        ],
        "key.bodylength" : 2462,
        "key.bodyoffset" : 804,
        "key.doc.column" : 15,
        "key.doc.comment" : "Two-dimensional matrix with user-definable dimensions, parameterized over the generic `Element`.\n\n**Example Usage**\n\nIt is quite pleasant to fill a new `Matrix` value.\n\n    let matrix = Matrix(height: 3, width: 3, initial: 0)\n    \/\/ => 0,0,0\n    \/\/    0,0,0\n    \/\/    0,0,0\n\nYou can ask what the value is at a given row and column.\n> **Warning**: Your program will crash if the row or column is invalid — so, be careful!\n\n    matrix[row: 1, column: 2] \/\/ => 0\n\nYou can also set the value at the given row and column.\n\n    matrix[row: 0, column: 1] = 1\n    \/\/ => 0,1,0\n    \/\/    0,0,0\n    \/\/    0,0,0",
        "key.doc.declaration" : "public struct Matrix<Element>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "It is quite pleasant to fill a new `Matrix` value."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can ask what the value is at a given row and column."
          },
          {
            "Para" : ": Your program will crash if the row or column is invalid — so, be careful!"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also set the value at the given row and column."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"32\" column=\"15\"><Name>Matrix<\/Name><USR>s:14DataStructures6MatrixV<\/USR><Declaration>public struct Matrix&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Two-dimensional matrix with user-definable dimensions, parameterized over the generic <codeVoice>Element<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>It is quite pleasant to fill a new <codeVoice>Matrix<\/codeVoice> value.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let matrix = Matrix(height: 3, width: 3, initial: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ => 0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can ask what the value is at a given row and column.<\/Para><Para><bold>Warning<\/bold>: Your program will crash if the row or column is invalid — so, be careful!<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[matrix[row: 1, column: 2] \/\/ => 0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also set the value at the given row and column.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[matrix[row: 0, column: 1] = 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ => 0,1,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 32,
        "key.doc.name" : "Matrix",
        "key.doc.type" : "Class",
        "key.doclength" : 687,
        "key.docoffset" : 85,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Matrix<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures6MatrixV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 2488,
        "key.name" : "Matrix",
        "key.namelength" : 6,
        "key.nameoffset" : 786,
        "key.offset" : 779,
        "key.parsed_declaration" : "public struct Matrix <Element>",
        "key.parsed_scope.end" : 110,
        "key.parsed_scope.start" : 32,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Element<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 7,
            "key.name" : "Element",
            "key.namelength" : 7,
            "key.nameoffset" : 794,
            "key.offset" : 794,
            "key.parsed_declaration" : "public struct Matrix <Element>",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 32,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures6MatrixV7Elementa\">Element<\/RelatedName>"
              }
            ],
            "key.typename" : "Element.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures6MatrixV7Elementxmfp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 813
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let rowCount: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 870
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Amount of rows.",
            "key.doc.declaration" : "private let rowCount: Int",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"37\" column=\"17\"><Name>rowCount<\/Name><USR>s:14DataStructures6MatrixV8rowCount33_39B04A1FB16FB1096A377BC7F344991DLLSivp<\/USR><Declaration>private let rowCount: Int<\/Declaration><CommentParts><Abstract><Para>Amount of rows.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 37,
            "key.doc.name" : "rowCount",
            "key.doc.type" : "Other",
            "key.doclength" : 20,
            "key.docoffset" : 846,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>rowCount<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 17,
            "key.name" : "rowCount",
            "key.namelength" : 8,
            "key.nameoffset" : 882,
            "key.offset" : 878,
            "key.parsed_declaration" : "private let rowCount: Int",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 37,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures6MatrixV8rowCount33_39B04A1FB16FB1096A377BC7F344991DLLSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let columnCount: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 928
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Amount of columns.",
            "key.doc.declaration" : "private let columnCount: Int",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"40\" column=\"17\"><Name>columnCount<\/Name><USR>s:14DataStructures6MatrixV11columnCount33_39B04A1FB16FB1096A377BC7F344991DLLSivp<\/USR><Declaration>private let columnCount: Int<\/Declaration><CommentParts><Abstract><Para>Amount of columns.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 40,
            "key.doc.name" : "columnCount",
            "key.doc.type" : "Other",
            "key.doclength" : 23,
            "key.docoffset" : 901,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>columnCount<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.name" : "columnCount",
            "key.namelength" : 11,
            "key.nameoffset" : 940,
            "key.offset" : 936,
            "key.parsed_declaration" : "private let columnCount: Int",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 40,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures6MatrixV11columnCount33_39B04A1FB16FB1096A377BC7F344991DLLSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var grid: [Element]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1027
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Items of type `Element` stored as `[row, row, row, ...]`",
            "key.doc.declaration" : "private var grid: [Element]",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"43\" column=\"17\"><Name>grid<\/Name><USR>s:14DataStructures6MatrixV4grid33_39B04A1FB16FB1096A377BC7F344991DLLSayxGvp<\/USR><Declaration>private var grid: [Element]<\/Declaration><CommentParts><Abstract><Para>Items of type <codeVoice>Element<\/codeVoice> stored as <codeVoice>[row, row, row, ...]<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 43,
            "key.doc.name" : "grid",
            "key.doc.type" : "Other",
            "key.doclength" : 61,
            "key.docoffset" : 962,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>grid<\/decl.name>: <decl.var.type>[Element]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "grid",
            "key.namelength" : 4,
            "key.nameoffset" : 1039,
            "key.offset" : 1035,
            "key.parsed_declaration" : "private var grid: [Element] = []",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 43,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[Element]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures6MatrixV4grid33_39B04A1FB16FB1096A377BC7F344991DLLSayxGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var rows: [[<Type usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/Type>]] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1099
              }
            ],
            "key.bodylength" : 59,
            "key.bodyoffset" : 1129,
            "key.doc.column" : 16,
            "key.doc.comment" : "- returns: Array of rows.",
            "key.doc.declaration" : "public var rows: [[Element]] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"46\" column=\"16\"><Name>rows<\/Name><USR>s:14DataStructures6MatrixV4rowsSaySayxGGvp<\/USR><Declaration>public var rows: [[Element]] { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Array of rows.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 46,
            "key.doc.name" : "rows",
            "key.doc.result_discussion" : [
              {
                "Para" : "Array of rows."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 30,
            "key.docoffset" : 1065,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rows<\/decl.name>: <decl.var.type>[[<ref.generic_type_param usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/ref.generic_type_param>]]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 83,
            "key.name" : "rows",
            "key.namelength" : 4,
            "key.nameoffset" : 1110,
            "key.offset" : 1106,
            "key.parsed_declaration" : "public var rows: [[Element]]",
            "key.parsed_scope.end" : 48,
            "key.parsed_scope.start" : 46,
            "key.typename" : "[[Element]]",
            "key.typeusr" : "$SSaySayxGGD",
            "key.usr" : "s:14DataStructures6MatrixV4rowsSaySayxGGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var columns: [[<Type usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/Type>]] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1232
              }
            ],
            "key.bodylength" : 65,
            "key.bodyoffset" : 1265,
            "key.doc.column" : 16,
            "key.doc.comment" : "- returns: Array of columns.",
            "key.doc.declaration" : "public var columns: [[Element]] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"51\" column=\"16\"><Name>columns<\/Name><USR>s:14DataStructures6MatrixV7columnsSaySayxGGvp<\/USR><Declaration>public var columns: [[Element]] { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Array of columns.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 51,
            "key.doc.name" : "columns",
            "key.doc.result_discussion" : [
              {
                "Para" : "Array of columns."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 33,
            "key.docoffset" : 1195,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>columns<\/decl.name>: <decl.var.type>[[<ref.generic_type_param usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/ref.generic_type_param>]]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 92,
            "key.name" : "columns",
            "key.namelength" : 7,
            "key.nameoffset" : 1243,
            "key.offset" : 1239,
            "key.parsed_declaration" : "public var columns: [[Element]]",
            "key.parsed_scope.end" : 53,
            "key.parsed_scope.start" : 51,
            "key.typename" : "[[Element]]",
            "key.typeusr" : "$SSaySayxGGD",
            "key.usr" : "s:14DataStructures6MatrixV7columnsSaySayxGGvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - Initializers",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1340
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(height rowCount: <Type usr=\"s:Si\">Int<\/Type>, width columnCount: <Type usr=\"s:Si\">Int<\/Type>, initial: <Type usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1449
              }
            ],
            "key.bodylength" : 159,
            "key.bodyoffset" : 1526,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a `Matrix` with the given dimensions and the given `initial` value.",
            "key.doc.declaration" : "public init(height rowCount: Int, width columnCount: Int, initial: Element)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"58\" column=\"12\"><Name>init(height:width:initial:)<\/Name><USR>s:14DataStructures6MatrixV6height5width7initialACyxGSi_Sixtcfc<\/USR><Declaration>public init(height rowCount: Int, width columnCount: Int, initial: Element)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>Matrix<\/codeVoice> with the given dimensions and the given <codeVoice>initial<\/codeVoice> value.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 58,
            "key.doc.name" : "init(height:width:initial:)",
            "key.doc.type" : "Function",
            "key.doclength" : 79,
            "key.docoffset" : 1366,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>height<\/decl.var.parameter.argument_label> <decl.var.parameter.name>rowCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width<\/decl.var.parameter.argument_label> <decl.var.parameter.name>columnCount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>initial<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 230,
            "key.name" : "init(height:width:initial:)",
            "key.namelength" : 68,
            "key.nameoffset" : 1456,
            "key.offset" : 1456,
            "key.parsed_declaration" : "public init(height rowCount: Int, width columnCount: Int, initial: Element)",
            "key.parsed_scope.end" : 62,
            "key.parsed_scope.start" : 58,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (Matrix<Element>.Type) -> (Int, Int, Element) -> Matrix<Element>",
            "key.typeusr" : "$S6height5width7initial14DataStructures6MatrixVyxGSi_SixtcD",
            "key.usr" : "s:14DataStructures6MatrixV6height5width7initialACyxGSi_Sixtcfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: - Subscripts",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1695
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(row: <Type usr=\"s:Si\">Int<\/Type>, column: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/Type> { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1867
              }
            ],
            "key.bodylength" : 303,
            "key.bodyoffset" : 1920,
            "key.doc.column" : 12,
            "key.doc.comment" : "Get and set the value for the given `row` and `column`, if these are valid indices.\nOtherwise, `nil` is returned or nothing is set.",
            "key.doc.declaration" : "public subscript(row: Int, column: Int) -> Element { get set }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"68\" column=\"12\"><Name>subscript(_:_:)<\/Name><USR>s:14DataStructures6MatrixVyxSi_Sitcip<\/USR><Declaration>public subscript(row: Int, column: Int) -&gt; Element { get set }<\/Declaration><CommentParts><Abstract><Para>Get and set the value for the given <codeVoice>row<\/codeVoice> and <codeVoice>column<\/codeVoice>, if these are valid indices. Otherwise, <codeVoice>nil<\/codeVoice> is returned or nothing is set.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 68,
            "key.doc.name" : "subscript(_:_:)",
            "key.doc.type" : "Other",
            "key.doclength" : 144,
            "key.docoffset" : 1719,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>row<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>column<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 350,
            "key.name" : "subscript(_:_:)",
            "key.namelength" : 33,
            "key.nameoffset" : 1874,
            "key.offset" : 1874,
            "key.parsed_declaration" : "public subscript (row: Int, column: Int) -> Element",
            "key.parsed_scope.end" : 77,
            "key.parsed_scope.start" : 68,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures6MatrixV3rowSayxGSi_tcip\">subscript(row:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures6MatrixV6columnSayxGSi_tcip\">subscript(column:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (Int, Int) -> Element",
            "key.typeusr" : "$SyxSi_SitcD",
            "key.usr" : "s:14DataStructures6MatrixVyxSi_Sitcip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(row row: <Type usr=\"s:Si\">Int<\/Type>) -&gt; [<Type usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/Type>] { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2268
              }
            ],
            "key.bodylength" : 381,
            "key.bodyoffset" : 2314,
            "key.doc.column" : 12,
            "key.doc.comment" : "Get and set an row of values.",
            "key.doc.declaration" : "public subscript(row row: Int) -> [Element] { get set }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"80\" column=\"12\"><Name>subscript(row:)<\/Name><USR>s:14DataStructures6MatrixV3rowSayxGSi_tcip<\/USR><Declaration>public subscript(row row: Int) -&gt; [Element] { get set }<\/Declaration><CommentParts><Abstract><Para>Get and set an row of values.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 80,
            "key.doc.name" : "subscript(row:)",
            "key.doc.type" : "Other",
            "key.doclength" : 34,
            "key.docoffset" : 2230,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>row<\/decl.var.parameter.argument_label> <decl.var.parameter.name>row<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/ref.generic_type_param>]<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 421,
            "key.name" : "subscript(row:)",
            "key.namelength" : 24,
            "key.nameoffset" : 2275,
            "key.offset" : 2275,
            "key.parsed_declaration" : "public subscript (row row: Int) -> [Element]",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 80,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures6MatrixVyxSi_Sitcip\">subscript(_:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures6MatrixV6columnSayxGSi_tcip\">subscript(column:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (row: Int) -> [Element]",
            "key.typeusr" : "$S3rowSayxGSi_tcD",
            "key.usr" : "s:14DataStructures6MatrixV3rowSayxGSi_tcip"
          },
          {
            "key.annotated_decl" : "<Declaration>let startIndex: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>startIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 34,
            "key.name" : "startIndex",
            "key.namelength" : 10,
            "key.nameoffset" : 2345,
            "key.offset" : 2341,
            "key.parsed_declaration" : "let startIndex = row * columnCount",
            "key.parsed_scope.end" : 82,
            "key.parsed_scope.start" : 82,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures6MatrixV3rowSayxGSi_tcig10startIndexL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let endIndex: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>endIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 39,
            "key.name" : "endIndex",
            "key.namelength" : 8,
            "key.nameoffset" : 2392,
            "key.offset" : 2388,
            "key.parsed_declaration" : "let endIndex = startIndex + columnCount",
            "key.parsed_scope.end" : 83,
            "key.parsed_scope.start" : 83,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures6MatrixV3rowSayxGSi_tcig8endIndexL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let startIndex: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>startIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 34,
            "key.name" : "startIndex",
            "key.namelength" : 10,
            "key.nameoffset" : 2524,
            "key.offset" : 2520,
            "key.parsed_declaration" : "let startIndex = row * columnCount",
            "key.parsed_scope.end" : 87,
            "key.parsed_scope.start" : 87,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures6MatrixV3rowSayxGSi_tcis10startIndexL_Sivp"
          },
          {
            "key.annotated_decl" : "<Declaration>let endIndex: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>endIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 39,
            "key.name" : "endIndex",
            "key.namelength" : 8,
            "key.nameoffset" : 2571,
            "key.offset" : 2567,
            "key.parsed_declaration" : "let endIndex = startIndex + columnCount",
            "key.parsed_scope.end" : 88,
            "key.parsed_scope.start" : 88,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures6MatrixV3rowSayxGSi_tcis8endIndexL_Sivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(column column: <Type usr=\"s:Si\">Int<\/Type>) -&gt; [<Type usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/Type>] { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2742
              }
            ],
            "key.bodylength" : 288,
            "key.bodyoffset" : 2794,
            "key.doc.column" : 12,
            "key.doc.comment" : "Get and set a column of values.",
            "key.doc.declaration" : "public subscript(column column: Int) -> [Element] { get set }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"94\" column=\"12\"><Name>subscript(column:)<\/Name><USR>s:14DataStructures6MatrixV6columnSayxGSi_tcip<\/USR><Declaration>public subscript(column column: Int) -&gt; [Element] { get set }<\/Declaration><CommentParts><Abstract><Para>Get and set a column of values.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 94,
            "key.doc.name" : "subscript(column:)",
            "key.doc.type" : "Other",
            "key.doclength" : 36,
            "key.docoffset" : 2702,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>column<\/decl.var.parameter.argument_label> <decl.var.parameter.name>column<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/ref.generic_type_param>]<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 334,
            "key.name" : "subscript(column:)",
            "key.namelength" : 30,
            "key.nameoffset" : 2749,
            "key.offset" : 2749,
            "key.parsed_declaration" : "public subscript (column column: Int) -> [Element]",
            "key.parsed_scope.end" : 104,
            "key.parsed_scope.start" : 94,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures6MatrixVyxSi_Sitcip\">subscript(_:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures6MatrixV3rowSayxGSi_tcip\">subscript(row:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (column: Int) -> [Element]",
            "key.typeusr" : "$S6columnSayxGSi_tcD",
            "key.usr" : "s:14DataStructures6MatrixV6columnSayxGSi_tcip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func index(_ row: <Type usr=\"s:Si\">Int<\/Type>, _ column: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3089
              }
            ],
            "key.bodylength" : 120,
            "key.bodyoffset" : 3144,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>row<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>column<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 168,
            "key.name" : "index(_:_:)",
            "key.namelength" : 32,
            "key.nameoffset" : 3102,
            "key.offset" : 3097,
            "key.parsed_declaration" : "private func index(_ row: Int, _ column: Int) -> Int?",
            "key.parsed_scope.end" : 109,
            "key.parsed_scope.start" : 106,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (Matrix<Element>) -> (Int, Int) -> Int?",
            "key.typeusr" : "$SySiSgSi_SitcD",
            "key.usr" : "s:14DataStructures6MatrixV5index33_39B04A1FB16FB1096A377BC7F344991DLLySiSgSi_SitF"
          }
        ],
        "key.typename" : "Matrix<Element>.Type",
        "key.typeusr" : "$S14DataStructures6MatrixVyxGmD",
        "key.usr" : "s:14DataStructures6MatrixV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct Matrix&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 96,
        "key.bodyoffset" : 3307,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct Matrix<Element>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "It is quite pleasant to fill a new `Matrix` value."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can ask what the value is at a given row and column."
          },
          {
            "Para" : ": Your program will crash if the row or column is invalid — so, be careful!"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also set the value at the given row and column."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"32\" column=\"15\"><Name>Matrix<\/Name><USR>s:14DataStructures6MatrixV<\/USR><Declaration>public struct Matrix&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Two-dimensional matrix with user-definable dimensions, parameterized over the generic <codeVoice>Element<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>It is quite pleasant to fill a new <codeVoice>Matrix<\/codeVoice> value.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let matrix = Matrix(height: 3, width: 3, initial: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ => 0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can ask what the value is at a given row and column.<\/Para><Para><bold>Warning<\/bold>: Your program will crash if the row or column is invalid — so, be careful!<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[matrix[row: 1, column: 2] \/\/ => 0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also set the value at the given row and column.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[matrix[row: 0, column: 1] = 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ => 0,1,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 32,
        "key.doc.name" : "Matrix",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 3287
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Matrix<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures6MatrixV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "CollectionWrapping"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 135,
        "key.name" : "Matrix",
        "key.namelength" : 6,
        "key.nameoffset" : 3279,
        "key.offset" : 3269,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 26,
            "key.name" : "MARK: - CollectionWrapping",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3316
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var base: [<Type usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3348
              }
            ],
            "key.bodylength" : 25,
            "key.bodyoffset" : 3376,
            "key.doc.column" : 9,
            "key.doc.declaration" : "var base: Base { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift\" line=\"23\" column=\"9\"><Name>base<\/Name><USR>s:14DataStructures18CollectionWrappingP4base4BaseQzvp<\/USR><Declaration>var base: Base { get }<\/Declaration><CommentParts><Abstract><Para>Wrapped <codeVoice>Collection<\/codeVoice>-conforming type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 23,
            "key.doc.name" : "base",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>base<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures6MatrixV7Elementxmfp\">Element<\/ref.generic_type_param>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 47,
            "key.name" : "base",
            "key.namelength" : 4,
            "key.nameoffset" : 3359,
            "key.offset" : 3355,
            "key.overrides" : [
              {
                "key.usr" : "s:14DataStructures18CollectionWrappingP4base4BaseQzvp"
              }
            ],
            "key.parsed_declaration" : "public var base: [Element]",
            "key.parsed_scope.end" : 118,
            "key.parsed_scope.start" : 116,
            "key.typename" : "[Element]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures18CollectionWrappingP4base4BaseQzvp"
          }
        ],
        "key.typename" : "Matrix<Element>.Type",
        "key.typeusr" : "$S14DataStructures6MatrixVyxGmD",
        "key.usr" : "s:14DataStructures6MatrixV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct Matrix&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 3460,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct Matrix<Element>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "It is quite pleasant to fill a new `Matrix` value."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can ask what the value is at a given row and column."
          },
          {
            "Para" : ": Your program will crash if the row or column is invalid — so, be careful!"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also set the value at the given row and column."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"32\" column=\"15\"><Name>Matrix<\/Name><USR>s:14DataStructures6MatrixV<\/USR><Declaration>public struct Matrix&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Two-dimensional matrix with user-definable dimensions, parameterized over the generic <codeVoice>Element<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>It is quite pleasant to fill a new <codeVoice>Matrix<\/codeVoice> value.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let matrix = Matrix(height: 3, width: 3, initial: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ => 0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can ask what the value is at a given row and column.<\/Para><Para><bold>Warning<\/bold>: Your program will crash if the row or column is invalid — so, be careful!<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[matrix[row: 1, column: 2] \/\/ => 0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also set the value at the given row and column.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[matrix[row: 0, column: 1] = 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ => 0,1,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 32,
        "key.doc.name" : "Matrix",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 3424
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Matrix<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures6MatrixV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Equatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 56,
        "key.name" : "Matrix",
        "key.namelength" : 6,
        "key.nameoffset" : 3416,
        "key.offset" : 3406,
        "key.typename" : "Matrix<Element>.Type",
        "key.typeusr" : "$S14DataStructures6MatrixVyxGmD",
        "key.usr" : "s:14DataStructures6MatrixV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct Matrix&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 954,
        "key.bodyoffset" : 3507,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct Matrix<Element>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "It is quite pleasant to fill a new `Matrix` value."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can ask what the value is at a given row and column."
          },
          {
            "Para" : ": Your program will crash if the row or column is invalid — so, be careful!"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also set the value at the given row and column."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"32\" column=\"15\"><Name>Matrix<\/Name><USR>s:14DataStructures6MatrixV<\/USR><Declaration>public struct Matrix&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Two-dimensional matrix with user-definable dimensions, parameterized over the generic <codeVoice>Element<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>It is quite pleasant to fill a new <codeVoice>Matrix<\/codeVoice> value.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let matrix = Matrix(height: 3, width: 3, initial: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ => 0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can ask what the value is at a given row and column.<\/Para><Para><bold>Warning<\/bold>: Your program will crash if the row or column is invalid — so, be careful!<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[matrix[row: 1, column: 2] \/\/ => 0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also set the value at the given row and column.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[matrix[row: 0, column: 1] = 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ => 0,1,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/    0,0,0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 32,
        "key.doc.name" : "Matrix",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 3482
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Matrix<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures6MatrixV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "CustomStringConvertible"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 998,
        "key.name" : "Matrix",
        "key.namelength" : 6,
        "key.nameoffset" : 3474,
        "key.offset" : 3464,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 31,
            "key.name" : "MARK: - CustomStringConvertible",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3516
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3594
              }
            ],
            "key.bodylength" : 833,
            "key.bodyoffset" : 3626,
            "key.doc.column" : 16,
            "key.doc.comment" : "Printed description of `Matrix`.",
            "key.doc.declaration" : "public var description: String { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"128\" column=\"16\"><Name>description<\/Name><USR>s:14DataStructures6MatrixV11descriptionSSvp<\/USR><Declaration>public var description: String { get }<\/Declaration><CommentParts><Abstract><Para>Printed description of <codeVoice>Matrix<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 128,
            "key.doc.name" : "description",
            "key.doc.type" : "Other",
            "key.doclength" : 37,
            "key.docoffset" : 3553,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 859,
            "key.name" : "description",
            "key.namelength" : 11,
            "key.nameoffset" : 3605,
            "key.offset" : 3601,
            "key.overrides" : [
              {
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "public var description: String",
            "key.parsed_scope.end" : 155,
            "key.parsed_scope.start" : 128,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:14DataStructures6MatrixV11descriptionSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func space(_ amount: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.bodylength" : 66,
            "key.bodyoffset" : 3729,
            "key.doc.column" : 14,
            "key.doc.comment" : "- Returns: Whitespace with the given width.",
            "key.doc.declaration" : "func space(_ amount: Int) -> String",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"131\" column=\"14\"><Name>space(_:)<\/Name><USR>s:14DataStructures6MatrixV11descriptionSSvg5spaceL_ySSSilF<\/USR><Declaration>func space(_ amount: Int) -&gt; String<\/Declaration><CommentParts><ResultDiscussion><Para>Whitespace with the given width.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 131,
            "key.doc.name" : "space(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Whitespace with the given width."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 48,
            "key.docoffset" : 3636,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>space<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>amount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 104,
            "key.name" : "space(_:)",
            "key.namelength" : 20,
            "key.nameoffset" : 3697,
            "key.offset" : 3692,
            "key.parsed_declaration" : "func space(_ amount: Int) -> String",
            "key.parsed_scope.end" : 133,
            "key.parsed_scope.start" : 131,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (Int) -> String",
            "key.typeusr" : "$SySSSicluD",
            "key.usr" : "s:14DataStructures6MatrixV11descriptionSSvg5spaceL_ySSSilF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func width&lt;T&gt;(_ value: <Type usr=\"s:14DataStructures6MatrixV11descriptionSSvg5widthL_ySiqd__r__lF1TL_qd__mfp\">T<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 45,
            "key.bodyoffset" : 3925,
            "key.doc.column" : 14,
            "key.doc.comment" : "- Returns: Width of a string-interpolated representation of any value.",
            "key.doc.declaration" : "func width<T>(_ value: T) -> Int",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"136\" column=\"14\"><Name>width(_:)<\/Name><USR>s:14DataStructures6MatrixV11descriptionSSvg5widthL_ySiqd__r__lF<\/USR><Declaration>func width&lt;T&gt;(_ value: T) -&gt; Int<\/Declaration><CommentParts><ResultDiscussion><Para>Width of a string-interpolated representation of any value.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 136,
            "key.doc.name" : "width(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Width of a string-interpolated representation of any value."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 75,
            "key.docoffset" : 3806,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>width<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures6MatrixV11descriptionSSvg5widthL_ySiqd__r__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures6MatrixV11descriptionSSvg5widthL_ySiqd__r__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 82,
            "key.name" : "width(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 3894,
            "key.offset" : 3889,
            "key.parsed_declaration" : "func width <T> (_ value: T) -> Int",
            "key.parsed_scope.end" : 138,
            "key.parsed_scope.start" : 136,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 3901,
                "key.offset" : 3901,
                "key.parsed_declaration" : "func width <T> (_ value: T) -> Int",
                "key.parsed_scope.end" : 136,
                "key.parsed_scope.start" : 136,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures6MatrixV11descriptionSSvg5widthL_ySiqd__r__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Element, T> (T) -> Int",
            "key.typeusr" : "$SySiqd__cr__luD",
            "key.usr" : "s:14DataStructures6MatrixV11descriptionSSvg5widthL_ySiqd__r__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func format&lt;Element&gt;(_ row: [<Type usr=\"s:14DataStructures6MatrixV11descriptionSSvg6formatL_ySSSayqd__Gr__lF7ElementL_qd__mfp\">Element<\/Type>]) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.bodylength" : 288,
            "key.bodyoffset" : 4108,
            "key.doc.column" : 14,
            "key.doc.comment" : "- Warning: Don't use `\\t`, though. Doesn't register correctly.",
            "key.doc.declaration" : "func format<Element>(_ row: [Element]) -> String",
            "key.doc.discussion" : [
              {
                "Warning" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift\" line=\"141\" column=\"14\"><Name>format(_:)<\/Name><USR>s:14DataStructures6MatrixV11descriptionSSvg6formatL_ySSSayqd__Gr__lF<\/USR><Declaration>func format&lt;Element&gt;(_ row: [Element]) -&gt; String<\/Declaration><CommentParts><Discussion><Warning><Para>Don’t use <codeVoice>\\t<\/codeVoice>, though. Doesn’t register correctly.<\/Para><\/Warning><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 141,
            "key.doc.name" : "format(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 67,
            "key.docoffset" : 3981,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>format<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures6MatrixV11descriptionSSvg6formatL_ySSSayqd__Gr__lF7ElementL_qd__mfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>row<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:14DataStructures6MatrixV11descriptionSSvg6formatL_ySSSayqd__Gr__lF7ElementL_qd__mfp\">Element<\/ref.generic_type_param>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 341,
            "key.name" : "format(_:)",
            "key.namelength" : 35,
            "key.nameoffset" : 4061,
            "key.offset" : 4056,
            "key.parsed_declaration" : "func format <Element> (_ row: [Element]) -> String",
            "key.parsed_scope.end" : 152,
            "key.parsed_scope.start" : 141,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Element<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 7,
                "key.name" : "Element",
                "key.namelength" : 7,
                "key.nameoffset" : 4069,
                "key.offset" : 4069,
                "key.parsed_declaration" : "func format <Element> (_ row: [Element]) -> String",
                "key.parsed_scope.end" : 141,
                "key.parsed_scope.start" : 141,
                "key.typename" : "Element.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures6MatrixV11descriptionSSvg6formatL_ySSSayqd__Gr__lF7ElementL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let separator: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>separator<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 20,
                "key.name" : "separator",
                "key.namelength" : 9,
                "key.nameoffset" : 4126,
                "key.offset" : 4122,
                "key.parsed_declaration" : "let separator = \"  \"",
                "key.parsed_scope.end" : 143,
                "key.parsed_scope.start" : 143,
                "key.typename" : "String",
                "key.typeusr" : "$SSSD",
                "key.usr" : "s:14DataStructures6MatrixV11descriptionSSvg6formatL_ySSSayqd__Gr__lF9separatorL_SSvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let columnWidth: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Matrix.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>columnWidth<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 103,
                "key.name" : "columnWidth",
                "key.namelength" : 11,
                "key.nameoffset" : 4160,
                "key.offset" : 4156,
                "key.parsed_declaration" : "let columnWidth = columns",
                "key.parsed_scope.end" : 145,
                "key.parsed_scope.start" : 145,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:14DataStructures6MatrixV11descriptionSSvg6formatL_ySSSayqd__Gr__lF11columnWidthL_Sivp"
              }
            ],
            "key.typename" : "<Element, Element> ([Element]) -> String",
            "key.typeusr" : "$SySSSayqd__Gcr__luD",
            "key.usr" : "s:14DataStructures6MatrixV11descriptionSSvg6formatL_ySSSayqd__Gr__lF"
          }
        ],
        "key.typename" : "Matrix<Element>.Type",
        "key.typeusr" : "$S14DataStructures6MatrixVyxGmD",
        "key.usr" : "s:14DataStructures6MatrixV"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3815,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct OrderedDictionary&lt;Key, Value&gt; : <Type usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/Type> where Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 120
          }
        ],
        "key.bodylength" : 1782,
        "key.bodyoffset" : 196,
        "key.doc.column" : 15,
        "key.doc.comment" : "Ordered Dictionary.",
        "key.doc.declaration" : "public struct OrderedDictionary<Key, Value> : DictionaryProtocol where Key : Hashable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"10\" column=\"15\"><Name>OrderedDictionary<\/Name><USR>s:14DataStructures17OrderedDictionaryV<\/USR><Declaration>public struct OrderedDictionary&lt;Key, Value&gt; : DictionaryProtocol where Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Ordered Dictionary.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "OrderedDictionary",
        "key.doc.type" : "Class",
        "key.doclength" : 24,
        "key.docoffset" : 96,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 176
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>OrderedDictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "DictionaryProtocol"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1852,
        "key.name" : "OrderedDictionary",
        "key.namelength" : 17,
        "key.nameoffset" : 134,
        "key.offset" : 127,
        "key.parsed_declaration" : "public struct OrderedDictionary <Key: Hashable, Value>: DictionaryProtocol",
        "key.parsed_scope.end" : 80,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 158
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Key<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Hashable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 13,
            "key.name" : "Key",
            "key.namelength" : 3,
            "key.nameoffset" : 153,
            "key.offset" : 153,
            "key.parsed_declaration" : "public struct OrderedDictionary <Key: Hashable, Value>: DictionaryProtocol",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryV3Keya\">Key<\/RelatedName>"
              }
            ],
            "key.typename" : "Key.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV3Keyxmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Value<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 5,
            "key.name" : "Value",
            "key.namelength" : 5,
            "key.nameoffset" : 168,
            "key.offset" : 168,
            "key.parsed_declaration" : "public struct OrderedDictionary <Key: Hashable, Value>: DictionaryProtocol",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryV5Valuea\">Value<\/RelatedName>"
              }
            ],
            "key.typename" : "Value.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV5Valueq_mfp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 205
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var keys: [Key]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 260
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Ordered keys.",
            "key.doc.declaration" : "public var keys: [Key]",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"15\" column=\"16\"><Name>keys<\/Name><USR>s:14DataStructures17OrderedDictionaryV4keysSayxGvp<\/USR><Declaration>public var keys: [Key]<\/Declaration><CommentParts><Abstract><Para>Ordered keys.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 15,
            "key.doc.name" : "keys",
            "key.doc.type" : "Other",
            "key.doclength" : 18,
            "key.docoffset" : 238,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>keys<\/decl.name>: <decl.var.type>[Key]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.name" : "keys",
            "key.namelength" : 4,
            "key.nameoffset" : 271,
            "key.offset" : 267,
            "key.parsed_declaration" : "public var keys: [Key] = []",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[Key]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV4keysSayxGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var values: [Key : Value]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 309
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Values.",
            "key.doc.declaration" : "public var values: [Key : Value]",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"18\" column=\"16\"><Name>values<\/Name><USR>s:14DataStructures17OrderedDictionaryV6valuesSDyxq_Gvp<\/USR><Declaration>public var values: [Key : Value]<\/Declaration><CommentParts><Abstract><Para>Values.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 18,
            "key.doc.name" : "values",
            "key.doc.type" : "Other",
            "key.doclength" : 12,
            "key.docoffset" : 293,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>values<\/decl.name>: <decl.var.type>[Key : Value]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.name" : "values",
            "key.namelength" : 6,
            "key.nameoffset" : 320,
            "key.offset" : 316,
            "key.parsed_declaration" : "public var values: [Key: Value] = [:]",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[Key : Value]",
            "key.typeusr" : "$SSDyxq_GD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV6valuesSDyxq_Gvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - Initializers",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 355
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 425
              }
            ],
            "key.bodylength" : 1,
            "key.bodyoffset" : 440,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create an empty `OrderedDictionary`",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"23\" column=\"12\"><Name>init()<\/Name><USR>s:14DataStructures17OrderedDictionaryVACyxq_Gycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Create an empty <codeVoice>OrderedDictionary<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 23,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 40,
            "key.docoffset" : 381,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 10,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 432,
            "key.offset" : 432,
            "key.overrides" : [
              {
                "key.usr" : "s:14DataStructures18DictionaryProtocolPxycfc"
              }
            ],
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryV17dictionaryLiteralACyxq_Gx_q_td_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              }
            ],
            "key.typename" : "<Key, Value where Key : Hashable> (OrderedDictionary<Key, Value>.Type) -> () -> OrderedDictionary<Key, Value>",
            "key.typeusr" : "$S14DataStructures17OrderedDictionaryVyxq_GycD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryVACyxq_Gycfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: - Subscripts",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 451
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(key: <Type usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/Type>) -&gt; <Type usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 553
              }
            ],
            "key.bodylength" : 420,
            "key.bodyoffset" : 591,
            "key.doc.column" : 12,
            "key.doc.comment" : "- returns: Value for the given `key`, if available. Otherwise, `nil`.",
            "key.doc.declaration" : "public subscript(key: Key) -> Value? { get set }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"28\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:14DataStructures17OrderedDictionaryVyq_Sgxcip<\/USR><Declaration>public subscript(key: Key) -&gt; Value? { get set }<\/Declaration><CommentParts><ResultDiscussion><Para>Value for the given <codeVoice>key<\/codeVoice>, if available. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 28,
            "key.doc.name" : "subscript(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Value for the given `key`, if available. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 74,
            "key.docoffset" : 475,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param>?<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 452,
            "key.name" : "subscript(_:)",
            "key.namelength" : 19,
            "key.nameoffset" : 560,
            "key.offset" : 560,
            "key.overrides" : [
              {
                "key.usr" : "s:14DataStructures18DictionaryProtocolPy5ValueQzSg3KeyQzcip"
              }
            ],
            "key.parsed_declaration" : "public subscript(key: Key) -> Value?",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 28,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVyx_q_tSicip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Hashable> (Key) -> Value?",
            "key.typeusr" : "$Syq_SgxcD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryVyq_Sgxcip"
          },
          {
            "key.annotated_decl" : "<Declaration>let oldValue: Value?<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>oldValue<\/decl.name>: <decl.var.type>Value?<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 56,
            "key.name" : "oldValue",
            "key.namelength" : 8,
            "key.nameoffset" : 864,
            "key.offset" : 860,
            "key.parsed_declaration" : "let oldValue = values.updateValue(newValue, forKey: key)",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 42,
            "key.typename" : "Value?",
            "key.typeusr" : "$Sq_SgD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryVyq_Sgxcis8oldValueL_ADvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1021
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func append(_ value: <Type usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/Type>, key: <Type usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1098
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1091
              }
            ],
            "key.bodylength" : 58,
            "key.bodyoffset" : 1146,
            "key.doc.column" : 26,
            "key.doc.comment" : "Append `value` for given `key`.",
            "key.doc.declaration" : "public mutating func append(_ value: Value, key: Key)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"52\" column=\"26\"><Name>append(_:key:)<\/Name><USR>s:14DataStructures17OrderedDictionaryV6append_3keyyq__xtF<\/USR><Declaration>public mutating func append(_ value: Value, key: Key)<\/Declaration><CommentParts><Abstract><Para>Append <codeVoice>value<\/codeVoice> for given <codeVoice>key<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 52,
            "key.doc.name" : "append(_:key:)",
            "key.doc.type" : "Function",
            "key.doclength" : 36,
            "key.docoffset" : 1051,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>append<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>key<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 98,
            "key.name" : "append(_:key:)",
            "key.namelength" : 32,
            "key.nameoffset" : 1112,
            "key.offset" : 1107,
            "key.parsed_declaration" : "public mutating func append(_ value: Value, key: Key)",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 52,
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Hashable> (inout OrderedDictionary<Key, Value>) -> (Value, Key) -> ()",
            "key.typeusr" : "$S_3keyyq__xtcD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV6append_3keyyq__xtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func insert(_ value: <Type usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/Type>, key: <Type usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/Type>, index: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1269
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1262
              }
            ],
            "key.bodylength" : 69,
            "key.bodyoffset" : 1329,
            "key.doc.column" : 26,
            "key.doc.comment" : "Insert `value` for given `key` at `index`.",
            "key.doc.declaration" : "public mutating func insert(_ value: Value, key: Key, index: Int)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"58\" column=\"26\"><Name>insert(_:key:index:)<\/Name><USR>s:14DataStructures17OrderedDictionaryV6insert_3key5indexyq__xSitF<\/USR><Declaration>public mutating func insert(_ value: Value, key: Key, index: Int)<\/Declaration><CommentParts><Abstract><Para>Insert <codeVoice>value<\/codeVoice> for given <codeVoice>key<\/codeVoice> at <codeVoice>index<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 58,
            "key.doc.name" : "insert(_:key:index:)",
            "key.doc.type" : "Function",
            "key.doclength" : 47,
            "key.docoffset" : 1211,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>insert<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>key<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>index<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 121,
            "key.name" : "insert(_:key:index:)",
            "key.namelength" : 44,
            "key.nameoffset" : 1283,
            "key.offset" : 1278,
            "key.parsed_declaration" : "public mutating func insert(_ value: Value, key: Key, index: Int)",
            "key.parsed_scope.end" : 61,
            "key.parsed_scope.start" : 58,
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Hashable> (inout OrderedDictionary<Key, Value>) -> (Value, Key, Int) -> ()",
            "key.typeusr" : "$S_3key5indexyq__xSitcD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV6insert_3key5indexyq__xSitF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func appendContents(of orderedDictionary: <Type usr=\"s:14DataStructures17OrderedDictionaryV\">OrderedDictionary<\/Type>&lt;<Type usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/Type>, <Type usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/Type>&gt;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1482
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1475
              }
            ],
            "key.bodylength" : 184,
            "key.bodyoffset" : 1564,
            "key.doc.column" : 26,
            "key.doc.comment" : "Append the contents of another `OrderedDictionary` structure.",
            "key.doc.declaration" : "public mutating func appendContents(of orderedDictionary: OrderedDictionary<Key, Value>)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"64\" column=\"26\"><Name>appendContents(of:)<\/Name><USR>s:14DataStructures17OrderedDictionaryV14appendContents2ofyACyxq_G_tF<\/USR><Declaration>public mutating func appendContents(of orderedDictionary: OrderedDictionary&lt;Key, Value&gt;)<\/Declaration><CommentParts><Abstract><Para>Append the contents of another <codeVoice>OrderedDictionary<\/codeVoice> structure.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 64,
            "key.doc.name" : "appendContents(of:)",
            "key.doc.type" : "Function",
            "key.doclength" : 66,
            "key.docoffset" : 1405,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>appendContents<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>orderedDictionary<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures17OrderedDictionaryV\">OrderedDictionary<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 258,
            "key.name" : "appendContents(of:)",
            "key.namelength" : 66,
            "key.nameoffset" : 1496,
            "key.offset" : 1491,
            "key.parsed_declaration" : "public mutating func appendContents(of orderedDictionary: OrderedDictionary<Key,Value>)",
            "key.parsed_scope.end" : 69,
            "key.parsed_scope.start" : 64,
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Hashable> (inout OrderedDictionary<Key, Value>) -> (OrderedDictionary<Key, Value>) -> ()",
            "key.typeusr" : "$S2ofy14DataStructures17OrderedDictionaryVyxq_G_tcD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV14appendContents2ofyACyxq_G_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func value(index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1806
              }
            ],
            "key.bodylength" : 129,
            "key.bodyoffset" : 1847,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: The value at the given `index`.",
            "key.doc.declaration" : "public func value(index: Int) -> Value?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"72\" column=\"17\"><Name>value(index:)<\/Name><USR>s:14DataStructures17OrderedDictionaryV5value5indexq_SgSi_tF<\/USR><Declaration>public func value(index: Int) -&gt; Value?<\/Declaration><CommentParts><ResultDiscussion><Para>The value at the given <codeVoice>index<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 72,
            "key.doc.name" : "value(index:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "The value at the given `index`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 47,
            "key.docoffset" : 1755,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>value<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>index<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 164,
            "key.name" : "value(index:)",
            "key.namelength" : 17,
            "key.nameoffset" : 1818,
            "key.offset" : 1813,
            "key.parsed_declaration" : "public func value(index: Int) -> Value?",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 72,
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Hashable> (OrderedDictionary<Key, Value>) -> (Int) -> Value?",
            "key.typeusr" : "$S5indexq_SgSi_tcD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV5value5indexq_SgSi_tF"
          }
        ],
        "key.typename" : "OrderedDictionary<Key, Value>.Type",
        "key.typeusr" : "$S14DataStructures17OrderedDictionaryVyxq_GmD",
        "key.usr" : "s:14DataStructures17OrderedDictionaryV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct OrderedDictionary&lt;Key, Value&gt; : <Type usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/Type> where Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 601,
        "key.bodyoffset" : 2022,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct OrderedDictionary<Key, Value> : DictionaryProtocol where Key : Hashable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"10\" column=\"15\"><Name>OrderedDictionary<\/Name><USR>s:14DataStructures17OrderedDictionaryV<\/USR><Declaration>public struct OrderedDictionary&lt;Key, Value&gt; : DictionaryProtocol where Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Ordered Dictionary.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "OrderedDictionary",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 2010
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>OrderedDictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Collection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 643,
        "key.name" : "OrderedDictionary",
        "key.namelength" : 17,
        "key.nameoffset" : 1991,
        "key.offset" : 1981,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - `Collection`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2031
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(after i: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2096
              }
            ],
            "key.bodylength" : 125,
            "key.bodyoffset" : 2136,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Index after given index `i`.",
            "key.doc.declaration" : "public func index(after i: Int) -> Int",
            "key.doc.discussion" : [
              {
                "List-Bullet" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"87\" column=\"17\"><Name>index(after:)<\/Name><USR>s:14DataStructures17OrderedDictionaryV5index5afterS2i_tF<\/USR><Declaration>public func index(after i: Int) -&gt; Int<\/Declaration><CommentParts><Discussion><List-Bullet><Item><Para>Index after given index <codeVoice>i<\/codeVoice>.<\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 87,
            "key.doc.name" : "index(after:)",
            "key.doc.type" : "Function",
            "key.doclength" : 35,
            "key.docoffset" : 2057,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>after<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 159,
            "key.name" : "index(after:)",
            "key.namelength" : 19,
            "key.nameoffset" : 2108,
            "key.offset" : 2103,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl5index5after5IndexQzAD_tF"
              }
            ],
            "key.parsed_declaration" : "public func index(after i: Int) -> Int",
            "key.parsed_scope.end" : 94,
            "key.parsed_scope.start" : 87,
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Hashable> (OrderedDictionary<Key, Value>) -> (Int) -> Int",
            "key.typeusr" : "$S5afterS2i_tcD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV5index5afterS2i_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var startIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2289
              }
            ],
            "key.bodylength" : 22,
            "key.bodyoffset" : 2317,
            "key.doc.column" : 16,
            "key.doc.comment" : "Start index.",
            "key.doc.declaration" : "public var startIndex: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"97\" column=\"16\"><Name>startIndex<\/Name><USR>s:14DataStructures17OrderedDictionaryV10startIndexSivp<\/USR><Declaration>public var startIndex: Int { get }<\/Declaration><CommentParts><Abstract><Para>Start index.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 97,
            "key.doc.name" : "startIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 17,
            "key.docoffset" : 2268,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>startIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.name" : "startIndex",
            "key.namelength" : 10,
            "key.nameoffset" : 2300,
            "key.offset" : 2296,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl10startIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var startIndex: Int",
            "key.parsed_scope.end" : 99,
            "key.parsed_scope.start" : 97,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV10startIndexSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var endIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2365
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 2391,
            "key.doc.column" : 16,
            "key.doc.comment" : "End index.",
            "key.doc.declaration" : "public var endIndex: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"102\" column=\"16\"><Name>endIndex<\/Name><USR>s:14DataStructures17OrderedDictionaryV8endIndexSivp<\/USR><Declaration>public var endIndex: Int { get }<\/Declaration><CommentParts><Abstract><Para>End index.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 102,
            "key.doc.name" : "endIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 15,
            "key.docoffset" : 2346,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>endIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.name" : "endIndex",
            "key.namelength" : 8,
            "key.nameoffset" : 2376,
            "key.offset" : 2372,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl8endIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var endIndex: Int",
            "key.parsed_scope.end" : 104,
            "key.parsed_scope.start" : 102,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV8endIndexSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; (<Type usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/Type>, <Type usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/Type>) { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2478
              }
            ],
            "key.bodylength" : 96,
            "key.bodyoffset" : 2525,
            "key.doc.column" : 12,
            "key.doc.comment" : "- returns: Element at the given `index`.",
            "key.doc.declaration" : "public subscript(index: Int) -> (Key, Value) { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"107\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:14DataStructures17OrderedDictionaryVyx_q_tSicip<\/USR><Declaration>public subscript(index: Int) -&gt; (Key, Value) { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Element at the given <codeVoice>index<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 107,
            "key.doc.name" : "subscript(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Element at the given `index`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 45,
            "key.docoffset" : 2429,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 137,
            "key.name" : "subscript(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 2485,
            "key.offset" : 2485,
            "key.overrides" : [
              {
                "key.usr" : "s:Sly7ElementQz5IndexQzcip"
              }
            ],
            "key.parsed_declaration" : "public subscript (index: Int) -> (Key, Value)",
            "key.parsed_scope.end" : 111,
            "key.parsed_scope.start" : 107,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVyq_Sgxcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Hashable> (Int) -> (Key, Value)",
            "key.typeusr" : "$Syx_q_tSicD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryVyx_q_tSicip"
          },
          {
            "key.annotated_decl" : "<Declaration>let key: Key<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type>Key<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 21,
            "key.name" : "key",
            "key.namelength" : 3,
            "key.nameoffset" : 2538,
            "key.offset" : 2534,
            "key.parsed_declaration" : "let key = keys[index]",
            "key.parsed_scope.end" : 108,
            "key.parsed_scope.start" : 108,
            "key.typename" : "Key",
            "key.typeusr" : "$SxD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryVyx_q_tSicig3keyL_xvp"
          },
          {
            "key.annotated_decl" : "<Declaration>let value: Value<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type>Value<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 24,
            "key.name" : "value",
            "key.namelength" : 5,
            "key.nameoffset" : 2568,
            "key.offset" : 2564,
            "key.parsed_declaration" : "let value = values[key]!",
            "key.parsed_scope.end" : 109,
            "key.parsed_scope.start" : 109,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryV5value5indexq_SgSi_tF\">value(index:)<\/RelatedName>"
              }
            ],
            "key.typename" : "Value",
            "key.typeusr" : "$Sq_D",
            "key.usr" : "s:14DataStructures17OrderedDictionaryVyx_q_tSicig5valueL_q_vp"
          }
        ],
        "key.typename" : "OrderedDictionary<Key, Value>.Type",
        "key.typeusr" : "$S14DataStructures17OrderedDictionaryVyxq_GmD",
        "key.usr" : "s:14DataStructures17OrderedDictionaryV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct OrderedDictionary&lt;Key, Value&gt; : <Type usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/Type> where Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 651,
        "key.bodyoffset" : 2689,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct OrderedDictionary<Key, Value> : DictionaryProtocol where Key : Hashable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"10\" column=\"15\"><Name>OrderedDictionary<\/Name><USR>s:14DataStructures17OrderedDictionaryV<\/USR><Declaration>public struct OrderedDictionary&lt;Key, Value&gt; : DictionaryProtocol where Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Ordered Dictionary.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "OrderedDictionary",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 2655
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>OrderedDictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Equatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 715,
        "key.name" : "OrderedDictionary",
        "key.namelength" : 17,
        "key.nameoffset" : 2636,
        "key.offset" : 2626,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func == (lhs: <Type usr=\"s:14DataStructures17OrderedDictionaryV\">OrderedDictionary<\/Type>, rhs: <Type usr=\"s:14DataStructures17OrderedDictionaryV\">OrderedDictionary<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2824
              }
            ],
            "key.bodylength" : 434,
            "key.bodyoffset" : 2904,
            "key.doc.column" : 24,
            "key.doc.comment" : "- returns: `true` if all values contained in both `OrderedDictionary` values are\nequivalent. Otherwise, `false`.",
            "key.doc.declaration" : "public static func == (lhs: OrderedDictionary, rhs: OrderedDictionary) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"118\" column=\"24\"><Name>==(_:_:)<\/Name><USR>s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ<\/USR><Declaration>public static func == (lhs: OrderedDictionary, rhs: OrderedDictionary) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if all values contained in both <codeVoice>OrderedDictionary<\/codeVoice> values are equivalent. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 118,
            "key.doc.name" : "==(_:_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if all values contained in both `OrderedDictionary` values are equivalent. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 125,
            "key.docoffset" : 2695,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures17OrderedDictionaryV\">OrderedDictionary<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures17OrderedDictionaryV\">OrderedDictionary<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 508,
            "key.name" : "==(_:_:)",
            "key.namelength" : 51,
            "key.nameoffset" : 2843,
            "key.offset" : 2831,
            "key.overrides" : [
              {
                "key.usr" : "s:SQ2eeoiySbx_xtFZ"
              }
            ],
            "key.parsed_declaration" : "public static func == (lhs: OrderedDictionary, rhs: OrderedDictionary) -> Bool",
            "key.parsed_scope.end" : 139,
            "key.parsed_scope.start" : 118,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let lhs: <Type usr=\"s:14DataStructures17OrderedDictionaryV\">OrderedDictionary<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
                "key.fully_annotated_decl" : "<decl.var.parameter><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures17OrderedDictionaryV\">OrderedDictionary<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>",
                "key.kind" : "source.lang.swift.decl.var.parameter",
                "key.length" : 3,
                "key.name" : "lhs",
                "key.offset" : 2847,
                "key.parent_loc" : 2843,
                "key.parsed_declaration" : "public static func == (lhs: OrderedDictionary, rhs: OrderedDictionary) -> Bool",
                "key.parsed_scope.end" : 118,
                "key.parsed_scope.start" : 118,
                "key.typename" : "OrderedDictionary<Key, Value>",
                "key.typeusr" : "$S14DataStructures17OrderedDictionaryVyxq_GD",
                "key.usr" : "s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ3lhsL_AEvp"
              }
            ],
            "key.typename" : "<Key, Value where Key : Hashable, Value : Equatable> (OrderedDictionary<Key, Value>.Type) -> (OrderedDictionary<Key, Value>, OrderedDictionary<Key, Value>) -> Bool",
            "key.typeusr" : "$SySb14DataStructures17OrderedDictionaryVyxq_G_ADtcD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ"
          }
        ],
        "key.typename" : "OrderedDictionary<Key, Value>.Type",
        "key.typeusr" : "$S14DataStructures17OrderedDictionaryVyxq_GmD",
        "key.usr" : "s:14DataStructures17OrderedDictionaryV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct OrderedDictionary&lt;Key, Value&gt; : <Type usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/Type> where Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 285,
        "key.bodyoffset" : 3404,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct OrderedDictionary<Key, Value> : DictionaryProtocol where Key : Hashable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"10\" column=\"15\"><Name>OrderedDictionary<\/Name><USR>s:14DataStructures17OrderedDictionaryV<\/USR><Declaration>public struct OrderedDictionary&lt;Key, Value&gt; : DictionaryProtocol where Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Ordered Dictionary.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "OrderedDictionary",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 30,
            "key.offset" : 3372
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>OrderedDictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ExpressibleByDictionaryLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 347,
        "key.name" : "OrderedDictionary",
        "key.namelength" : 17,
        "key.nameoffset" : 3353,
        "key.offset" : 3343,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 40,
            "key.name" : "MARK: - `ExpressibleByDictionaryLiteral`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3413
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(dictionaryLiteral elements: (<Type usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/Type>, <Type usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/Type>)...)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3525
              }
            ],
            "key.bodylength" : 104,
            "key.bodyoffset" : 3583,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create an `OrderedDictionary` with a `DictionaryLiteral`.",
            "key.doc.declaration" : "public init(dictionaryLiteral elements: (Key, Value)...)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift\" line=\"147\" column=\"12\"><Name>init(dictionaryLiteral:)<\/Name><USR>s:14DataStructures17OrderedDictionaryV17dictionaryLiteralACyxq_Gx_q_td_tcfc<\/USR><Declaration>public init(dictionaryLiteral elements: (Key, Value)...)<\/Declaration><CommentParts><Abstract><Para>Create an <codeVoice>OrderedDictionary<\/codeVoice> with a <codeVoice>DictionaryLiteral<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 147,
            "key.doc.name" : "init(dictionaryLiteral:)",
            "key.doc.type" : "Function",
            "key.doclength" : 62,
            "key.docoffset" : 3459,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/OrderedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dictionaryLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures17OrderedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.var.parameter.type>...<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 156,
            "key.name" : "init(dictionaryLiteral:)",
            "key.namelength" : 49,
            "key.nameoffset" : 3532,
            "key.offset" : 3532,
            "key.overrides" : [
              {
                "key.usr" : "s:s30ExpressibleByDictionaryLiteralP010dictionaryD0x3KeyQz_5ValueQztd_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(dictionaryLiteral elements: (Key, Value)...)",
            "key.parsed_scope.end" : 154,
            "key.parsed_scope.start" : 147,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVACyxq_Gycfc\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Hashable> (OrderedDictionary<Key, Value>.Type) -> ((Key, Value)...) -> OrderedDictionary<Key, Value>",
            "key.typeusr" : "$S17dictionaryLiteral14DataStructures17OrderedDictionaryVyxq_Gx_q_td_tcD",
            "key.usr" : "s:14DataStructures17OrderedDictionaryV17dictionaryLiteralACyxq_Gx_q_td_tcfc"
          }
        ],
        "key.typename" : "OrderedDictionary<Key, Value>.Type",
        "key.typeusr" : "$S14DataStructures17OrderedDictionaryVyxq_GmD",
        "key.usr" : "s:14DataStructures17OrderedDictionaryV"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol+Algebra.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 695,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>struct ClosedRange&lt;Bound&gt; where Bound : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.bodylength" : 128,
        "key.bodyoffset" : 162,
        "key.doc.declaration" : "struct ClosedRange<Bound> where Bound : Comparable",
        "key.doc.discussion" : [
          {
            "Para" : "You create a `ClosedRange` instance by using the closed range operator (`...`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A `ClosedRange` instance contains both its lower bound and its upper bound."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Because a closed range includes its upper bound, a closed range whose lower bound is equal to the upper bound contains that value. Therefore, a `ClosedRange` instance cannot represent an empty range."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When a closed range uses integers as its lower and upper bounds, or any other type that conforms to the `Strideable` protocol with an integer stride, you can use that range in a `for`-`in` loop or with any sequence or collection method. The elements of the range are the consecutive values from its lower bound up to, and including, its upper bound."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Because floating-point types such as `Float` and `Double` are their own `Stride` types, they cannot be used as the bounds of a countable range. If you need to iterate over consecutive floating-point values, see the `stride(from:through:by:)` function."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>ClosedRange<\/Name><USR>s:SN<\/USR><Declaration>struct ClosedRange&lt;Bound&gt; where Bound : Comparable<\/Declaration><CommentParts><Abstract><Para>An interval from a lower bound up to, and including, an upper bound.<\/Para><\/Abstract><Discussion><Para>You create a <codeVoice>ClosedRange<\/codeVoice> instance by using the closed range operator (<codeVoice>...<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let throughFive = 0...5]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A <codeVoice>ClosedRange<\/codeVoice> instance contains both its lower bound and its upper bound.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[throughFive.contains(3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[throughFive.contains(10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ false]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[throughFive.contains(5)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Because a closed range includes its upper bound, a closed range whose lower bound is equal to the upper bound contains that value. Therefore, a <codeVoice>ClosedRange<\/codeVoice> instance cannot represent an empty range.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let zeroInclusive = 0...0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[zeroInclusive.contains(0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[zeroInclusive.isEmpty]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ false]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Using a Closed Range as a Collection of Consecutive Values<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>When a closed range uses integers as its lower and upper bounds, or any other type that conforms to the <codeVoice>Strideable<\/codeVoice> protocol with an integer stride, you can use that range in a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop or with any sequence or collection method. The elements of the range are the consecutive values from its lower bound up to, and including, its upper bound.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for n in 3...5 {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(n)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"5\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Because floating-point types such as <codeVoice>Float<\/codeVoice> and <codeVoice>Double<\/codeVoice> are their own <codeVoice>Stride<\/codeVoice> types, they cannot be used as the bounds of a countable range. If you need to iterate over consecutive floating-point values, see the <codeVoice>stride(from:through:by:)<\/codeVoice> function.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "ClosedRange",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 4,
            "key.offset" : 138
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ClosedRange<\/decl.name>&lt;<decl.generic_type_param usr=\"s:SN5Boundxmfp\"><decl.generic_type_param.name>Bound<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Bound : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.groupname" : "Collection",
        "key.inheritedtypes" : [
          {
            "key.name" : "Zero"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 176,
        "key.modulename" : "Swift",
        "key.name" : "ClosedRange",
        "key.namelength" : 11,
        "key.nameoffset" : 125,
        "key.offset" : 115,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var zero: <Type usr=\"s:SN\">ClosedRange<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 172
              }
            ],
            "key.bodylength" : 79,
            "key.bodyoffset" : 209,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol+Algebra.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>zero<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SN\">ClosedRange<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 110,
            "key.name" : "zero",
            "key.namelength" : 4,
            "key.nameoffset" : 190,
            "key.offset" : 179,
            "key.parsed_declaration" : "public static var zero: ClosedRange",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 12,
            "key.typename" : "ClosedRange<Bound>",
            "key.typeusr" : "$SSNyxGD",
            "key.usr" : "s:SN14DataStructuresE4zeroSNyxGvpZ"
          }
        ],
        "key.typename" : "ClosedRange<Bound>.Type",
        "key.typeusr" : "$SSNyxGmD",
        "key.usr" : "s:SN"
      },
      {
        "key.annotated_decl" : "<Declaration>struct ClosedRange&lt;Bound&gt; where Bound : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.bodylength" : 285,
        "key.bodyoffset" : 353,
        "key.doc.declaration" : "struct ClosedRange<Bound> where Bound : Comparable",
        "key.doc.discussion" : [
          {
            "Para" : "You create a `ClosedRange` instance by using the closed range operator (`...`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A `ClosedRange` instance contains both its lower bound and its upper bound."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Because a closed range includes its upper bound, a closed range whose lower bound is equal to the upper bound contains that value. Therefore, a `ClosedRange` instance cannot represent an empty range."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When a closed range uses integers as its lower and upper bounds, or any other type that conforms to the `Strideable` protocol with an integer stride, you can use that range in a `for`-`in` loop or with any sequence or collection method. The elements of the range are the consecutive values from its lower bound up to, and including, its upper bound."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Because floating-point types such as `Float` and `Double` are their own `Stride` types, they cannot be used as the bounds of a countable range. If you need to iterate over consecutive floating-point values, see the `stride(from:through:by:)` function."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>ClosedRange<\/Name><USR>s:SN<\/USR><Declaration>struct ClosedRange&lt;Bound&gt; where Bound : Comparable<\/Declaration><CommentParts><Abstract><Para>An interval from a lower bound up to, and including, an upper bound.<\/Para><\/Abstract><Discussion><Para>You create a <codeVoice>ClosedRange<\/codeVoice> instance by using the closed range operator (<codeVoice>...<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let throughFive = 0...5]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A <codeVoice>ClosedRange<\/codeVoice> instance contains both its lower bound and its upper bound.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[throughFive.contains(3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[throughFive.contains(10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ false]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[throughFive.contains(5)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Because a closed range includes its upper bound, a closed range whose lower bound is equal to the upper bound contains that value. Therefore, a <codeVoice>ClosedRange<\/codeVoice> instance cannot represent an empty range.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let zeroInclusive = 0...0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[zeroInclusive.contains(0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[zeroInclusive.isEmpty]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ false]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Using a Closed Range as a Collection of Consecutive Values<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>When a closed range uses integers as its lower and upper bounds, or any other type that conforms to the <codeVoice>Strideable<\/codeVoice> protocol with an integer stride, you can use that range in a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop or with any sequence or collection method. The elements of the range are the consecutive values from its lower bound up to, and including, its upper bound.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for n in 3...5 {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(n)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"5\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Because floating-point types such as <codeVoice>Float<\/codeVoice> and <codeVoice>Double<\/codeVoice> are their own <codeVoice>Stride<\/codeVoice> types, they cannot be used as the bounds of a countable range. If you need to iterate over consecutive floating-point values, see the <codeVoice>stride(from:through:by:)<\/codeVoice> function.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "ClosedRange",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 316
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ClosedRange<\/decl.name>&lt;<decl.generic_type_param usr=\"s:SN5Boundxmfp\"><decl.generic_type_param.name>Bound<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Bound : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.groupname" : "Collection",
        "key.inheritedtypes" : [
          {
            "key.name" : "AdditiveSemigroup"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 346,
        "key.modulename" : "Swift",
        "key.name" : "ClosedRange",
        "key.namelength" : 11,
        "key.nameoffset" : 303,
        "key.offset" : 293,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func + (lhs: <Type usr=\"s:SN\">ClosedRange<\/Type>, rhs: <Type usr=\"s:SN\">ClosedRange<\/Type>) -&gt; <Type usr=\"s:SN\">ClosedRange<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 359
              }
            ],
            "key.bodylength" : 203,
            "key.bodyoffset" : 433,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol+Algebra.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SN\">ClosedRange<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SN\">ClosedRange<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SN\">ClosedRange<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 271,
            "key.name" : "+(_:_:)",
            "key.namelength" : 38,
            "key.nameoffset" : 378,
            "key.offset" : 366,
            "key.parsed_declaration" : "public static func + (lhs: ClosedRange, rhs: ClosedRange) -> ClosedRange",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 19,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let lower: Bound<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol+Algebra.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>lower<\/decl.name>: <decl.var.type>Bound<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Collection",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 53,
                "key.name" : "lower",
                "key.namelength" : 5,
                "key.nameoffset" : 446,
                "key.offset" : 442,
                "key.parsed_declaration" : "let lower = Swift.min(lhs.lowerBound, rhs.lowerBound)",
                "key.parsed_scope.end" : 20,
                "key.parsed_scope.start" : 20,
                "key.typename" : "Bound",
                "key.typeusr" : "$SxD",
                "key.usr" : "s:SN14DataStructuresE1poiySNyxGAC_ACtFZ5lowerL_xvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let upper: Bound<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol+Algebra.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>upper<\/decl.name>: <decl.var.type>Bound<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Collection",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 53,
                "key.name" : "upper",
                "key.namelength" : 5,
                "key.nameoffset" : 508,
                "key.offset" : 504,
                "key.parsed_declaration" : "let upper = Swift.max(lhs.upperBound, rhs.upperBound)",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.typename" : "Bound",
                "key.typeusr" : "$SxD",
                "key.usr" : "s:SN14DataStructuresE1poiySNyxGAC_ACtFZ5upperL_xvp"
              }
            ],
            "key.typename" : "<Bound where Bound : Comparable> (ClosedRange<Bound>.Type) -> (ClosedRange<Bound>, ClosedRange<Bound>) -> ClosedRange<Bound>",
            "key.typeusr" : "$SySNyxGAA_AAtcD",
            "key.usr" : "s:SN14DataStructuresE1poiySNyxGAC_ACtFZ"
          }
        ],
        "key.typename" : "ClosedRange<Bound>.Type",
        "key.typeusr" : "$SSNyxGmD",
        "key.usr" : "s:SN"
      },
      {
        "key.annotated_decl" : "<Declaration>struct ClosedRange&lt;Bound&gt; where Bound : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 692,
        "key.doc.declaration" : "struct ClosedRange<Bound> where Bound : Comparable",
        "key.doc.discussion" : [
          {
            "Para" : "You create a `ClosedRange` instance by using the closed range operator (`...`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A `ClosedRange` instance contains both its lower bound and its upper bound."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Because a closed range includes its upper bound, a closed range whose lower bound is equal to the upper bound contains that value. Therefore, a `ClosedRange` instance cannot represent an empty range."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When a closed range uses integers as its lower and upper bounds, or any other type that conforms to the `Strideable` protocol with an integer stride, you can use that range in a `for`-`in` loop or with any sequence or collection method. The elements of the range are the consecutive values from its lower bound up to, and including, its upper bound."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Because floating-point types such as `Float` and `Double` are their own `Stride` types, they cannot be used as the bounds of a countable range. If you need to iterate over consecutive floating-point values, see the `stride(from:through:by:)` function."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>ClosedRange<\/Name><USR>s:SN<\/USR><Declaration>struct ClosedRange&lt;Bound&gt; where Bound : Comparable<\/Declaration><CommentParts><Abstract><Para>An interval from a lower bound up to, and including, an upper bound.<\/Para><\/Abstract><Discussion><Para>You create a <codeVoice>ClosedRange<\/codeVoice> instance by using the closed range operator (<codeVoice>...<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let throughFive = 0...5]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A <codeVoice>ClosedRange<\/codeVoice> instance contains both its lower bound and its upper bound.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[throughFive.contains(3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[throughFive.contains(10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ false]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[throughFive.contains(5)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Because a closed range includes its upper bound, a closed range whose lower bound is equal to the upper bound contains that value. Therefore, a <codeVoice>ClosedRange<\/codeVoice> instance cannot represent an empty range.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let zeroInclusive = 0...0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[zeroInclusive.contains(0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[zeroInclusive.isEmpty]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ false]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Using a Closed Range as a Collection of Consecutive Values<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>When a closed range uses integers as its lower and upper bounds, or any other type that conforms to the <codeVoice>Strideable<\/codeVoice> protocol with an integer stride, you can use that range in a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop or with any sequence or collection method. The elements of the range are the consecutive values from its lower bound up to, and including, its upper bound.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for n in 3...5 {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(n)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"5\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Because floating-point types such as <codeVoice>Float<\/codeVoice> and <codeVoice>Double<\/codeVoice> are their own <codeVoice>Stride<\/codeVoice> types, they cannot be used as the bounds of a countable range. If you need to iterate over consecutive floating-point values, see the <codeVoice>stride(from:through:by:)<\/codeVoice> function.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "ClosedRange",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 664
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ClosedRange<\/decl.name>&lt;<decl.generic_type_param usr=\"s:SN5Boundxmfp\"><decl.generic_type_param.name>Bound<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Bound : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.groupname" : "Collection",
        "key.inheritedtypes" : [
          {
            "key.name" : "Additive"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 53,
        "key.modulename" : "Swift",
        "key.name" : "ClosedRange",
        "key.namelength" : 11,
        "key.nameoffset" : 651,
        "key.offset" : 641,
        "key.typename" : "ClosedRange<Bound>.Type",
        "key.typeusr" : "$SSNyxGmD",
        "key.usr" : "s:SN"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 923,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol RangeProtocol<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 151
          }
        ],
        "key.bodylength" : 162,
        "key.bodyoffset" : 182,
        "key.doc.column" : 17,
        "key.doc.comment" : "Unifying interface for `Range` and `ClosedRange` types.",
        "key.doc.declaration" : "public protocol RangeProtocol",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift\" line=\"9\" column=\"17\"><Name>RangeProtocol<\/Name><USR>s:14DataStructures13RangeProtocolP<\/USR><Declaration>public protocol RangeProtocol<\/Declaration><CommentParts><Abstract><Para>Unifying interface for <codeVoice>Range<\/codeVoice> and <codeVoice>ClosedRange<\/codeVoice> types.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 9,
        "key.doc.name" : "RangeProtocol",
        "key.doc.type" : "Class",
        "key.doclength" : 60,
        "key.docoffset" : 91,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>RangeProtocol<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 187,
        "key.name" : "RangeProtocol",
        "key.namelength" : 13,
        "key.nameoffset" : 167,
        "key.offset" : 158,
        "key.parsed_declaration" : "public protocol RangeProtocol",
        "key.parsed_scope.end" : 14,
        "key.parsed_scope.start" : 9,
        "key.runtime_name" : "_TtP13RangeProtocol13RangeProtocol_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype Bound : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>Bound<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 32,
            "key.name" : "Bound",
            "key.namelength" : 5,
            "key.nameoffset" : 202,
            "key.offset" : 187,
            "key.parsed_declaration" : "associatedtype Bound: Comparable",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.typename" : "Self.Bound.Type",
            "key.typeusr" : "$S5Bound14DataStructures13RangeProtocolPQzmD",
            "key.usr" : "s:14DataStructures13RangeProtocolP5BoundQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var lowerBound: <Type usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 247,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>lowerBound<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "lowerBound",
            "key.namelength" : 10,
            "key.nameoffset" : 228,
            "key.offset" : 224,
            "key.parsed_declaration" : "var lowerBound: Bound",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "Self.Bound",
            "key.typeusr" : "$S5Bound14DataStructures13RangeProtocolPQzD",
            "key.usr" : "s:14DataStructures13RangeProtocolP10lowerBound0F0Qzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var upperBound: <Type usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 281,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>upperBound<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "upperBound",
            "key.namelength" : 10,
            "key.nameoffset" : 262,
            "key.offset" : 258,
            "key.parsed_declaration" : "var upperBound: Bound",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "Self.Bound",
            "key.typeusr" : "$S5Bound14DataStructures13RangeProtocolPQzD",
            "key.usr" : "s:14DataStructures13RangeProtocolP10upperBound0F0Qzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(uncheckedBounds: (lower: <Type usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/Type>, upper: <Type usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/Type>))<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>uncheckedBounds<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.argument_label>lower<\/tuple.element.argument_label>: <tuple.element.type><ref.associatedtype usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.argument_label>upper<\/tuple.element.argument_label>: <tuple.element.type><ref.associatedtype usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 51,
            "key.name" : "init(uncheckedBounds:)",
            "key.namelength" : 51,
            "key.nameoffset" : 292,
            "key.offset" : 292,
            "key.parsed_declaration" : "init(uncheckedBounds: (lower: Bound, upper: Bound))",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : RangeProtocol> (Self.Type) -> ((lower: Self.Bound, upper: Self.Bound)) -> Self",
            "key.typeusr" : "$S15uncheckedBoundsx5BoundQz5lower_AC5uppert_tcD",
            "key.usr" : "s:14DataStructures13RangeProtocolP15uncheckedBoundsx5BoundQz5lower_AF5uppert_tcfc"
          }
        ],
        "key.typename" : "RangeProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures13RangeProtocol_pmD",
        "key.usr" : "s:14DataStructures13RangeProtocolP"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Range&lt;Bound&gt; where Bound : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 379,
        "key.doc.declaration" : "struct Range<Bound> where Bound : Comparable",
        "key.doc.discussion" : [
          {
            "Para" : "You create a `Range` instance by using the half-open range operator (`..<`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can use a `Range` instance to quickly check if a value is contained in a particular range of values. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Range` instances can represent an empty interval, unlike `ClosedRange`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When a range uses integers as its lower and upper bounds, or any other type that conforms to the `Strideable` protocol with an integer stride, you can use that range in a `for`-`in` loop or with any sequence or collection method. The elements of the range are the consecutive values from its lower bound up to, but not including, its upper bound."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Because floating-point types such as `Float` and `Double` are their own `Stride` types, they cannot be used as the bounds of a countable range. If you need to iterate over consecutive floating-point values, see the `stride(from:to:by:)` function."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Range<\/Name><USR>s:Sn<\/USR><Declaration>struct Range&lt;Bound&gt; where Bound : Comparable<\/Declaration><CommentParts><Abstract><Para>A half-open interval from a lower bound up to, but not including, an upper bound.<\/Para><\/Abstract><Discussion><Para>You create a <codeVoice>Range<\/codeVoice> instance by using the half-open range operator (<codeVoice>..&lt;<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let underFive = 0.0..<5.0]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can use a <codeVoice>Range<\/codeVoice> instance to quickly check if a value is contained in a particular range of values. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[underFive.contains(3.14)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[underFive.contains(6.28)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ false]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[underFive.contains(5.0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ false]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Range<\/codeVoice> instances can represent an empty interval, unlike <codeVoice>ClosedRange<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let empty = 0.0..<0.0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[empty.contains(0.0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ false]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[empty.isEmpty]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Using a Range as a Collection of Consecutive Values<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>When a range uses integers as its lower and upper bounds, or any other type that conforms to the <codeVoice>Strideable<\/codeVoice> protocol with an integer stride, you can use that range in a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop or with any sequence or collection method. The elements of the range are the consecutive values from its lower bound up to, but not including, its upper bound.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for n in 3..<5 {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(n)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Because floating-point types such as <codeVoice>Float<\/codeVoice> and <codeVoice>Double<\/codeVoice> are their own <codeVoice>Stride<\/codeVoice> types, they cannot be used as the bounds of a countable range. If you need to iterate over consecutive floating-point values, see the <codeVoice>stride(from:to:by:)<\/codeVoice> function.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Range",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 13,
            "key.offset" : 364
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Range<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sn5Boundxmfp\"><decl.generic_type_param.name>Bound<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Bound : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.groupname" : "Collection",
        "key.inheritedtypes" : [
          {
            "key.name" : "RangeProtocol"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 34,
        "key.modulename" : "Swift",
        "key.name" : "Range",
        "key.namelength" : 5,
        "key.nameoffset" : 357,
        "key.offset" : 347,
        "key.typename" : "Range<Bound>.Type",
        "key.typeusr" : "$SSnyxGmD",
        "key.usr" : "s:Sn"
      },
      {
        "key.annotated_decl" : "<Declaration>struct ClosedRange&lt;Bound&gt; where Bound : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 420,
        "key.doc.declaration" : "struct ClosedRange<Bound> where Bound : Comparable",
        "key.doc.discussion" : [
          {
            "Para" : "You create a `ClosedRange` instance by using the closed range operator (`...`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A `ClosedRange` instance contains both its lower bound and its upper bound."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Because a closed range includes its upper bound, a closed range whose lower bound is equal to the upper bound contains that value. Therefore, a `ClosedRange` instance cannot represent an empty range."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When a closed range uses integers as its lower and upper bounds, or any other type that conforms to the `Strideable` protocol with an integer stride, you can use that range in a `for`-`in` loop or with any sequence or collection method. The elements of the range are the consecutive values from its lower bound up to, and including, its upper bound."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Because floating-point types such as `Float` and `Double` are their own `Stride` types, they cannot be used as the bounds of a countable range. If you need to iterate over consecutive floating-point values, see the `stride(from:through:by:)` function."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>ClosedRange<\/Name><USR>s:SN<\/USR><Declaration>struct ClosedRange&lt;Bound&gt; where Bound : Comparable<\/Declaration><CommentParts><Abstract><Para>An interval from a lower bound up to, and including, an upper bound.<\/Para><\/Abstract><Discussion><Para>You create a <codeVoice>ClosedRange<\/codeVoice> instance by using the closed range operator (<codeVoice>...<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let throughFive = 0...5]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A <codeVoice>ClosedRange<\/codeVoice> instance contains both its lower bound and its upper bound.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[throughFive.contains(3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[throughFive.contains(10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ false]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[throughFive.contains(5)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Because a closed range includes its upper bound, a closed range whose lower bound is equal to the upper bound contains that value. Therefore, a <codeVoice>ClosedRange<\/codeVoice> instance cannot represent an empty range.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let zeroInclusive = 0...0]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[zeroInclusive.contains(0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[zeroInclusive.isEmpty]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ false]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Using a Closed Range as a Collection of Consecutive Values<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>When a closed range uses integers as its lower and upper bounds, or any other type that conforms to the <codeVoice>Strideable<\/codeVoice> protocol with an integer stride, you can use that range in a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop or with any sequence or collection method. The elements of the range are the consecutive values from its lower bound up to, and including, its upper bound.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for n in 3...5 {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(n)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"5\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Because floating-point types such as <codeVoice>Float<\/codeVoice> and <codeVoice>Double<\/codeVoice> are their own <codeVoice>Stride<\/codeVoice> types, they cannot be used as the bounds of a countable range. If you need to iterate over consecutive floating-point values, see the <codeVoice>stride(from:through:by:)<\/codeVoice> function.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "ClosedRange",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 13,
            "key.offset" : 405
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ClosedRange<\/decl.name>&lt;<decl.generic_type_param usr=\"s:SN5Boundxmfp\"><decl.generic_type_param.name>Bound<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Bound : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.groupname" : "Collection",
        "key.inheritedtypes" : [
          {
            "key.name" : "RangeProtocol"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 40,
        "key.modulename" : "Swift",
        "key.name" : "ClosedRange",
        "key.namelength" : 11,
        "key.nameoffset" : 392,
        "key.offset" : 382,
        "key.typename" : "ClosedRange<Bound>.Type",
        "key.typeusr" : "$SSNyxGmD",
        "key.usr" : "s:SN"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol RangeProtocol<\/Declaration>",
        "key.bodylength" : 149,
        "key.bodyoffset" : 476,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol RangeProtocol",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift\" line=\"9\" column=\"17\"><Name>RangeProtocol<\/Name><USR>s:14DataStructures13RangeProtocolP<\/USR><Declaration>public protocol RangeProtocol<\/Declaration><CommentParts><Abstract><Para>Unifying interface for <codeVoice>Range<\/codeVoice> and <codeVoice>ClosedRange<\/codeVoice> types.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 9,
        "key.doc.name" : "RangeProtocol",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>RangeProtocol<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 202,
        "key.name" : "RangeProtocol",
        "key.namelength" : 13,
        "key.nameoffset" : 434,
        "key.offset" : 424,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var length: <Type usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 553
              }
            ],
            "key.bodylength" : 44,
            "key.bodyoffset" : 579,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: The length of this range (upperBound - lowerBound).",
            "key.doc.declaration" : "public var length: Bound { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift\" line=\"22\" column=\"16\"><Name>length<\/Name><USR>s:14DataStructures13RangeProtocolPAAs13SignedNumeric5BoundRpzrlE6lengthAFvp<\/USR><Declaration>public var length: Bound { get }<\/Declaration><CommentParts><ResultDiscussion><Para>The length of this range (upperBound - lowerBound).<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 22,
            "key.doc.name" : "length",
            "key.doc.result_discussion" : [
              {
                "Para" : "The length of this range (upperBound - lowerBound)."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 67,
            "key.docoffset" : 482,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>length<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 64,
            "key.name" : "length",
            "key.namelength" : 6,
            "key.nameoffset" : 564,
            "key.offset" : 560,
            "key.parsed_declaration" : "public var length: Bound",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 22,
            "key.typename" : "Self.Bound",
            "key.typeusr" : "$S5Bound14DataStructures13RangeProtocolPQzD",
            "key.usr" : "s:14DataStructures13RangeProtocolPAAs13SignedNumeric5BoundRpzrlE6lengthAFvp"
          }
        ],
        "key.typename" : "RangeProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures13RangeProtocol_pmD",
        "key.usr" : "s:14DataStructures13RangeProtocolP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol RangeProtocol<\/Declaration>",
        "key.bodylength" : 247,
        "key.bodyoffset" : 674,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol RangeProtocol",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift\" line=\"9\" column=\"17\"><Name>RangeProtocol<\/Name><USR>s:14DataStructures13RangeProtocolP<\/USR><Declaration>public protocol RangeProtocol<\/Declaration><CommentParts><Abstract><Para>Unifying interface for <codeVoice>Range<\/codeVoice> and <codeVoice>ClosedRange<\/codeVoice> types.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 9,
        "key.doc.name" : "RangeProtocol",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>RangeProtocol<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 294,
        "key.name" : "RangeProtocol",
        "key.namelength" : 13,
        "key.nameoffset" : 638,
        "key.offset" : 628,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func shifted(by amount: <Type usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/Type>) -&gt; <Type usr=\"s:14DataStructures13RangeProtocolPAASj5BoundRpzrlE4Selfxmfp\">Self<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 772
              }
            ],
            "key.bodylength" : 100,
            "key.bodyoffset" : 819,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: A new range equal to this range with bounds shifted by the given amount.",
            "key.doc.declaration" : "public func shifted(by amount: Bound) -> Self",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift\" line=\"30\" column=\"17\"><Name>shifted(by:)<\/Name><USR>s:14DataStructures13RangeProtocolPAASj5BoundRpzrlE7shifted2byxAE_tF<\/USR><Declaration>public func shifted(by amount: Bound) -&gt; Self<\/Declaration><CommentParts><ResultDiscussion><Para>A new range equal to this range with bounds shifted by the given amount.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 30,
            "key.doc.name" : "shifted(by:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A new range equal to this range with bounds shifted by the given amount."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 88,
            "key.docoffset" : 680,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/RangeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>shifted<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>by<\/decl.var.parameter.argument_label> <decl.var.parameter.name>amount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures13RangeProtocolP5BoundQa\">Bound<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures13RangeProtocolPAASj5BoundRpzrlE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 141,
            "key.name" : "shifted(by:)",
            "key.namelength" : 25,
            "key.nameoffset" : 784,
            "key.offset" : 779,
            "key.parsed_declaration" : "public func shifted(by amount: Bound) -> Self",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 30,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : RangeProtocol, Self.Bound : Numeric> (Self) -> (Self.Bound) -> Self",
            "key.typeusr" : "$S2byx5BoundQz_tcD",
            "key.usr" : "s:14DataStructures13RangeProtocolPAASj5BoundRpzrlE7shifted2byxAE_tF"
          }
        ],
        "key.typename" : "RangeProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures13RangeProtocol_pmD",
        "key.usr" : "s:14DataStructures13RangeProtocolP"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.AdjacencyList.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1172,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public class ReferenceGraph<\/Declaration>",
        "key.bodylength" : 1038,
        "key.bodyoffset" : 132,
        "key.doc.column" : 14,
        "key.doc.declaration" : "public class ReferenceGraph",
        "key.doc.discussion" : [
          {
            "TODO" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift\" line=\"10\" column=\"14\"><Name>ReferenceGraph<\/Name><USR>s:14DataStructures14ReferenceGraphC<\/USR><Declaration>public class ReferenceGraph<\/Declaration><CommentParts><Discussion><TODO><Para>Make Generic over some type.<\/Para><\/TODO><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "ReferenceGraph",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ReferenceGraph<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1065,
        "key.name" : "ReferenceGraph",
        "key.namelength" : 14,
        "key.nameoffset" : 116,
        "key.offset" : 106,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public class AdjacencyList : <Type usr=\"s:14DataStructures18CollectionWrappingP\">CollectionWrapping<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 138
              }
            ],
            "key.bodylength" : 982,
            "key.bodyoffset" : 186,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 18,
                "key.offset" : 166
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.AdjacencyList.swift",
            "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>AdjacencyList<\/decl.name> : <ref.protocol usr=\"s:14DataStructures18CollectionWrappingP\">CollectionWrapping<\/ref.protocol><\/decl.class>",
            "key.inheritedtypes" : [
              {
                "key.name" : "CollectionWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.class",
            "key.length" : 1024,
            "key.name" : "AdjacencyList",
            "key.namelength" : 13,
            "key.nameoffset" : 151,
            "key.offset" : 145,
            "key.parsed_declaration" : "public class AdjacencyList: CollectionWrapping",
            "key.parsed_scope.end" : 48,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var base: [<Type usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/Type>.<Type usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC\">EdgeList<\/Type>]<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 196
                  }
                ],
                "key.doc.column" : 9,
                "key.doc.declaration" : "var base: Base { get }",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift\" line=\"23\" column=\"9\"><Name>base<\/Name><USR>s:14DataStructures18CollectionWrappingP4base4BaseQzvp<\/USR><Declaration>var base: Base { get }<\/Declaration><CommentParts><Abstract><Para>Wrapped <codeVoice>Collection<\/codeVoice>-conforming type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 23,
                "key.doc.name" : "base",
                "key.doc.type" : "Other",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.AdjacencyList.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>base<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/ref.class>.<ref.class usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC\">EdgeList<\/ref.class>]<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 25,
                "key.name" : "base",
                "key.namelength" : 4,
                "key.nameoffset" : 207,
                "key.offset" : 203,
                "key.overrides" : [
                  {
                    "key.usr" : "s:14DataStructures18CollectionWrappingP4base4BaseQzvp"
                  }
                ],
                "key.parsed_declaration" : "public var base: [EdgeList] = []",
                "key.parsed_scope.end" : 13,
                "key.parsed_scope.start" : 13,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "[ReferenceGraph.EdgeList]",
                "key.typeusr" : "$SSay14DataStructures14ReferenceGraphC8EdgeListCGD",
                "key.usr" : "s:14DataStructures18CollectionWrappingP4base4BaseQzvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init()<\/Declaration>",
                "key.bodylength" : 1,
                "key.bodyoffset" : 246,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.AdjacencyList.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 10,
                "key.name" : "init()",
                "key.namelength" : 6,
                "key.nameoffset" : 238,
                "key.offset" : 238,
                "key.parsed_declaration" : "init()",
                "key.parsed_scope.end" : 15,
                "key.parsed_scope.start" : 15,
                "key.typename" : "(ReferenceGraph.AdjacencyList.Type) -> () -> ReferenceGraph.AdjacencyList",
                "key.typeusr" : "$S14DataStructures14ReferenceGraphC13AdjacencyListCycD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC13AdjacencyListCAEycfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>subscript(vertex: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>) -&gt; <Type usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC\">EdgeList<\/Type>? { get }<\/Declaration>",
                "key.bodylength" : 183,
                "key.bodyoffset" : 297,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.AdjacencyList.swift",
                "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>vertex<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC\">EdgeList<\/ref.class>?<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
                "key.kind" : "source.lang.swift.decl.function.subscript",
                "key.length" : 223,
                "key.name" : "subscript(_:)",
                "key.namelength" : 24,
                "key.nameoffset" : 258,
                "key.offset" : 258,
                "key.parsed_declaration" : "subscript (vertex: Node) -> EdgeList?",
                "key.parsed_scope.end" : 24,
                "key.parsed_scope.start" : 17,
                "key.substructure" : [

                ],
                "key.typename" : "(ReferenceGraph.Node) -> ReferenceGraph.EdgeList?",
                "key.typeusr" : "$Sy14DataStructures14ReferenceGraphC8EdgeListCSgAC4NodeCcD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC13AdjacencyListCyAC04EdgeF0CSgAC4NodeCcip"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func addDirectedEdge(from source: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>, to destination: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>, weight: <Type usr=\"s:Sf\">Float<\/Type>? = default)<\/Declaration>",
                "key.bodylength" : 231,
                "key.bodyoffset" : 576,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.AdjacencyList.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addDirectedEdge<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>source<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>destination<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>weight<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 317,
                "key.name" : "addDirectedEdge(from:to:weight:)",
                "key.namelength" : 78,
                "key.nameoffset" : 496,
                "key.offset" : 491,
                "key.parsed_declaration" : "func addDirectedEdge(from source: Node, to destination: Node, weight: Float? = nil)",
                "key.parsed_scope.end" : 34,
                "key.parsed_scope.start" : 26,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let sourceEdgeList: <Type usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/Type>.<Type usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC\">EdgeList<\/Type><\/Declaration>",
                    "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.AdjacencyList.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sourceEdgeList<\/decl.name>: <decl.var.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/ref.class>.<ref.class usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC\">EdgeList<\/ref.class><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 34,
                    "key.name" : "sourceEdgeList",
                    "key.namelength" : 14,
                    "key.nameoffset" : 659,
                    "key.offset" : 655,
                    "key.parsed_declaration" : "let sourceEdgeList = self[source]!",
                    "key.parsed_scope.end" : 30,
                    "key.parsed_scope.start" : 30,
                    "key.typename" : "ReferenceGraph.EdgeList",
                    "key.typeusr" : "$S14DataStructures14ReferenceGraphC8EdgeListCD",
                    "key.usr" : "s:14DataStructures14ReferenceGraphC13AdjacencyListC15addDirectedEdge4from2to6weightyAC4NodeC_AKSfSgtF06sourceiF0L_AC0iF0Cvp"
                  }
                ],
                "key.typename" : "(ReferenceGraph.AdjacencyList) -> (ReferenceGraph.Node, ReferenceGraph.Node, Float?) -> ()",
                "key.typeusr" : "$S4from2to6weighty14DataStructures14ReferenceGraphC4NodeC_AHSfSgtcD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC13AdjacencyListC15addDirectedEdge4from2to6weightyAC4NodeC_AKSfSgtF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func addVertex(_ vertex: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>)<\/Declaration>",
                "key.bodylength" : 154,
                "key.bodyoffset" : 850,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.AdjacencyList.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addVertex<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>vertex<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 187,
                "key.name" : "addVertex(_:)",
                "key.namelength" : 25,
                "key.nameoffset" : 823,
                "key.offset" : 818,
                "key.parsed_declaration" : "func addVertex(_ vertex: Node)",
                "key.parsed_scope.end" : 41,
                "key.parsed_scope.start" : 36,
                "key.substructure" : [

                ],
                "key.typename" : "(ReferenceGraph.AdjacencyList) -> (ReferenceGraph.Node) -> ()",
                "key.typeusr" : "$Syy14DataStructures14ReferenceGraphC4NodeCcD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC13AdjacencyListC9addVertexyyAC4NodeCF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func addEdgeList(_ edgeList: <Type usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC\">EdgeList<\/Type>)<\/Declaration>",
                "key.bodylength" : 107,
                "key.bodyoffset" : 1055,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.AdjacencyList.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addEdgeList<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>edgeList<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC\">EdgeList<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 148,
                "key.name" : "addEdgeList(_:)",
                "key.namelength" : 33,
                "key.nameoffset" : 1020,
                "key.offset" : 1015,
                "key.parsed_declaration" : "func addEdgeList(_ edgeList: EdgeList)",
                "key.parsed_scope.end" : 47,
                "key.parsed_scope.start" : 43,
                "key.substructure" : [

                ],
                "key.typename" : "(ReferenceGraph.AdjacencyList) -> (ReferenceGraph.EdgeList) -> ()",
                "key.typeusr" : "$Syy14DataStructures14ReferenceGraphC8EdgeListCcD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC13AdjacencyListC07addEdgeF0yyAC0hF0CF"
              }
            ],
            "key.typename" : "ReferenceGraph.AdjacencyList.Type",
            "key.typeusr" : "$S14DataStructures14ReferenceGraphC13AdjacencyListCmD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC13AdjacencyListC"
          }
        ],
        "key.typename" : "ReferenceGraph.Type",
        "key.typeusr" : "$S14DataStructures14ReferenceGraphCmD",
        "key.usr" : "s:14DataStructures14ReferenceGraphC"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 687,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public class ReferenceGraph<\/Declaration>",
        "key.bodylength" : 562,
        "key.bodyoffset" : 123,
        "key.doc.column" : 14,
        "key.doc.declaration" : "public class ReferenceGraph",
        "key.doc.discussion" : [
          {
            "TODO" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift\" line=\"10\" column=\"14\"><Name>ReferenceGraph<\/Name><USR>s:14DataStructures14ReferenceGraphC<\/USR><Declaration>public class ReferenceGraph<\/Declaration><CommentParts><Discussion><TODO><Para>Make Generic over some type.<\/Para><\/TODO><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "ReferenceGraph",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ReferenceGraph<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 589,
        "key.name" : "ReferenceGraph",
        "key.namelength" : 14,
        "key.nameoffset" : 107,
        "key.offset" : 97,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public class Edge<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 129
              }
            ],
            "key.bodylength" : 535,
            "key.bodyoffset" : 148,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift",
            "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Edge<\/decl.name><\/decl.class>",
            "key.kind" : "source.lang.swift.decl.class",
            "key.length" : 548,
            "key.name" : "Edge",
            "key.namelength" : 4,
            "key.nameoffset" : 142,
            "key.offset" : 136,
            "key.parsed_declaration" : "public class Edge",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
                "key.length" : 27,
                "key.name" : "MARK: - Instance Properties",
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 161
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let source: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 225
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Source `Node`.",
                "key.doc.declaration" : "public let source: Node",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift\" line=\"16\" column=\"20\"><Name>source<\/Name><USR>s:14DataStructures14ReferenceGraphC4EdgeC6sourceAC4NodeCvp<\/USR><Declaration>public let source: Node<\/Declaration><CommentParts><Abstract><Para>Source <codeVoice>Node<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 16,
                "key.doc.name" : "source",
                "key.doc.type" : "Other",
                "key.doclength" : 19,
                "key.docoffset" : 198,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>source<\/decl.name>: <decl.var.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 16,
                "key.name" : "source",
                "key.namelength" : 6,
                "key.nameoffset" : 236,
                "key.offset" : 232,
                "key.parsed_declaration" : "public let source: Node",
                "key.parsed_scope.end" : 16,
                "key.parsed_scope.start" : 16,
                "key.typename" : "ReferenceGraph.Node",
                "key.typeusr" : "$S14DataStructures14ReferenceGraphC4NodeCD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC4EdgeC6sourceAC4NodeCvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let destination: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 292
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Source `Destination`.",
                "key.doc.declaration" : "public let destination: Node",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift\" line=\"19\" column=\"20\"><Name>destination<\/Name><USR>s:14DataStructures14ReferenceGraphC4EdgeC11destinationAC4NodeCvp<\/USR><Declaration>public let destination: Node<\/Declaration><CommentParts><Abstract><Para>Source <codeVoice>Destination<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 19,
                "key.doc.name" : "destination",
                "key.doc.type" : "Other",
                "key.doclength" : 26,
                "key.docoffset" : 258,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>destination<\/decl.name>: <decl.var.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 21,
                "key.name" : "destination",
                "key.namelength" : 11,
                "key.nameoffset" : 303,
                "key.offset" : 299,
                "key.parsed_declaration" : "public let destination: Node",
                "key.parsed_scope.end" : 19,
                "key.parsed_scope.start" : 19,
                "key.typename" : "ReferenceGraph.Node",
                "key.typeusr" : "$S14DataStructures14ReferenceGraphC4NodeCD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC4EdgeC11destinationAC4NodeCvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let weight: <Type usr=\"s:Sf\">Float<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 364
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Weight of the `Edge`.",
                "key.doc.declaration" : "public let weight: Float?",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift\" line=\"22\" column=\"20\"><Name>weight<\/Name><USR>s:14DataStructures14ReferenceGraphC4EdgeC6weightSfSgvp<\/USR><Declaration>public let weight: Float?<\/Declaration><CommentParts><Abstract><Para>Weight of the <codeVoice>Edge<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 22,
                "key.doc.name" : "weight",
                "key.doc.type" : "Other",
                "key.doclength" : 26,
                "key.docoffset" : 330,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>weight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 18,
                "key.name" : "weight",
                "key.namelength" : 6,
                "key.nameoffset" : 375,
                "key.offset" : 371,
                "key.parsed_declaration" : "public let weight: Float?",
                "key.parsed_scope.end" : 22,
                "key.parsed_scope.start" : 22,
                "key.typename" : "Float?",
                "key.typeusr" : "$SSfSgD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC4EdgeC6weightSfSgvp"
              },
              {
                "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
                "key.length" : 20,
                "key.name" : "MARK: - Initializers",
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 402
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(from source: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>, to destination: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>, weight: <Type usr=\"s:Sf\">Float<\/Type>? = default)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 483
                  }
                ],
                "key.bodylength" : 118,
                "key.bodyoffset" : 559,
                "key.doc.column" : 16,
                "key.doc.comment" : "Create an `Edge`.",
                "key.doc.declaration" : "public init(from source: Node, to destination: Node, weight: Float? = default)",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift\" line=\"29\" column=\"16\"><Name>init(from:to:weight:)<\/Name><USR>s:14DataStructures14ReferenceGraphC4EdgeC4from2to6weightAeC4NodeC_AJSfSgtcfc<\/USR><Declaration>public init(from source: Node, to destination: Node, weight: Float? = default)<\/Declaration><CommentParts><Abstract><Para>Create an <codeVoice>Edge<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 29,
                "key.doc.name" : "init(from:to:weight:)",
                "key.doc.type" : "Function",
                "key.doclength" : 42,
                "key.docoffset" : 432,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Edge.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>source<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>destination<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>weight<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 188,
                "key.name" : "init(from:to:weight:)",
                "key.namelength" : 67,
                "key.nameoffset" : 490,
                "key.offset" : 490,
                "key.parsed_declaration" : "public init(from source: Node, to destination: Node, weight: Float? = nil)",
                "key.parsed_scope.end" : 33,
                "key.parsed_scope.start" : 29,
                "key.substructure" : [

                ],
                "key.typename" : "(ReferenceGraph.Edge.Type) -> (ReferenceGraph.Node, ReferenceGraph.Node, Float?) -> ReferenceGraph.Edge",
                "key.typeusr" : "$S4from2to6weight14DataStructures14ReferenceGraphC4EdgeCAF4NodeC_AJSfSgtcD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC4EdgeC4from2to6weightAeC4NodeC_AJSfSgtcfc"
              }
            ],
            "key.typename" : "ReferenceGraph.Edge.Type",
            "key.typeusr" : "$S14DataStructures14ReferenceGraphC4EdgeCmD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC4EdgeC"
          }
        ],
        "key.typename" : "ReferenceGraph.Type",
        "key.typeusr" : "$S14DataStructures14ReferenceGraphCmD",
        "key.usr" : "s:14DataStructures14ReferenceGraphC"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.EdgeList.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 798,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public class ReferenceGraph<\/Declaration>",
        "key.bodylength" : 669,
        "key.bodyoffset" : 127,
        "key.doc.column" : 14,
        "key.doc.declaration" : "public class ReferenceGraph",
        "key.doc.discussion" : [
          {
            "TODO" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift\" line=\"10\" column=\"14\"><Name>ReferenceGraph<\/Name><USR>s:14DataStructures14ReferenceGraphC<\/USR><Declaration>public class ReferenceGraph<\/Declaration><CommentParts><Discussion><TODO><Para>Make Generic over some type.<\/Para><\/TODO><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "ReferenceGraph",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ReferenceGraph<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 696,
        "key.name" : "ReferenceGraph",
        "key.namelength" : 14,
        "key.nameoffset" : 111,
        "key.offset" : 101,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public class EdgeList<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 133
              }
            ],
            "key.bodylength" : 638,
            "key.bodyoffset" : 156,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.EdgeList.swift",
            "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>EdgeList<\/decl.name><\/decl.class>",
            "key.kind" : "source.lang.swift.decl.class",
            "key.length" : 655,
            "key.name" : "EdgeList",
            "key.namelength" : 8,
            "key.nameoffset" : 146,
            "key.offset" : 140,
            "key.parsed_declaration" : "public class EdgeList",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var edges: [<Type usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/Type>.<Type usr=\"s:14DataStructures14ReferenceGraphC4EdgeC\">Edge<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.EdgeList.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>edges<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/ref.class>.<ref.class usr=\"s:14DataStructures14ReferenceGraphC4EdgeC\">Edge<\/ref.class>]<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 22,
                "key.name" : "edges",
                "key.namelength" : 5,
                "key.nameoffset" : 170,
                "key.offset" : 166,
                "key.parsed_declaration" : "var edges: [Edge] = []",
                "key.parsed_scope.end" : 13,
                "key.parsed_scope.start" : 13,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "[ReferenceGraph.Edge]",
                "key.typeusr" : "$SSay14DataStructures14ReferenceGraphC4EdgeCGD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC8EdgeListC5edgesSayAC0E0CGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let vertex: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.EdgeList.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>vertex<\/decl.name>: <decl.var.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 16,
                "key.name" : "vertex",
                "key.namelength" : 6,
                "key.nameoffset" : 201,
                "key.offset" : 197,
                "key.parsed_declaration" : "let vertex: Node",
                "key.parsed_scope.end" : 14,
                "key.parsed_scope.start" : 14,
                "key.typename" : "ReferenceGraph.Node",
                "key.typeusr" : "$S14DataStructures14ReferenceGraphC4NodeCD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC8EdgeListC6vertexAC4NodeCvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init(vertex: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>)<\/Declaration>",
                "key.bodylength" : 42,
                "key.bodyoffset" : 243,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.EdgeList.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>vertex<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 63,
                "key.name" : "init(vertex:)",
                "key.namelength" : 18,
                "key.nameoffset" : 223,
                "key.offset" : 223,
                "key.parsed_declaration" : "init(vertex: Node)",
                "key.parsed_scope.end" : 18,
                "key.parsed_scope.start" : 16,
                "key.substructure" : [

                ],
                "key.typename" : "(ReferenceGraph.EdgeList.Type) -> (ReferenceGraph.Node) -> ReferenceGraph.EdgeList",
                "key.typeusr" : "$S6vertex14DataStructures14ReferenceGraphC8EdgeListCAD4NodeC_tcD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC8EdgeListC6vertexAeC4NodeC_tcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func weight(to destination: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type>?<\/Declaration>",
                "key.bodylength" : 189,
                "key.bodyoffset" : 341,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.EdgeList.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>weight<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>destination<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 235,
                "key.name" : "weight(to:)",
                "key.namelength" : 28,
                "key.nameoffset" : 301,
                "key.offset" : 296,
                "key.parsed_declaration" : "func weight(to destination: Node) -> Float?",
                "key.parsed_scope.end" : 27,
                "key.parsed_scope.start" : 20,
                "key.substructure" : [

                ],
                "key.typename" : "(ReferenceGraph.EdgeList) -> (ReferenceGraph.Node) -> Float?",
                "key.typeusr" : "$S2toSfSg14DataStructures14ReferenceGraphC4NodeC_tcD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC8EdgeListC6weight2toSfSgAC4NodeC_tF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func addEdge(to destination: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>, weight: <Type usr=\"s:Sf\">Float<\/Type>? = default)<\/Declaration>",
                "key.bodylength" : 110,
                "key.bodyoffset" : 599,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.EdgeList.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addEdge<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>destination<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>weight<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 169,
                "key.name" : "addEdge(to:weight:)",
                "key.namelength" : 51,
                "key.nameoffset" : 546,
                "key.offset" : 541,
                "key.parsed_declaration" : "func addEdge(to destination: Node, weight: Float? = nil)",
                "key.parsed_scope.end" : 32,
                "key.parsed_scope.start" : 29,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC03addE0yyAC0E0CF\">addEdge(_:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let edge: <Type usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/Type>.<Type usr=\"s:14DataStructures14ReferenceGraphC4EdgeC\">Edge<\/Type><\/Declaration>",
                    "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.EdgeList.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>edge<\/decl.name>: <decl.var.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/ref.class>.<ref.class usr=\"s:14DataStructures14ReferenceGraphC4EdgeC\">Edge<\/ref.class><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 62,
                    "key.name" : "edge",
                    "key.namelength" : 4,
                    "key.nameoffset" : 616,
                    "key.offset" : 612,
                    "key.parsed_declaration" : "let edge = Edge(from: vertex, to: destination, weight: weight)",
                    "key.parsed_scope.end" : 30,
                    "key.parsed_scope.start" : 30,
                    "key.typename" : "ReferenceGraph.Edge",
                    "key.typeusr" : "$S14DataStructures14ReferenceGraphC4EdgeCD",
                    "key.usr" : "s:14DataStructures14ReferenceGraphC8EdgeListC03addE02to6weightyAC4NodeC_SfSgtF4edgeL_AC0E0Cvp"
                  }
                ],
                "key.typename" : "(ReferenceGraph.EdgeList) -> (ReferenceGraph.Node, Float?) -> ()",
                "key.typeusr" : "$S2to6weighty14DataStructures14ReferenceGraphC4NodeC_SfSgtcD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC8EdgeListC03addE02to6weightyAC4NodeC_SfSgtF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>func addEdge(_ edge: <Type usr=\"s:14DataStructures14ReferenceGraphC4EdgeC\">Edge<\/Type>)<\/Declaration>",
                "key.bodylength" : 40,
                "key.bodyoffset" : 748,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.EdgeList.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addEdge<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>edge<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4EdgeC\">Edge<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 69,
                "key.name" : "addEdge(_:)",
                "key.namelength" : 21,
                "key.nameoffset" : 725,
                "key.offset" : 720,
                "key.parsed_declaration" : "func addEdge(_ edge: Edge)",
                "key.parsed_scope.end" : 36,
                "key.parsed_scope.start" : 34,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC03addE02to6weightyAC4NodeC_SfSgtF\">addEdge(to:weight:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(ReferenceGraph.EdgeList) -> (ReferenceGraph.Edge) -> ()",
                "key.typeusr" : "$Syy14DataStructures14ReferenceGraphC4EdgeCcD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC8EdgeListC03addE0yyAC0E0CF"
              }
            ],
            "key.typename" : "ReferenceGraph.EdgeList.Type",
            "key.typeusr" : "$S14DataStructures14ReferenceGraphC8EdgeListCmD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC8EdgeListC"
          }
        ],
        "key.typename" : "ReferenceGraph.Type",
        "key.typeusr" : "$S14DataStructures14ReferenceGraphCmD",
        "key.usr" : "s:14DataStructures14ReferenceGraphC"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Node.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 183,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public class ReferenceGraph<\/Declaration>",
        "key.bodylength" : 58,
        "key.bodyoffset" : 123,
        "key.doc.column" : 14,
        "key.doc.declaration" : "public class ReferenceGraph",
        "key.doc.discussion" : [
          {
            "TODO" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift\" line=\"10\" column=\"14\"><Name>ReferenceGraph<\/Name><USR>s:14DataStructures14ReferenceGraphC<\/USR><Declaration>public class ReferenceGraph<\/Declaration><CommentParts><Discussion><TODO><Para>Make Generic over some type.<\/Para><\/TODO><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "ReferenceGraph",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ReferenceGraph<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 85,
        "key.name" : "ReferenceGraph",
        "key.namelength" : 14,
        "key.nameoffset" : 107,
        "key.offset" : 97,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public class Node<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 129
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 148,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Node.swift",
            "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Node<\/decl.name><\/decl.class>",
            "key.kind" : "source.lang.swift.decl.class",
            "key.length" : 44,
            "key.name" : "Node",
            "key.namelength" : 4,
            "key.nameoffset" : 142,
            "key.offset" : 136,
            "key.parsed_declaration" : "public class Node",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 157
                  }
                ],
                "key.bodylength" : 1,
                "key.bodyoffset" : 172,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.Node.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 10,
                "key.name" : "init()",
                "key.namelength" : 6,
                "key.nameoffset" : 164,
                "key.offset" : 164,
                "key.parsed_declaration" : "public init()",
                "key.parsed_scope.end" : 12,
                "key.parsed_scope.start" : 12,
                "key.typename" : "(ReferenceGraph.Node.Type) -> () -> ReferenceGraph.Node",
                "key.typeusr" : "$S14DataStructures14ReferenceGraphC4NodeCycD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC4NodeCAEycfc"
              }
            ],
            "key.typename" : "ReferenceGraph.Node.Type",
            "key.typeusr" : "$S14DataStructures14ReferenceGraphC4NodeCmD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC4NodeC"
          }
        ],
        "key.typename" : "ReferenceGraph.Type",
        "key.typeusr" : "$S14DataStructures14ReferenceGraphCmD",
        "key.usr" : "s:14DataStructures14ReferenceGraphC"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1629,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public class ReferenceGraph<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 133
          }
        ],
        "key.bodylength" : 1465,
        "key.bodyoffset" : 162,
        "key.doc.column" : 14,
        "key.doc.comment" : "- TODO: Make Generic over some type.",
        "key.doc.declaration" : "public class ReferenceGraph",
        "key.doc.discussion" : [
          {
            "TODO" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift\" line=\"10\" column=\"14\"><Name>ReferenceGraph<\/Name><USR>s:14DataStructures14ReferenceGraphC<\/USR><Declaration>public class ReferenceGraph<\/Declaration><CommentParts><Discussion><TODO><Para>Make Generic over some type.<\/Para><\/TODO><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "ReferenceGraph",
        "key.doc.type" : "Class",
        "key.doclength" : 41,
        "key.docoffset" : 92,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ReferenceGraph<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1488,
        "key.name" : "ReferenceGraph",
        "key.namelength" : 14,
        "key.nameoffset" : 146,
        "key.offset" : 140,
        "key.parsed_declaration" : "public class ReferenceGraph",
        "key.parsed_scope.end" : 60,
        "key.parsed_scope.start" : 10,
        "key.runtime_name" : "_TtC14ReferenceGraph14ReferenceGraph",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var adjacencyList: <Type usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/Type>.<Type usr=\"s:14DataStructures14ReferenceGraphC13AdjacencyListC\">AdjacencyList<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 168
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>adjacencyList<\/decl.name>: <decl.var.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/ref.class>.<ref.class usr=\"s:14DataStructures14ReferenceGraphC13AdjacencyListC\">AdjacencyList<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 35,
            "key.name" : "adjacencyList",
            "key.namelength" : 13,
            "key.nameoffset" : 180,
            "key.offset" : 176,
            "key.parsed_declaration" : "private var adjacencyList = AdjacencyList()",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "ReferenceGraph.AdjacencyList",
            "key.typeusr" : "$S14DataStructures14ReferenceGraphC13AdjacencyListCD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC13adjacencyList33_CAD6A68D45771A9DF3FF6E2C9F2E7EB2LLAC09AdjacencyF0Cvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 220
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var vertices: [<Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 292
              }
            ],
            "key.bodylength" : 100,
            "key.bodyoffset" : 321,
            "key.doc.column" : 16,
            "key.doc.comment" : "All vertices contained herein.",
            "key.doc.declaration" : "public var vertices: [Node] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift\" line=\"17\" column=\"16\"><Name>vertices<\/Name><USR>s:14DataStructures14ReferenceGraphC8verticesSayAC4NodeCGvp<\/USR><Declaration>public var vertices: [Node] { get }<\/Declaration><CommentParts><Abstract><Para>All vertices contained herein.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 17,
            "key.doc.name" : "vertices",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 253,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>vertices<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 123,
            "key.name" : "vertices",
            "key.namelength" : 8,
            "key.nameoffset" : 303,
            "key.offset" : 299,
            "key.parsed_declaration" : "public var vertices: [Node]",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 17,
            "key.typename" : "[ReferenceGraph.Node]",
            "key.typeusr" : "$SSay14DataStructures14ReferenceGraphC4NodeCGD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC8verticesSayAC4NodeCGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var edges: [<Type usr=\"s:14DataStructures14ReferenceGraphC4EdgeC\">Edge<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 464
              }
            ],
            "key.bodylength" : 91,
            "key.bodyoffset" : 490,
            "key.doc.column" : 16,
            "key.doc.comment" : "All edges contained herein.",
            "key.doc.declaration" : "public var edges: [Edge] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift\" line=\"22\" column=\"16\"><Name>edges<\/Name><USR>s:14DataStructures14ReferenceGraphC5edgesSayAC4EdgeCGvp<\/USR><Declaration>public var edges: [Edge] { get }<\/Declaration><CommentParts><Abstract><Para>All edges contained herein.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 22,
            "key.doc.name" : "edges",
            "key.doc.type" : "Other",
            "key.doclength" : 32,
            "key.docoffset" : 428,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>edges<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:14DataStructures14ReferenceGraphC4EdgeC\">Edge<\/ref.class>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 111,
            "key.name" : "edges",
            "key.namelength" : 5,
            "key.nameoffset" : 475,
            "key.offset" : 471,
            "key.parsed_declaration" : "public var edges: [Edge]",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 22,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14ReferenceGraphC5edges4fromSayAC4EdgeCGAC4NodeC_tF\">edges(from:)<\/RelatedName>"
              }
            ],
            "key.typename" : "[ReferenceGraph.Edge]",
            "key.typeusr" : "$SSay14DataStructures14ReferenceGraphC4EdgeCGD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC5edgesSayAC4EdgeCGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var weight: <Type usr=\"s:Sf\">Float<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 588
              }
            ],
            "key.bodylength" : 12,
            "key.bodyoffset" : 615,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>weight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "weight",
            "key.namelength" : 6,
            "key.nameoffset" : 599,
            "key.offset" : 595,
            "key.parsed_declaration" : "public var weight: Float?",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 26,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14ReferenceGraphC6weight4from2toSfSgAC4NodeC_AItF\">weight(from:to:)<\/RelatedName>"
              }
            ],
            "key.typename" : "Float?",
            "key.typeusr" : "$SSfSgD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC6weightSfSgvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - Initializers",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 637
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 663
              }
            ],
            "key.bodylength" : 1,
            "key.bodyoffset" : 678,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 10,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 670,
            "key.offset" : 670,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 30,
            "key.typename" : "(ReferenceGraph.Type) -> () -> ReferenceGraph",
            "key.typeusr" : "$S14DataStructures14ReferenceGraphCycD",
            "key.usr" : "s:14DataStructures14ReferenceGraphCACycfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 689
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func addVertex(_ vertex: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 751
              }
            ],
            "key.bodylength" : 45,
            "key.bodyoffset" : 790,
            "key.doc.column" : 17,
            "key.doc.comment" : "Add the given `vertex`.",
            "key.doc.declaration" : "public func addVertex(_ vertex: Node)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift\" line=\"35\" column=\"17\"><Name>addVertex(_:)<\/Name><USR>s:14DataStructures14ReferenceGraphC9addVertexyyAC4NodeCF<\/USR><Declaration>public func addVertex(_ vertex: Node)<\/Declaration><CommentParts><Abstract><Para>Add the given <codeVoice>vertex<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 35,
            "key.doc.name" : "addVertex(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 28,
            "key.docoffset" : 719,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addVertex<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>vertex<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 78,
            "key.name" : "addVertex(_:)",
            "key.namelength" : 25,
            "key.nameoffset" : 763,
            "key.offset" : 758,
            "key.parsed_declaration" : "public func addVertex(_ vertex: Node)",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 35,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceGraph) -> (ReferenceGraph.Node) -> ()",
            "key.typeusr" : "$Syy14DataStructures14ReferenceGraphC4NodeCcD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC9addVertexyyAC4NodeCF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func addDirectedEdge(from source: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>, to destination: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>, weight: <Type usr=\"s:Sf\">Float<\/Type>? = default)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 923
              }
            ],
            "key.bodylength" : 90,
            "key.bodyoffset" : 1049,
            "key.doc.column" : 17,
            "key.doc.comment" : "Add a directed edge from one vertex to another, with an optional weight.",
            "key.doc.declaration" : "public func addDirectedEdge(from source: Node, to destination: Node, weight: Float? = default)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift\" line=\"40\" column=\"17\"><Name>addDirectedEdge(from:to:weight:)<\/Name><USR>s:14DataStructures14ReferenceGraphC15addDirectedEdge4from2to6weightyAC4NodeC_AISfSgtF<\/USR><Declaration>public func addDirectedEdge(from source: Node, to destination: Node, weight: Float? = default)<\/Declaration><CommentParts><Abstract><Para>Add a directed edge from one vertex to another, with an optional weight.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 40,
            "key.doc.name" : "addDirectedEdge(from:to:weight:)",
            "key.doc.type" : "Function",
            "key.doclength" : 77,
            "key.docoffset" : 842,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addDirectedEdge<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>source<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>destination<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>weight<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 210,
            "key.name" : "addDirectedEdge(from:to:weight:)",
            "key.namelength" : 108,
            "key.nameoffset" : 935,
            "key.offset" : 930,
            "key.parsed_declaration" : "public func addDirectedEdge(\n    from source: Node,\n    to destination: Node,\n    weight: Float? = nil\n)",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 40,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceGraph) -> (ReferenceGraph.Node, ReferenceGraph.Node, Float?) -> ()",
            "key.typeusr" : "$S4from2to6weighty14DataStructures14ReferenceGraphC4NodeC_AHSfSgtcD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC15addDirectedEdge4from2to6weightyAC4NodeC_AISfSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func weight(from source: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>, to destination: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1266
              }
            ],
            "key.bodylength" : 99,
            "key.bodyoffset" : 1337,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: The weight between two nodes, if such an edge exists, and it has a weight.\nOtherwise, `nil`.",
            "key.doc.declaration" : "public func weight(from source: Node, to destination: Node) -> Float?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift\" line=\"51\" column=\"17\"><Name>weight(from:to:)<\/Name><USR>s:14DataStructures14ReferenceGraphC6weight4from2toSfSgAC4NodeC_AItF<\/USR><Declaration>public func weight(from source: Node, to destination: Node) -&gt; Float?<\/Declaration><CommentParts><ResultDiscussion><Para>The weight between two nodes, if such an edge exists, and it has a weight. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 51,
            "key.doc.name" : "weight(from:to:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "The weight between two nodes, if such an edge exists, and it has a weight. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 116,
            "key.docoffset" : 1146,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>weight<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>source<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>destination<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 164,
            "key.name" : "weight(from:to:)",
            "key.namelength" : 47,
            "key.nameoffset" : 1278,
            "key.offset" : 1273,
            "key.parsed_declaration" : "public func weight(from source: Node, to destination: Node) -> Float?",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 51,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14ReferenceGraphC6weightSfSgvp\">weight<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let edgeList: <Type usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/Type>.<Type usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC\">EdgeList<\/Type>?<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>edgeList<\/decl.name>: <decl.var.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC\">ReferenceGraph<\/ref.class>.<ref.class usr=\"s:14DataStructures14ReferenceGraphC8EdgeListC\">EdgeList<\/ref.class>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 36,
                "key.name" : "edgeList",
                "key.namelength" : 8,
                "key.nameoffset" : 1350,
                "key.offset" : 1346,
                "key.parsed_declaration" : "let edgeList = adjacencyList[source]",
                "key.parsed_scope.end" : 52,
                "key.parsed_scope.start" : 52,
                "key.typename" : "ReferenceGraph.EdgeList?",
                "key.typeusr" : "$S14DataStructures14ReferenceGraphC8EdgeListCSgD",
                "key.usr" : "s:14DataStructures14ReferenceGraphC6weight4from2toSfSgAC4NodeC_AItF8edgeListL_AC04EdgeJ0CSgvp"
              }
            ],
            "key.typename" : "(ReferenceGraph) -> (ReferenceGraph.Node, ReferenceGraph.Node) -> Float?",
            "key.typeusr" : "$S4from2toSfSg14DataStructures14ReferenceGraphC4NodeC_AHtcD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC6weight4from2toSfSgAC4NodeC_AItF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func edges(from source: <Type usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/Type>) -&gt; [<Type usr=\"s:14DataStructures14ReferenceGraphC4EdgeC\">Edge<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1522
              }
            ],
            "key.bodylength" : 55,
            "key.bodyoffset" : 1570,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: All `Edge` values emanating from the given `source` vertex.",
            "key.doc.declaration" : "public func edges(from source: Node) -> [Edge]",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift\" line=\"57\" column=\"17\"><Name>edges(from:)<\/Name><USR>s:14DataStructures14ReferenceGraphC5edges4fromSayAC4EdgeCGAC4NodeC_tF<\/USR><Declaration>public func edges(from source: Node) -&gt; [Edge]<\/Declaration><CommentParts><ResultDiscussion><Para>All <codeVoice>Edge<\/codeVoice> values emanating from the given <codeVoice>source<\/codeVoice> vertex.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 57,
            "key.doc.name" : "edges(from:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "All `Edge` values emanating from the given `source` vertex."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 75,
            "key.docoffset" : 1443,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceGraph.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>edges<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>source<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures14ReferenceGraphC4NodeC\">Node<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"s:14DataStructures14ReferenceGraphC4EdgeC\">Edge<\/ref.class>]<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 97,
            "key.name" : "edges(from:)",
            "key.namelength" : 24,
            "key.nameoffset" : 1534,
            "key.offset" : 1529,
            "key.parsed_declaration" : "public func edges(from source: Node) -> [Edge]",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 57,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14ReferenceGraphC5edgesSayAC4EdgeCGvp\">edges<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceGraph) -> (ReferenceGraph.Node) -> [ReferenceGraph.Edge]",
            "key.typeusr" : "$S4fromSay14DataStructures14ReferenceGraphC4EdgeCGAD4NodeC_tcD",
            "key.usr" : "s:14DataStructures14ReferenceGraphC5edges4fromSayAC4EdgeCGAC4NodeC_tF"
          }
        ],
        "key.typename" : "ReferenceGraph.Type",
        "key.typeusr" : "$S14DataStructures14ReferenceGraphCmD",
        "key.usr" : "s:14DataStructures14ReferenceGraphC"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 6827,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public class ReferenceTree<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 135
          }
        ],
        "key.bodylength" : 6662,
        "key.bodyoffset" : 163,
        "key.doc.column" : 14,
        "key.doc.comment" : "Mutable Tree structure.",
        "key.doc.declaration" : "public class ReferenceTree",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"12\" column=\"14\"><Name>ReferenceTree<\/Name><USR>s:14DataStructures13ReferenceTreeC<\/USR><Declaration>public class ReferenceTree<\/Declaration><CommentParts><Abstract><Para>Mutable Tree structure.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "ReferenceTree",
        "key.doc.type" : "Class",
        "key.doclength" : 28,
        "key.docoffset" : 107,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ReferenceTree<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 6684,
        "key.name" : "ReferenceTree",
        "key.namelength" : 13,
        "key.nameoffset" : 148,
        "key.offset" : 142,
        "key.parsed_declaration" : "public class ReferenceTree",
        "key.parsed_scope.end" : 240,
        "key.parsed_scope.start" : 12,
        "key.runtime_name" : "_TtC13ReferenceTree13ReferenceTree",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public enum <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>.Error : Swift.<Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 255
              }
            ],
            "key.bodylength" : 333,
            "key.bodyoffset" : 287,
            "key.doc.column" : 17,
            "key.doc.comment" : "Error thrown when doing bad things to a `ReferenceTree` objects.",
            "key.doc.declaration" : "public enum DataStructures.ReferenceTree.Error : Swift.Error",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"17\" column=\"17\"><Name>Error<\/Name><USR>s:14DataStructures13ReferenceTreeC5ErrorO<\/USR><Declaration>public enum DataStructures.ReferenceTree.Error : Swift.Error<\/Declaration><CommentParts><Abstract><Para>Error thrown when doing bad things to a <codeVoice>ReferenceTree<\/codeVoice> objects.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 17,
            "key.doc.name" : "Error",
            "key.doc.type" : "Other",
            "key.doclength" : 81,
            "key.docoffset" : 169,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 11,
                "key.offset" : 274
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>.<decl.name>Error<\/decl.name> : Swift.<ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Swift.Error"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 359,
            "key.name" : "Error",
            "key.namelength" : 5,
            "key.nameoffset" : 267,
            "key.offset" : 262,
            "key.parsed_declaration" : "public enum Error: Swift.Error",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 17,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 19,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 378,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case insertionError<\/Declaration>",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "Error thrown when trying to insert a MutableTree at an invalid index",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"20\" column=\"14\"><Name>insertionError<\/Name><USR>s:14DataStructures13ReferenceTreeC5ErrorO09insertionE0yA2EmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Error thrown when trying to insert a MutableTree at an invalid index<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 20,
                    "key.doc.name" : "insertionError",
                    "key.doc.type" : "Other",
                    "key.doclength" : 73,
                    "key.docoffset" : 297,
                    "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>insertionError<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 14,
                    "key.name" : "insertionError",
                    "key.namelength" : 14,
                    "key.nameoffset" : 383,
                    "key.offset" : 383,
                    "key.parsed_declaration" : "case insertionError",
                    "key.parsed_scope.end" : 20,
                    "key.parsed_scope.start" : 20,
                    "key.typename" : "(ReferenceTree.Error.Type) -> ReferenceTree.Error",
                    "key.typeusr" : "$Sy14DataStructures13ReferenceTreeC5ErrorOAEmcD",
                    "key.usr" : "s:14DataStructures13ReferenceTreeC5ErrorO09insertionE0yA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 17,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 490,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case removalError<\/Declaration>",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "Error thrown when trying to remove a MutableTree from an invalid index",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"23\" column=\"14\"><Name>removalError<\/Name><USR>s:14DataStructures13ReferenceTreeC5ErrorO07removalE0yA2EmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Error thrown when trying to remove a MutableTree from an invalid index<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 23,
                    "key.doc.name" : "removalError",
                    "key.doc.type" : "Other",
                    "key.doclength" : 75,
                    "key.docoffset" : 407,
                    "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>removalError<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 12,
                    "key.name" : "removalError",
                    "key.namelength" : 12,
                    "key.nameoffset" : 495,
                    "key.offset" : 495,
                    "key.parsed_declaration" : "case removalError",
                    "key.parsed_scope.end" : 23,
                    "key.parsed_scope.start" : 23,
                    "key.typename" : "(ReferenceTree.Error.Type) -> ReferenceTree.Error",
                    "key.typeusr" : "$Sy14DataStructures13ReferenceTreeC5ErrorOAEmcD",
                    "key.usr" : "s:14DataStructures13ReferenceTreeC5ErrorO07removalE0yA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 17,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 598,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case nodeNotFound<\/Declaration>",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "Error thrown when trying to insert a MutableTree at an invalid index",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"26\" column=\"14\"><Name>nodeNotFound<\/Name><USR>s:14DataStructures13ReferenceTreeC5ErrorO12nodeNotFoundyA2EmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Error thrown when trying to insert a MutableTree at an invalid index<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 26,
                    "key.doc.name" : "nodeNotFound",
                    "key.doc.type" : "Other",
                    "key.doclength" : 73,
                    "key.docoffset" : 517,
                    "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>nodeNotFound<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 12,
                    "key.name" : "nodeNotFound",
                    "key.namelength" : 12,
                    "key.nameoffset" : 603,
                    "key.offset" : 603,
                    "key.parsed_declaration" : "case nodeNotFound",
                    "key.parsed_scope.end" : 26,
                    "key.parsed_scope.start" : 26,
                    "key.typename" : "(ReferenceTree.Error.Type) -> ReferenceTree.Error",
                    "key.typeusr" : "$Sy14DataStructures13ReferenceTreeC5ErrorOAEmcD",
                    "key.usr" : "s:14DataStructures13ReferenceTreeC5ErrorO12nodeNotFoundyA2EmF"
                  }
                ]
              }
            ],
            "key.typename" : "ReferenceTree.Error.Type",
            "key.typeusr" : "$S14DataStructures13ReferenceTreeC5ErrorOmD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC5ErrorO"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 630
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public weak var parent: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.weak",
                "key.length" : 4,
                "key.offset" : 734
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 727
              }
            ],
            "key.doc.column" : 21,
            "key.doc.comment" : "Parent `MutableTree`. The root of a tree has no parent.",
            "key.doc.declaration" : "public weak var parent: DataStructures.ReferenceTree?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"32\" column=\"21\"><Name>parent<\/Name><USR>s:14DataStructures13ReferenceTreeC6parentACSgXwvp<\/USR><Declaration>public weak var parent: DataStructures.ReferenceTree?<\/Declaration><CommentParts><Abstract><Para>Parent <codeVoice>MutableTree<\/codeVoice>. The root of a tree has no parent.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 32,
            "key.doc.name" : "parent",
            "key.doc.type" : "Other",
            "key.doclength" : 60,
            "key.docoffset" : 663,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>weak<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>parent<\/decl.name>: <decl.var.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.name" : "parent",
            "key.namelength" : 6,
            "key.nameoffset" : 743,
            "key.offset" : 739,
            "key.parsed_declaration" : "public weak var parent: ReferenceTree?",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 32,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "ReferenceTree?",
            "key.typeusr" : "$S14DataStructures13ReferenceTreeCSgXwD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC6parentACSgXwvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var children: [<Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 811
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Children `MutableTree` objects.",
            "key.doc.declaration" : "public var children: [ReferenceTree]",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"35\" column=\"16\"><Name>children<\/Name><USR>s:14DataStructures13ReferenceTreeC8childrenSayACGvp<\/USR><Declaration>public var children: [ReferenceTree]<\/Declaration><CommentParts><Abstract><Para>Children <codeVoice>MutableTree<\/codeVoice> objects.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 35,
            "key.doc.name" : "children",
            "key.doc.type" : "Other",
            "key.doclength" : 36,
            "key.docoffset" : 771,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>children<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "children",
            "key.namelength" : 8,
            "key.nameoffset" : 822,
            "key.offset" : 818,
            "key.parsed_declaration" : "public var children: [ReferenceTree]",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 35,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[ReferenceTree]",
            "key.typeusr" : "$SSay14DataStructures13ReferenceTreeCGD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC8childrenSayACGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var isLeaf: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 925
              }
            ],
            "key.bodylength" : 28,
            "key.bodyoffset" : 950,
            "key.doc.column" : 16,
            "key.doc.comment" : "- returns: `true` if there are no children. Otherwise, `false`.",
            "key.doc.declaration" : "public var isLeaf: Bool { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"38\" column=\"16\"><Name>isLeaf<\/Name><USR>s:14DataStructures13ReferenceTreeC6isLeafSbvp<\/USR><Declaration>public var isLeaf: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there are no children. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 38,
            "key.doc.name" : "isLeaf",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there are no children. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 68,
            "key.docoffset" : 853,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isLeaf<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 47,
            "key.name" : "isLeaf",
            "key.namelength" : 6,
            "key.nameoffset" : 936,
            "key.offset" : 932,
            "key.parsed_declaration" : "public var isLeaf: Bool",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 38,
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC6isLeafSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var leaves: [<Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1005
              }
            ],
            "key.bodylength" : 454,
            "key.bodyoffset" : 1041,
            "key.doc.column" : 16,
            "key.doc.comment" : "All leaves.",
            "key.doc.declaration" : "public var leaves: [ReferenceTree] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"41\" column=\"16\"><Name>leaves<\/Name><USR>s:14DataStructures13ReferenceTreeC6leavesSayACGvp<\/USR><Declaration>public var leaves: [ReferenceTree] { get }<\/Declaration><CommentParts><Abstract><Para>All leaves.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 41,
            "key.doc.name" : "leaves",
            "key.doc.type" : "Other",
            "key.doclength" : 16,
            "key.docoffset" : 985,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>leaves<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 484,
            "key.name" : "leaves",
            "key.namelength" : 6,
            "key.nameoffset" : 1016,
            "key.offset" : 1012,
            "key.parsed_declaration" : "public var leaves: [ReferenceTree]",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 41,
            "key.typename" : "[ReferenceTree]",
            "key.typeusr" : "$SSay14DataStructures13ReferenceTreeCGD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC6leavesSayACGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func descendToGetLeaves(of node: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>, result: inout [<Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>])<\/Declaration>",
            "key.bodylength" : 240,
            "key.bodyoffset" : 1131,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>descendToGetLeaves<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>result<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> [<ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 321,
            "key.name" : "descendToGetLeaves(of:result:)",
            "key.namelength" : 73,
            "key.nameoffset" : 1056,
            "key.offset" : 1051,
            "key.parsed_declaration" : "func descendToGetLeaves(of node: ReferenceTree, result: inout [ReferenceTree])",
            "key.parsed_scope.end" : 52,
            "key.parsed_scope.start" : 43,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree, inout [ReferenceTree]) -> ()",
            "key.typeusr" : "$S2of6resulty14DataStructures13ReferenceTreeC_SayAEGztcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC6leavesSayACGvg18descendToGetLeavesL_2of6resultyAC_AEztF"
          },
          {
            "key.annotated_decl" : "<Declaration>var result: [<Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>]<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>result<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>]<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 32,
            "key.name" : "result",
            "key.namelength" : 6,
            "key.nameoffset" : 1386,
            "key.offset" : 1382,
            "key.parsed_declaration" : "var result: [ReferenceTree] = []",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 54,
            "key.typename" : "[ReferenceTree]",
            "key.typeusr" : "$SSay14DataStructures13ReferenceTreeCGD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC6leavesSayACGvg6resultL_AEvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var isContainer: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1580
              }
            ],
            "key.bodylength" : 39,
            "key.bodyoffset" : 1610,
            "key.doc.column" : 16,
            "key.doc.comment" : "- returns: `true` if there is at least one child. Otherwise, `false`.",
            "key.doc.declaration" : "public var isContainer: Bool { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"60\" column=\"16\"><Name>isContainer<\/Name><USR>s:14DataStructures13ReferenceTreeC11isContainerSbvp<\/USR><Declaration>public var isContainer: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there is at least one child. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 60,
            "key.doc.name" : "isContainer",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there is at least one child. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 74,
            "key.docoffset" : 1502,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isContainer<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 63,
            "key.name" : "isContainer",
            "key.namelength" : 11,
            "key.nameoffset" : 1591,
            "key.offset" : 1587,
            "key.parsed_declaration" : "public var isContainer: Bool",
            "key.parsed_scope.end" : 62,
            "key.parsed_scope.start" : 60,
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC11isContainerSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var isRoot: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1725
              }
            ],
            "key.bodylength" : 34,
            "key.bodyoffset" : 1750,
            "key.doc.column" : 16,
            "key.doc.comment" : "- returns: `true` if there is no parent. Otherwise, `false`.",
            "key.doc.declaration" : "public var isRoot: Bool { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"65\" column=\"16\"><Name>isRoot<\/Name><USR>s:14DataStructures13ReferenceTreeC6isRootSbvp<\/USR><Declaration>public var isRoot: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there is no parent. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 65,
            "key.doc.name" : "isRoot",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there is no parent. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 65,
            "key.docoffset" : 1656,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isRoot<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 53,
            "key.name" : "isRoot",
            "key.namelength" : 6,
            "key.nameoffset" : 1736,
            "key.offset" : 1732,
            "key.parsed_declaration" : "public var isRoot: Bool",
            "key.parsed_scope.end" : 67,
            "key.parsed_scope.start" : 65,
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC6isRootSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var root: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1860
              }
            ],
            "key.bodylength" : 241,
            "key.bodyoffset" : 1892,
            "key.doc.column" : 16,
            "key.doc.comment" : "- returns: `true` if there is no parent. Otherwise, `false`.",
            "key.doc.declaration" : "public var root: ReferenceTree { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"70\" column=\"16\"><Name>root<\/Name><USR>s:14DataStructures13ReferenceTreeC4rootACvp<\/USR><Declaration>public var root: ReferenceTree { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there is no parent. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 70,
            "key.doc.name" : "root",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there is no parent. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 65,
            "key.docoffset" : 1791,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>root<\/decl.name>: <decl.var.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 267,
            "key.name" : "root",
            "key.namelength" : 4,
            "key.nameoffset" : 1871,
            "key.offset" : 1867,
            "key.parsed_declaration" : "public var root: ReferenceTree",
            "key.parsed_scope.end" : 78,
            "key.parsed_scope.start" : 70,
            "key.typename" : "ReferenceTree",
            "key.typeusr" : "$S14DataStructures13ReferenceTreeCD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC4rootACvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func ascendToGetRoot(of node: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>) -&gt; <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type><\/Declaration>",
            "key.bodylength" : 120,
            "key.bodyoffset" : 1965,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ascendToGetRoot<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 184,
            "key.name" : "ascendToGetRoot(of:)",
            "key.namelength" : 39,
            "key.nameoffset" : 1907,
            "key.offset" : 1902,
            "key.parsed_declaration" : "func ascendToGetRoot(of node: ReferenceTree) -> ReferenceTree",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 72,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> ReferenceTree",
            "key.typeusr" : "$S2of14DataStructures13ReferenceTreeCAD_tcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC4rootACvg15ascendToGetRootL_2ofA2C_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var pathToRoot: [<Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2226
              }
            ],
            "key.bodylength" : 330,
            "key.bodyoffset" : 2266,
            "key.doc.column" : 16,
            "key.doc.comment" : "Array of all MutableTree objects between (and including) `self` up to `root`.",
            "key.doc.declaration" : "public var pathToRoot: [ReferenceTree] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"81\" column=\"16\"><Name>pathToRoot<\/Name><USR>s:14DataStructures13ReferenceTreeC10pathToRootSayACGvp<\/USR><Declaration>public var pathToRoot: [ReferenceTree] { get }<\/Declaration><CommentParts><Abstract><Para>Array of all MutableTree objects between (and including) <codeVoice>self<\/codeVoice> up to <codeVoice>root<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 81,
            "key.doc.name" : "pathToRoot",
            "key.doc.type" : "Other",
            "key.doclength" : 82,
            "key.docoffset" : 2140,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>pathToRoot<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 364,
            "key.name" : "pathToRoot",
            "key.namelength" : 10,
            "key.nameoffset" : 2237,
            "key.offset" : 2233,
            "key.parsed_declaration" : "public var pathToRoot: [ReferenceTree]",
            "key.parsed_scope.end" : 89,
            "key.parsed_scope.start" : 81,
            "key.typename" : "[ReferenceTree]",
            "key.typeusr" : "$SSay14DataStructures13ReferenceTreeCGD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC10pathToRootSayACGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func ascendToGetPathToRoot(of node: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>, result: [<Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>]) -&gt; [<Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>]<\/Declaration>",
            "key.bodylength" : 158,
            "key.bodyoffset" : 2372,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ascendToGetPathToRoot<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>result<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>]<\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 255,
            "key.name" : "ascendToGetPathToRoot(of:result:)",
            "key.namelength" : 70,
            "key.nameoffset" : 2281,
            "key.offset" : 2276,
            "key.parsed_declaration" : "func ascendToGetPathToRoot(of node: ReferenceTree, result: [ReferenceTree]) -> [ReferenceTree]",
            "key.parsed_scope.end" : 86,
            "key.parsed_scope.start" : 83,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree, [ReferenceTree]) -> [ReferenceTree]",
            "key.typeusr" : "$S2of6resultSay14DataStructures13ReferenceTreeCGAE_AFtcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC10pathToRootSayACGvg06ascendf7GetPathfG0L_2of6resultAeC_AEtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var height: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2627
              }
            ],
            "key.bodylength" : 332,
            "key.bodyoffset" : 2651,
            "key.doc.column" : 16,
            "key.doc.comment" : "Height of node.",
            "key.doc.declaration" : "public var height: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"92\" column=\"16\"><Name>height<\/Name><USR>s:14DataStructures13ReferenceTreeC6heightSivp<\/USR><Declaration>public var height: Int { get }<\/Declaration><CommentParts><Abstract><Para>Height of node.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 92,
            "key.doc.name" : "height",
            "key.doc.type" : "Other",
            "key.doclength" : 20,
            "key.docoffset" : 2603,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>height<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 350,
            "key.name" : "height",
            "key.namelength" : 6,
            "key.nameoffset" : 2638,
            "key.offset" : 2634,
            "key.parsed_declaration" : "public var height: Int",
            "key.parsed_scope.end" : 102,
            "key.parsed_scope.start" : 92,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC6heightSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func descendToGetHeight(of node: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>, result: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 191,
            "key.bodyoffset" : 2730,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>descendToGetHeight<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>result<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 261,
            "key.name" : "descendToGetHeight(of:result:)",
            "key.namelength" : 55,
            "key.nameoffset" : 2666,
            "key.offset" : 2661,
            "key.parsed_declaration" : "func descendToGetHeight(of node: ReferenceTree, result: Int) -> Int",
            "key.parsed_scope.end" : 99,
            "key.parsed_scope.start" : 94,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree, Int) -> Int",
            "key.typeusr" : "$S2of6resultSi14DataStructures13ReferenceTreeC_SitcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC6heightSivg18descendToGetHeightL_2of6resultSiAC_SitF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var heightOfTree: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3025
              }
            ],
            "key.bodylength" : 20,
            "key.bodyoffset" : 3055,
            "key.doc.column" : 16,
            "key.doc.comment" : "Height of containing tree.",
            "key.doc.declaration" : "public var heightOfTree: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"105\" column=\"16\"><Name>heightOfTree<\/Name><USR>s:14DataStructures13ReferenceTreeC08heightOfD0Sivp<\/USR><Declaration>public var heightOfTree: Int { get }<\/Declaration><CommentParts><Abstract><Para>Height of containing tree.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 105,
            "key.doc.name" : "heightOfTree",
            "key.doc.type" : "Other",
            "key.doclength" : 31,
            "key.docoffset" : 2990,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>heightOfTree<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.name" : "heightOfTree",
            "key.namelength" : 12,
            "key.nameoffset" : 3036,
            "key.offset" : 3032,
            "key.parsed_declaration" : "public var heightOfTree: Int",
            "key.parsed_scope.end" : 105,
            "key.parsed_scope.start" : 105,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC08heightOfD0Sivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var depth: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3105
              }
            ],
            "key.bodylength" : 275,
            "key.bodyoffset" : 3128,
            "key.doc.column" : 16,
            "key.doc.comment" : "Depth of node.",
            "key.doc.declaration" : "public var depth: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"108\" column=\"16\"><Name>depth<\/Name><USR>s:14DataStructures13ReferenceTreeC5depthSivp<\/USR><Declaration>public var depth: Int { get }<\/Declaration><CommentParts><Abstract><Para>Depth of node.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 108,
            "key.doc.name" : "depth",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 3082,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>depth<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 292,
            "key.name" : "depth",
            "key.namelength" : 5,
            "key.nameoffset" : 3116,
            "key.offset" : 3112,
            "key.parsed_declaration" : "public var depth: Int",
            "key.parsed_scope.end" : 116,
            "key.parsed_scope.start" : 108,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC5depthSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func ascendToGetDepth(of node: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>, depth: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 140,
            "key.bodyoffset" : 3204,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ascendToGetDepth<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>depth<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 207,
            "key.name" : "ascendToGetDepth(of:depth:)",
            "key.namelength" : 52,
            "key.nameoffset" : 3143,
            "key.offset" : 3138,
            "key.parsed_declaration" : "func ascendToGetDepth(of node: ReferenceTree, depth: Int) -> Int",
            "key.parsed_scope.end" : 113,
            "key.parsed_scope.start" : 110,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree, Int) -> Int",
            "key.typeusr" : "$S2of5depthSi14DataStructures13ReferenceTreeC_SitcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC5depthSivg16ascendToGetDepthL_2ofADSiAC_SitF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - Initializers",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3413
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(parent: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>? = default, children: [<Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>] = default)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3486
              }
            ],
            "key.bodylength" : 67,
            "key.bodyoffset" : 3561,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a `ReferenceTree`.",
            "key.doc.declaration" : "public init(parent: ReferenceTree? = default, children: [ReferenceTree] = default)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"123\" column=\"12\"><Name>init(parent:children:)<\/Name><USR>s:14DataStructures13ReferenceTreeC6parent8childrenA2CSg_SayACGtcfc<\/USR><Declaration>public init(parent: ReferenceTree? = default, children: [ReferenceTree] = default)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>ReferenceTree<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 123,
            "key.doc.name" : "init(parent:children:)",
            "key.doc.type" : "Function",
            "key.doclength" : 42,
            "key.docoffset" : 3439,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>parent<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>children<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>]<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 136,
            "key.name" : "init(parent:children:)",
            "key.namelength" : 66,
            "key.nameoffset" : 3493,
            "key.offset" : 3493,
            "key.parsed_declaration" : "public init(parent: ReferenceTree? = nil, children: [ReferenceTree] = [])",
            "key.parsed_scope.end" : 126,
            "key.parsed_scope.start" : 123,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree.Type) -> (ReferenceTree?, [ReferenceTree]) -> ReferenceTree",
            "key.typeusr" : "$S6parent8children14DataStructures13ReferenceTreeCAESg_SayAEGtcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC6parent8childrenA2CSg_SayACGtcfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3638
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func addChild(_ node: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3725
              }
            ],
            "key.bodylength" : 62,
            "key.bodyoffset" : 3770,
            "key.doc.column" : 17,
            "key.doc.comment" : "Add the given `node` to `children`.",
            "key.doc.declaration" : "public func addChild(_ node: ReferenceTree)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"133\" column=\"17\"><Name>addChild(_:)<\/Name><USR>s:14DataStructures13ReferenceTreeC8addChildyyACF<\/USR><Declaration>public func addChild(_ node: ReferenceTree)<\/Declaration><CommentParts><Abstract><Para>Add the given <codeVoice>node<\/codeVoice> to <codeVoice>children<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 133,
            "key.doc.name" : "addChild(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 52,
            "key.docoffset" : 3668,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 101,
            "key.name" : "addChild(_:)",
            "key.namelength" : 31,
            "key.nameoffset" : 3737,
            "key.offset" : 3732,
            "key.parsed_declaration" : "public func addChild(_ node: ReferenceTree)",
            "key.parsed_scope.end" : 136,
            "key.parsed_scope.start" : 133,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> (ReferenceTree) -> ()",
            "key.typeusr" : "$Syy14DataStructures13ReferenceTreeCcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC8addChildyyACF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func addChildren(_ nodes: [<Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>])<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3900
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 3951,
            "key.doc.column" : 17,
            "key.doc.comment" : "Append the given `nodes` to `children`.",
            "key.doc.declaration" : "public func addChildren(_ nodes: [ReferenceTree])",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"141\" column=\"17\"><Name>addChildren(_:)<\/Name><USR>s:14DataStructures13ReferenceTreeC11addChildrenyySayACGF<\/USR><Declaration>public func addChildren(_ nodes: [ReferenceTree])<\/Declaration><CommentParts><Abstract><Para>Append the given <codeVoice>nodes<\/codeVoice> to <codeVoice>children<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 141,
            "key.doc.name" : "addChildren(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 56,
            "key.docoffset" : 3839,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addChildren<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>nodes<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 82,
            "key.name" : "addChildren(_:)",
            "key.namelength" : 37,
            "key.nameoffset" : 3912,
            "key.offset" : 3907,
            "key.parsed_declaration" : "public func addChildren(_ nodes: [ReferenceTree])",
            "key.parsed_scope.end" : 143,
            "key.parsed_scope.start" : 141,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> ([ReferenceTree]) -> ()",
            "key.typeusr" : "$SyySay14DataStructures13ReferenceTreeCGcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC11addChildrenyySayACGF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func insertChild(_ node: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>, at index: <Type usr=\"s:Si\">Int<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4144
              }
            ],
            "key.bodylength" : 138,
            "key.bodyoffset" : 4214,
            "key.doc.column" : 17,
            "key.doc.comment" : "Insert the given `node` at the given `index` of `children`.\n\n- throws: `Error.insertionError` if `index` is out of bounds.",
            "key.doc.declaration" : "public func insertChild(_ node: ReferenceTree, at index: Int) throws",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"150\" column=\"17\"><Name>insertChild(_:at:)<\/Name><USR>s:14DataStructures13ReferenceTreeC11insertChild_2atyAC_SitKF<\/USR><Declaration>public func insertChild(_ node: ReferenceTree, at index: Int) throws<\/Declaration><CommentParts><Abstract><Para>Insert the given <codeVoice>node<\/codeVoice> at the given <codeVoice>index<\/codeVoice> of <codeVoice>children<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>Error.insertionError<\/codeVoice> if <codeVoice>index<\/codeVoice> is out of bounds.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 150,
            "key.doc.name" : "insertChild(_:at:)",
            "key.doc.type" : "Function",
            "key.doclength" : 144,
            "key.docoffset" : 3995,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>insertChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 202,
            "key.name" : "insertChild(_:at:)",
            "key.namelength" : 49,
            "key.nameoffset" : 4156,
            "key.offset" : 4151,
            "key.parsed_declaration" : "public func insertChild(_ node: ReferenceTree, at index: Int) throws",
            "key.parsed_scope.end" : 154,
            "key.parsed_scope.start" : 150,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> (ReferenceTree, Int) throws -> ()",
            "key.typeusr" : "$S_2aty14DataStructures13ReferenceTreeC_SitKcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC11insertChild_2atyAC_SitKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func removeChild(_ node: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4505
              }
            ],
            "key.bodylength" : 161,
            "key.bodyoffset" : 4560,
            "key.doc.column" : 17,
            "key.doc.comment" : "Remove the given `node` from `children`.\n\n- throws: `Error.removalError` if the given `node` is not held in `children`.",
            "key.doc.declaration" : "public func removeChild(_ node: ReferenceTree) throws",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"161\" column=\"17\"><Name>removeChild(_:)<\/Name><USR>s:14DataStructures13ReferenceTreeC11removeChildyyACKF<\/USR><Declaration>public func removeChild(_ node: ReferenceTree) throws<\/Declaration><CommentParts><Abstract><Para>Remove the given <codeVoice>node<\/codeVoice> from <codeVoice>children<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>Error.removalError<\/codeVoice> if the given <codeVoice>node<\/codeVoice> is not held in <codeVoice>children<\/codeVoice>.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 161,
            "key.doc.name" : "removeChild(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 141,
            "key.docoffset" : 4359,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>removeChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 210,
            "key.name" : "removeChild(_:)",
            "key.namelength" : 34,
            "key.nameoffset" : 4517,
            "key.offset" : 4512,
            "key.parsed_declaration" : "public func removeChild(_ node: ReferenceTree) throws",
            "key.parsed_scope.end" : 168,
            "key.parsed_scope.start" : 161,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13ReferenceTreeC11removeChild2atySi_tKF\">removeChild(at:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> (ReferenceTree) throws -> ()",
            "key.typeusr" : "$Syy14DataStructures13ReferenceTreeCKcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC11removeChildyyACKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func removeChild(at index: <Type usr=\"s:Si\">Int<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4853
              }
            ],
            "key.bodylength" : 126,
            "key.bodyoffset" : 4900,
            "key.doc.column" : 17,
            "key.doc.comment" : "Remove the node at the given `index`.\n\n- throws: `Error.removalError` if `index` is out of bounds.",
            "key.doc.declaration" : "public func removeChild(at index: Int) throws",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"175\" column=\"17\"><Name>removeChild(at:)<\/Name><USR>s:14DataStructures13ReferenceTreeC11removeChild2atySi_tKF<\/USR><Declaration>public func removeChild(at index: Int) throws<\/Declaration><CommentParts><Abstract><Para>Remove the node at the given <codeVoice>index<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>Error.removalError<\/codeVoice> if <codeVoice>index<\/codeVoice> is out of bounds.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 175,
            "key.doc.name" : "removeChild(at:)",
            "key.doc.type" : "Function",
            "key.doclength" : 120,
            "key.docoffset" : 4728,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>removeChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 167,
            "key.name" : "removeChild(at:)",
            "key.namelength" : 26,
            "key.nameoffset" : 4865,
            "key.offset" : 4860,
            "key.parsed_declaration" : "public func removeChild(at index: Int) throws",
            "key.parsed_scope.end" : 182,
            "key.parsed_scope.start" : 175,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13ReferenceTreeC11removeChildyyACKF\">removeChild(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> (Int) throws -> ()",
            "key.typeusr" : "$S2atySi_tKcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC11removeChild2atySi_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func hasChild(_ child: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5131
              }
            ],
            "key.bodylength" : 55,
            "key.bodyoffset" : 5185,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: `true` if the given node is contained herein. Otherwise, `false`.",
            "key.doc.declaration" : "public func hasChild(_ child: ReferenceTree) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"187\" column=\"17\"><Name>hasChild(_:)<\/Name><USR>s:14DataStructures13ReferenceTreeC8hasChildySbACF<\/USR><Declaration>public func hasChild(_ child: ReferenceTree) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is contained herein. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 187,
            "key.doc.name" : "hasChild(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is contained herein. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 93,
            "key.docoffset" : 5033,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>child<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 103,
            "key.name" : "hasChild(_:)",
            "key.namelength" : 32,
            "key.nameoffset" : 5143,
            "key.offset" : 5138,
            "key.parsed_declaration" : "public func hasChild(_ child: ReferenceTree) -> Bool",
            "key.parsed_scope.end" : 189,
            "key.parsed_scope.start" : 187,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> (ReferenceTree) -> Bool",
            "key.typeusr" : "$SySb14DataStructures13ReferenceTreeCcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC8hasChildySbACF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func child(at index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5342
              }
            ],
            "key.bodylength" : 103,
            "key.bodyoffset" : 5394,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: Child node at the given `index`, if present. Otherwise, `nil`.",
            "key.doc.declaration" : "public func child(at index: Int) -> ReferenceTree?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"194\" column=\"17\"><Name>child(at:)<\/Name><USR>s:14DataStructures13ReferenceTreeC5child2atACSgSi_tF<\/USR><Declaration>public func child(at index: Int) -&gt; ReferenceTree?<\/Declaration><CommentParts><ResultDiscussion><Para>Child node at the given <codeVoice>index<\/codeVoice>, if present. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 194,
            "key.doc.name" : "child(at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Child node at the given `index`, if present. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 90,
            "key.docoffset" : 5247,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>child<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 149,
            "key.name" : "child(at:)",
            "key.namelength" : 20,
            "key.nameoffset" : 5354,
            "key.offset" : 5349,
            "key.parsed_declaration" : "public func child(at index: Int) -> ReferenceTree?",
            "key.parsed_scope.end" : 197,
            "key.parsed_scope.start" : 194,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> (Int) -> ReferenceTree?",
            "key.typeusr" : "$S2at14DataStructures13ReferenceTreeCSgSi_tcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC5child2atACSgSi_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func leaf(at index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5610
              }
            ],
            "key.bodylength" : 103,
            "key.bodyoffset" : 5661,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: Returns the leaf node at the given `index`, if present. Otherwise, `nil`.",
            "key.doc.declaration" : "public func leaf(at index: Int) -> ReferenceTree?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"202\" column=\"17\"><Name>leaf(at:)<\/Name><USR>s:14DataStructures13ReferenceTreeC4leaf2atACSgSi_tF<\/USR><Declaration>public func leaf(at index: Int) -&gt; ReferenceTree?<\/Declaration><CommentParts><ResultDiscussion><Para>Returns the leaf node at the given <codeVoice>index<\/codeVoice>, if present. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 202,
            "key.doc.name" : "leaf(at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Returns the leaf node at the given `index`, if present. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 101,
            "key.docoffset" : 5504,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>leaf<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 148,
            "key.name" : "leaf(at:)",
            "key.namelength" : 19,
            "key.nameoffset" : 5622,
            "key.offset" : 5617,
            "key.parsed_declaration" : "public func leaf(at index: Int) -> ReferenceTree?",
            "key.parsed_scope.end" : 205,
            "key.parsed_scope.start" : 202,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> (Int) -> ReferenceTree?",
            "key.typeusr" : "$S2at14DataStructures13ReferenceTreeCSgSi_tcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC4leaf2atACSgSi_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func hasLeaf(_ node: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5859
              }
            ],
            "key.bodylength" : 52,
            "key.bodyoffset" : 5911,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: `true` if the given node is a leaf. Otherwise, `false`.",
            "key.doc.declaration" : "public func hasLeaf(_ node: ReferenceTree) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"210\" column=\"17\"><Name>hasLeaf(_:)<\/Name><USR>s:14DataStructures13ReferenceTreeC7hasLeafySbACF<\/USR><Declaration>public func hasLeaf(_ node: ReferenceTree) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is a leaf. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 210,
            "key.doc.name" : "hasLeaf(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is a leaf. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 83,
            "key.docoffset" : 5771,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasLeaf<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 98,
            "key.name" : "hasLeaf(_:)",
            "key.namelength" : 30,
            "key.nameoffset" : 5871,
            "key.offset" : 5866,
            "key.parsed_declaration" : "public func hasLeaf(_ node: ReferenceTree) -> Bool",
            "key.parsed_scope.end" : 212,
            "key.parsed_scope.start" : 210,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> (ReferenceTree) -> Bool",
            "key.typeusr" : "$SySb14DataStructures13ReferenceTreeCcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC7hasLeafySbACF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func hasAncestor(_ node: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6063
              }
            ],
            "key.bodylength" : 80,
            "key.bodyoffset" : 6119,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: `true` if the given node is an ancestor. Otherwise, `false`.",
            "key.doc.declaration" : "public func hasAncestor(_ node: ReferenceTree) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"217\" column=\"17\"><Name>hasAncestor(_:)<\/Name><USR>s:14DataStructures13ReferenceTreeC11hasAncestorySbACF<\/USR><Declaration>public func hasAncestor(_ node: ReferenceTree) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is an ancestor. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 217,
            "key.doc.name" : "hasAncestor(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is an ancestor. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 88,
            "key.docoffset" : 5970,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasAncestor<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 130,
            "key.name" : "hasAncestor(_:)",
            "key.namelength" : 34,
            "key.nameoffset" : 6075,
            "key.offset" : 6070,
            "key.parsed_declaration" : "public func hasAncestor(_ node: ReferenceTree) -> Bool",
            "key.parsed_scope.end" : 219,
            "key.parsed_scope.start" : 217,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> (ReferenceTree) -> Bool",
            "key.typeusr" : "$SySb14DataStructures13ReferenceTreeCcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC11hasAncestorySbACF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func ancestor(at distance: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6300
              }
            ],
            "key.bodylength" : 103,
            "key.bodyoffset" : 6358,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: Ancestor at the given distance, if present. Otherwise, `nil`.",
            "key.doc.declaration" : "public func ancestor(at distance: Int) -> ReferenceTree?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"224\" column=\"17\"><Name>ancestor(at:)<\/Name><USR>s:14DataStructures13ReferenceTreeC8ancestor2atACSgSi_tF<\/USR><Declaration>public func ancestor(at distance: Int) -&gt; ReferenceTree?<\/Declaration><CommentParts><ResultDiscussion><Para>Ancestor at the given distance, if present. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 224,
            "key.doc.name" : "ancestor(at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Ancestor at the given distance, if present. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 89,
            "key.docoffset" : 6206,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ancestor<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>distance<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 155,
            "key.name" : "ancestor(at:)",
            "key.namelength" : 26,
            "key.nameoffset" : 6312,
            "key.offset" : 6307,
            "key.parsed_declaration" : "public func ancestor(at distance: Int) -> ReferenceTree?",
            "key.parsed_scope.end" : 227,
            "key.parsed_scope.start" : 224,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> (Int) -> ReferenceTree?",
            "key.typeusr" : "$S2at14DataStructures13ReferenceTreeCSgSi_tcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC8ancestor2atACSgSi_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func hasDescendent(_ node: <Type usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6562
              }
            ],
            "key.bodylength" : 203,
            "key.bodyoffset" : 6620,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: `true` if the given node is a descendent. Otherwise, `false`.",
            "key.doc.declaration" : "public func hasDescendent(_ node: ReferenceTree) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift\" line=\"232\" column=\"17\"><Name>hasDescendent(_:)<\/Name><USR>s:14DataStructures13ReferenceTreeC13hasDescendentySbACF<\/USR><Declaration>public func hasDescendent(_ node: ReferenceTree) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is a descendent. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 232,
            "key.doc.name" : "hasDescendent(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is a descendent. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 89,
            "key.docoffset" : 6468,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasDescendent<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:14DataStructures13ReferenceTreeC\">ReferenceTree<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 255,
            "key.name" : "hasDescendent(_:)",
            "key.namelength" : 36,
            "key.nameoffset" : 6574,
            "key.offset" : 6569,
            "key.parsed_declaration" : "public func hasDescendent(_ node: ReferenceTree) -> Bool",
            "key.parsed_scope.end" : 239,
            "key.parsed_scope.start" : 232,
            "key.substructure" : [

            ],
            "key.typename" : "(ReferenceTree) -> (ReferenceTree) -> Bool",
            "key.typeusr" : "$SySb14DataStructures13ReferenceTreeCcD",
            "key.usr" : "s:14DataStructures13ReferenceTreeC13hasDescendentySbACF"
          }
        ],
        "key.typename" : "ReferenceTree.Type",
        "key.typeusr" : "$S14DataStructures13ReferenceTreeCmD",
        "key.usr" : "s:14DataStructures13ReferenceTreeC"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 8842,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum ReferenceTreeError : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 198
          }
        ],
        "key.bodylength" : 284,
        "key.bodyoffset" : 237,
        "key.doc.column" : 13,
        "key.doc.comment" : "Error for when you do bad things to a `ReferenceTreeProtocol`-conforming type.",
        "key.doc.declaration" : "public enum ReferenceTreeError : Error",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"12\" column=\"13\"><Name>ReferenceTreeError<\/Name><USR>s:14DataStructures18ReferenceTreeErrorO<\/USR><Declaration>public enum ReferenceTreeError : Error<\/Declaration><CommentParts><Abstract><Para>Error for when you do bad things to a <codeVoice>ReferenceTreeProtocol<\/codeVoice>-conforming type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 12,
        "key.doc.name" : "ReferenceTreeError",
        "key.doc.type" : "Other",
        "key.doclength" : 83,
        "key.docoffset" : 115,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 5,
            "key.offset" : 230
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>ReferenceTreeError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Error"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 317,
        "key.name" : "ReferenceTreeError",
        "key.namelength" : 18,
        "key.nameoffset" : 210,
        "key.offset" : 205,
        "key.parsed_declaration" : "public enum ReferenceTreeError: Error",
        "key.parsed_scope.end" : 22,
        "key.parsed_scope.start" : 12,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 19,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 313,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case insertionError<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "Error thrown when trying to insert a Node at an invalid index",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"15\" column=\"10\"><Name>insertionError<\/Name><USR>s:14DataStructures18ReferenceTreeErrorO09insertionE0yA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Error thrown when trying to insert a Node at an invalid index<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 15,
                "key.doc.name" : "insertionError",
                "key.doc.type" : "Other",
                "key.doclength" : 66,
                "key.docoffset" : 243,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>insertionError<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 14,
                "key.name" : "insertionError",
                "key.namelength" : 14,
                "key.nameoffset" : 318,
                "key.offset" : 318,
                "key.parsed_declaration" : "case insertionError",
                "key.parsed_scope.end" : 15,
                "key.parsed_scope.start" : 15,
                "key.typename" : "(ReferenceTreeError.Type) -> ReferenceTreeError",
                "key.typeusr" : "$Sy14DataStructures18ReferenceTreeErrorOACmcD",
                "key.usr" : "s:14DataStructures18ReferenceTreeErrorO09insertionE0yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 17,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 410,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case removalError<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "Error thrown when trying to remove a Node from an invalid index",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"18\" column=\"10\"><Name>removalError<\/Name><USR>s:14DataStructures18ReferenceTreeErrorO07removalE0yA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Error thrown when trying to remove a Node from an invalid index<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 18,
                "key.doc.name" : "removalError",
                "key.doc.type" : "Other",
                "key.doclength" : 68,
                "key.docoffset" : 338,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>removalError<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 12,
                "key.name" : "removalError",
                "key.namelength" : 12,
                "key.nameoffset" : 415,
                "key.offset" : 415,
                "key.parsed_declaration" : "case removalError",
                "key.parsed_scope.end" : 18,
                "key.parsed_scope.start" : 18,
                "key.typename" : "(ReferenceTreeError.Type) -> ReferenceTreeError",
                "key.typeusr" : "$Sy14DataStructures18ReferenceTreeErrorOACmcD",
                "key.usr" : "s:14DataStructures18ReferenceTreeErrorO07removalE0yA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 17,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 503,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case nodeNotFound<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "Error thrown when trying to insert a Node at an invalid index",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"21\" column=\"10\"><Name>nodeNotFound<\/Name><USR>s:14DataStructures18ReferenceTreeErrorO12nodeNotFoundyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Error thrown when trying to insert a Node at an invalid index<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 21,
                "key.doc.name" : "nodeNotFound",
                "key.doc.type" : "Other",
                "key.doclength" : 66,
                "key.docoffset" : 433,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>nodeNotFound<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 12,
                "key.name" : "nodeNotFound",
                "key.namelength" : 12,
                "key.nameoffset" : 508,
                "key.offset" : 508,
                "key.parsed_declaration" : "case nodeNotFound",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.typename" : "(ReferenceTreeError.Type) -> ReferenceTreeError",
                "key.typeusr" : "$Sy14DataStructures18ReferenceTreeErrorOACmcD",
                "key.usr" : "s:14DataStructures18ReferenceTreeErrorO12nodeNotFoundyA2CmF"
              }
            ]
          }
        ],
        "key.typename" : "ReferenceTreeError.Type",
        "key.typeusr" : "$S14DataStructures18ReferenceTreeErrorOmD",
        "key.usr" : "s:14DataStructures18ReferenceTreeErrorO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol ReferenceTreeProtocol : AnyObject<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 692
          }
        ],
        "key.bodylength" : 2510,
        "key.bodyoffset" : 738,
        "key.doc.column" : 17,
        "key.doc.comment" : "Interface for nodes in tree structures.\n\nProvides default implementations for many tree structure operations.\n\n> Useable only by `final class` types.",
        "key.doc.declaration" : "public protocol ReferenceTreeProtocol : AnyObject",
        "key.doc.discussion" : [
          {
            "Para" : "Provides default implementations for many tree structure operations."
          },
          {
            "Para" : "Useable only by `final class` types."
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"29\" column=\"17\"><Name>ReferenceTreeProtocol<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP<\/USR><Declaration>public protocol ReferenceTreeProtocol : AnyObject<\/Declaration><CommentParts><Abstract><Para>Interface for nodes in tree structures.<\/Para><\/Abstract><Discussion><Para>Provides default implementations for many tree structure operations.<\/Para><Para>Useable only by <codeVoice>final class<\/codeVoice> types.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 29,
        "key.doc.name" : "ReferenceTreeProtocol",
        "key.doc.type" : "Class",
        "key.doclength" : 168,
        "key.docoffset" : 524,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 5,
            "key.offset" : 731
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>ReferenceTreeProtocol<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "class"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 2550,
        "key.name" : "ReferenceTreeProtocol",
        "key.namelength" : 21,
        "key.nameoffset" : 708,
        "key.offset" : 699,
        "key.parsed_declaration" : "public protocol ReferenceTreeProtocol: class",
        "key.parsed_scope.end" : 109,
        "key.parsed_scope.start" : 29,
        "key.runtime_name" : "_TtP21ReferenceTreeProtocol21ReferenceTreeProtocol_",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 747
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var parent: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>? { get set }<\/Declaration>",
            "key.bodylength" : 9,
            "key.bodyoffset" : 820,
            "key.doc.column" : 9,
            "key.doc.comment" : "Parent node.",
            "key.doc.declaration" : "var parent: Self? { get set }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"34\" column=\"9\"><Name>parent<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP6parentxSgvp<\/USR><Declaration>var parent: Self? { get set }<\/Declaration><CommentParts><Abstract><Para>Parent node.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 34,
            "key.doc.name" : "parent",
            "key.doc.type" : "Other",
            "key.doclength" : 17,
            "key.docoffset" : 780,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>parent<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "parent",
            "key.namelength" : 6,
            "key.nameoffset" : 805,
            "key.offset" : 801,
            "key.parsed_declaration" : "var parent: Self?",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 34,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Self?",
            "key.typeusr" : "$SxSgD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP6parentxSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var children: [<Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>] { get set }<\/Declaration>",
            "key.bodylength" : 9,
            "key.bodyoffset" : 879,
            "key.doc.column" : 9,
            "key.doc.comment" : "Child nodes.",
            "key.doc.declaration" : "var children: [Self] { get set }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"37\" column=\"9\"><Name>children<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP8childrenSayxGvp<\/USR><Declaration>var children: [Self] { get set }<\/Declaration><CommentParts><Abstract><Para>Child nodes.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 37,
            "key.doc.name" : "children",
            "key.doc.type" : "Other",
            "key.doclength" : 17,
            "key.docoffset" : 836,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>children<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.name" : "children",
            "key.namelength" : 8,
            "key.nameoffset" : 861,
            "key.offset" : 857,
            "key.parsed_declaration" : "var children: [Self]",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 37,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[Self]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP8childrenSayxGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var isLeaf: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 985,
            "key.doc.column" : 9,
            "key.doc.comment" : "- returns: `true` if there are no children. Otherwise, `false`.",
            "key.doc.declaration" : "var isLeaf: Bool { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"40\" column=\"9\"><Name>isLeaf<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP6isLeafSbvp<\/USR><Declaration>var isLeaf: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there are no children. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 40,
            "key.doc.name" : "isLeaf",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there are no children. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 68,
            "key.docoffset" : 895,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isLeaf<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "isLeaf",
            "key.namelength" : 6,
            "key.nameoffset" : 971,
            "key.offset" : 967,
            "key.parsed_declaration" : "var isLeaf: Bool",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 40,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE6isLeafSbvp\">isLeaf<\/RelatedName>"
              }
            ],
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP6isLeafSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var isContainer: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 1098,
            "key.doc.column" : 9,
            "key.doc.comment" : "- returns: `true` if there is at least one child. Otherwise, `false`.",
            "key.doc.declaration" : "var isContainer: Bool { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"43\" column=\"9\"><Name>isContainer<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP11isContainerSbvp<\/USR><Declaration>var isContainer: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there is at least one child. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 43,
            "key.doc.name" : "isContainer",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there is at least one child. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 74,
            "key.docoffset" : 997,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isContainer<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "isContainer",
            "key.namelength" : 11,
            "key.nameoffset" : 1079,
            "key.offset" : 1075,
            "key.parsed_declaration" : "var isContainer: Bool",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 43,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE11isContainerSbvp\">isContainer<\/RelatedName>"
              }
            ],
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP11isContainerSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var isRoot: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 1197,
            "key.doc.column" : 9,
            "key.doc.comment" : "- returns: `true` if there is no parent. Otherwise, `false`.",
            "key.doc.declaration" : "var isRoot: Bool { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"46\" column=\"9\"><Name>isRoot<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP6isRootSbvp<\/USR><Declaration>var isRoot: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there is no parent. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 46,
            "key.doc.name" : "isRoot",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there is no parent. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 65,
            "key.docoffset" : 1110,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isRoot<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "isRoot",
            "key.namelength" : 6,
            "key.nameoffset" : 1183,
            "key.offset" : 1179,
            "key.parsed_declaration" : "var isRoot: Bool",
            "key.parsed_scope.end" : 46,
            "key.parsed_scope.start" : 46,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE6isRootSbvp\">isRoot<\/RelatedName>"
              }
            ],
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP6isRootSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var leaves: [<Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>] { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 1249,
            "key.doc.column" : 9,
            "key.doc.comment" : "All leaves.",
            "key.doc.declaration" : "var leaves: [Self] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"49\" column=\"9\"><Name>leaves<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP6leavesSayxGvp<\/USR><Declaration>var leaves: [Self] { get }<\/Declaration><CommentParts><Abstract><Para>All leaves.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 49,
            "key.doc.name" : "leaves",
            "key.doc.type" : "Other",
            "key.doclength" : 16,
            "key.docoffset" : 1209,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>leaves<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.name" : "leaves",
            "key.namelength" : 6,
            "key.nameoffset" : 1233,
            "key.offset" : 1229,
            "key.parsed_declaration" : "var leaves: [Self]",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 49,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE6leavesSayxGvp\">leaves<\/RelatedName>"
              }
            ],
            "key.typename" : "[Self]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP6leavesSayxGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var root: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 1291,
            "key.doc.column" : 9,
            "key.doc.comment" : "Root.",
            "key.doc.declaration" : "var root: Self { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"52\" column=\"9\"><Name>root<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP4rootxvp<\/USR><Declaration>var root: Self { get }<\/Declaration><CommentParts><Abstract><Para>Root.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 52,
            "key.doc.name" : "root",
            "key.doc.type" : "Other",
            "key.doclength" : 10,
            "key.docoffset" : 1261,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>root<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "root",
            "key.namelength" : 4,
            "key.nameoffset" : 1279,
            "key.offset" : 1275,
            "key.parsed_declaration" : "var root: Self",
            "key.parsed_scope.end" : 52,
            "key.parsed_scope.start" : 52,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4rootxvp\">root<\/RelatedName>"
              }
            ],
            "key.typename" : "Self",
            "key.typeusr" : "$SxD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP4rootxvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var pathToRoot: [<Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>] { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 1406,
            "key.doc.column" : 9,
            "key.doc.comment" : "Array of all Node objects between (and including) `self` up to `root`.",
            "key.doc.declaration" : "var pathToRoot: [Self] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"55\" column=\"9\"><Name>pathToRoot<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP10pathToRootSayxGvp<\/USR><Declaration>var pathToRoot: [Self] { get }<\/Declaration><CommentParts><Abstract><Para>Array of all Node objects between (and including) <codeVoice>self<\/codeVoice> up to <codeVoice>root<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 55,
            "key.doc.name" : "pathToRoot",
            "key.doc.type" : "Other",
            "key.doclength" : 75,
            "key.docoffset" : 1303,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>pathToRoot<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.name" : "pathToRoot",
            "key.namelength" : 10,
            "key.nameoffset" : 1386,
            "key.offset" : 1382,
            "key.parsed_declaration" : "var pathToRoot: [Self]",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 55,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE10pathToRootSayxGvp\">pathToRoot<\/RelatedName>"
              }
            ],
            "key.typename" : "[Self]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP10pathToRootSayxGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var depth: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 1457,
            "key.doc.column" : 9,
            "key.doc.comment" : "Depth of node.",
            "key.doc.declaration" : "var depth: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"58\" column=\"9\"><Name>depth<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP5depthSivp<\/USR><Declaration>var depth: Int { get }<\/Declaration><CommentParts><Abstract><Para>Depth of node.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 58,
            "key.doc.name" : "depth",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 1418,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>depth<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "depth",
            "key.namelength" : 5,
            "key.nameoffset" : 1445,
            "key.offset" : 1441,
            "key.parsed_declaration" : "var depth: Int",
            "key.parsed_scope.end" : 58,
            "key.parsed_scope.start" : 58,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE5depthSivp\">depth<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP5depthSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var height: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 1510,
            "key.doc.column" : 9,
            "key.doc.comment" : "Height of node.",
            "key.doc.declaration" : "var height: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"61\" column=\"9\"><Name>height<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP6heightSivp<\/USR><Declaration>var height: Int { get }<\/Declaration><CommentParts><Abstract><Para>Height of node.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 61,
            "key.doc.name" : "height",
            "key.doc.type" : "Other",
            "key.doclength" : 20,
            "key.docoffset" : 1469,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>height<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 23,
            "key.name" : "height",
            "key.namelength" : 6,
            "key.nameoffset" : 1497,
            "key.offset" : 1493,
            "key.parsed_declaration" : "var height: Int",
            "key.parsed_scope.end" : 61,
            "key.parsed_scope.start" : 61,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE6heightSivp\">height<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP6heightSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var heightOfTree: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 1580,
            "key.doc.column" : 9,
            "key.doc.comment" : "Height of containing tree.",
            "key.doc.declaration" : "var heightOfTree: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"64\" column=\"9\"><Name>heightOfTree<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP08heightOfD0Sivp<\/USR><Declaration>var heightOfTree: Int { get }<\/Declaration><CommentParts><Abstract><Para>Height of containing tree.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 64,
            "key.doc.name" : "heightOfTree",
            "key.doc.type" : "Other",
            "key.doclength" : 31,
            "key.docoffset" : 1522,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>heightOfTree<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "heightOfTree",
            "key.namelength" : 12,
            "key.nameoffset" : 1561,
            "key.offset" : 1557,
            "key.parsed_declaration" : "var heightOfTree: Int",
            "key.parsed_scope.end" : 64,
            "key.parsed_scope.start" : 64,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE08heightOfD0Sivp\">heightOfTree<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP08heightOfD0Sivp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1595
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func addChild(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>)<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Append a child node.",
            "key.doc.declaration" : "func addChild(_ node: Self)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"69\" column=\"10\"><Name>addChild(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP8addChildyyxF<\/USR><Declaration>func addChild(_ node: Self)<\/Declaration><CommentParts><Abstract><Para>Append a child node.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 69,
            "key.doc.name" : "addChild(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 25,
            "key.docoffset" : 1625,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 27,
            "key.name" : "addChild(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 1659,
            "key.offset" : 1654,
            "key.parsed_declaration" : "func addChild(_ node: Self)",
            "key.parsed_scope.end" : 69,
            "key.parsed_scope.start" : 69,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE8addChildyyxF\">addChild(_: Self)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) -> ()",
            "key.typeusr" : "$SyyxcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP8addChildyyxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func addChildren(_ nodes: [<Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>])<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Append an array of Child nodes.",
            "key.doc.declaration" : "func addChildren(_ nodes: [Self])",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"72\" column=\"10\"><Name>addChildren(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP11addChildrenyySayxGF<\/USR><Declaration>func addChildren(_ nodes: [Self])<\/Declaration><CommentParts><Abstract><Para>Append an array of Child nodes.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 72,
            "key.doc.name" : "addChildren(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 36,
            "key.docoffset" : 1687,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addChildren<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>nodes<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 33,
            "key.name" : "addChildren(_:)",
            "key.namelength" : 28,
            "key.nameoffset" : 1732,
            "key.offset" : 1727,
            "key.parsed_declaration" : "func addChildren(_ nodes: [Self])",
            "key.parsed_scope.end" : 72,
            "key.parsed_scope.start" : 72,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE11addChildrenyySayxGF\">addChildren(_: [Self])<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> ([Self]) -> ()",
            "key.typeusr" : "$SyySayxGcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP11addChildrenyySayxGF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func insertChild(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>, at index: <Type usr=\"s:Si\">Int<\/Type>) throws<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Insert the given child node at the given `index`.\n\n- throws: `ReferenceTreeError.Error.insertionError` if the given `index` is out of bounds.",
            "key.doc.declaration" : "func insertChild(_ node: Self, at index: Int) throws",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"77\" column=\"10\"><Name>insertChild(_:at:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP11insertChild_2atyx_SitKF<\/USR><Declaration>func insertChild(_ node: Self, at index: Int) throws<\/Declaration><CommentParts><Abstract><Para>Insert the given child node at the given <codeVoice>index<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>ReferenceTreeError.Error.insertionError<\/codeVoice> if the given <codeVoice>index<\/codeVoice> is out of bounds.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 77,
            "key.doc.name" : "insertChild(_:at:)",
            "key.doc.type" : "Function",
            "key.doclength" : 161,
            "key.docoffset" : 1766,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>insertChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 52,
            "key.name" : "insertChild(_:at:)",
            "key.namelength" : 40,
            "key.nameoffset" : 1936,
            "key.offset" : 1931,
            "key.parsed_declaration" : "func insertChild(_ node: Self, at index: Int) throws",
            "key.parsed_scope.end" : 77,
            "key.parsed_scope.start" : 77,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE11insertChild_2atyx_SitKF\">insertChild(_: Self, at: Int) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self, Int) throws -> ()",
            "key.typeusr" : "$S_2atyx_SitKcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP11insertChild_2atyx_SitKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func removeChild(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>) throws<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Remove the given child node.\n\n- throws: `ReferenceTreeError.Error.removalError` if the given node is not contained herein.",
            "key.doc.declaration" : "func removeChild(_ node: Self) throws",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"82\" column=\"10\"><Name>removeChild(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP11removeChildyyxKF<\/USR><Declaration>func removeChild(_ node: Self) throws<\/Declaration><CommentParts><Abstract><Para>Remove the given child node.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>ReferenceTreeError.Error.removalError<\/codeVoice> if the given node is not contained herein.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 82,
            "key.doc.name" : "removeChild(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 142,
            "key.docoffset" : 1989,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>removeChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 37,
            "key.name" : "removeChild(_:)",
            "key.namelength" : 25,
            "key.nameoffset" : 2140,
            "key.offset" : 2135,
            "key.parsed_declaration" : "func removeChild(_ node: Self) throws",
            "key.parsed_scope.end" : 82,
            "key.parsed_scope.start" : 82,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP11removeChild2atySi_tKF\">removeChild(at: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE11removeChildyyxKF\">removeChild(_: Self) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE11removeChild2atySi_tKF\">removeChild(at: Int) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) throws -> ()",
            "key.typeusr" : "$SyyxKcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP11removeChildyyxKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func removeChild(at index: <Type usr=\"s:Si\">Int<\/Type>) throws<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Remove the child node at the given `index`.\n\n- throws: `ReferenceTreeError.Error.removalError` if the given `index` is out of bounds.",
            "key.doc.declaration" : "func removeChild(at index: Int) throws",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"87\" column=\"10\"><Name>removeChild(at:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP11removeChild2atySi_tKF<\/USR><Declaration>func removeChild(at index: Int) throws<\/Declaration><CommentParts><Abstract><Para>Remove the child node at the given <codeVoice>index<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>ReferenceTreeError.Error.removalError<\/codeVoice> if the given <codeVoice>index<\/codeVoice> is out of bounds.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 87,
            "key.doc.name" : "removeChild(at:)",
            "key.doc.type" : "Function",
            "key.doclength" : 153,
            "key.docoffset" : 2178,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>removeChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 38,
            "key.name" : "removeChild(at:)",
            "key.namelength" : 26,
            "key.nameoffset" : 2340,
            "key.offset" : 2335,
            "key.parsed_declaration" : "func removeChild(at index: Int) throws",
            "key.parsed_scope.end" : 87,
            "key.parsed_scope.start" : 87,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP11removeChildyyxKF\">removeChild(_: Self) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE11removeChildyyxKF\">removeChild(_: Self) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE11removeChild2atySi_tKF\">removeChild(at: Int) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Int) throws -> ()",
            "key.typeusr" : "$S2atySi_tKcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP11removeChild2atySi_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func child(at index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; `Self`?<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: Child node at the given `index`, if present. Otherwise, `nil`.",
            "key.doc.declaration" : "func child(at index: Int) -> `Self`?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"90\" column=\"10\"><Name>child(at:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP5child2atxSgSi_tF<\/USR><Declaration>func child(at index: Int) -&gt; `Self`?<\/Declaration><CommentParts><ResultDiscussion><Para>Child node at the given <codeVoice>index<\/codeVoice>, if present. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 90,
            "key.doc.name" : "child(at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Child node at the given `index`, if present. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 78,
            "key.docoffset" : 2379,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>child<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>`Self`?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 34,
            "key.name" : "child(at:)",
            "key.namelength" : 20,
            "key.nameoffset" : 2466,
            "key.offset" : 2461,
            "key.parsed_declaration" : "func child(at index: Int) -> Self?",
            "key.parsed_scope.end" : 90,
            "key.parsed_scope.start" : 90,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE5child2atxSgSi_tF\">child(at: Int) -&gt; Self?<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Int) -> Self?",
            "key.typeusr" : "$S2atxSgSi_tcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP5child2atxSgSi_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func leaf(at index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; `Self`?<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: Returns the leaf node at the given `index`, if present. Otherwise, `nil`.",
            "key.doc.declaration" : "func leaf(at index: Int) -> `Self`?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"93\" column=\"10\"><Name>leaf(at:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP4leaf2atxSgSi_tF<\/USR><Declaration>func leaf(at index: Int) -&gt; `Self`?<\/Declaration><CommentParts><ResultDiscussion><Para>Returns the leaf node at the given <codeVoice>index<\/codeVoice>, if present. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 93,
            "key.doc.name" : "leaf(at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Returns the leaf node at the given `index`, if present. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 89,
            "key.docoffset" : 2501,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>leaf<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>`Self`?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 33,
            "key.name" : "leaf(at:)",
            "key.namelength" : 19,
            "key.nameoffset" : 2599,
            "key.offset" : 2594,
            "key.parsed_declaration" : "func leaf(at index: Int) -> Self?",
            "key.parsed_scope.end" : 93,
            "key.parsed_scope.start" : 93,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4leaf2atxSgSi_tF\">leaf(at: Int) -&gt; Self?<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Int) -> Self?",
            "key.typeusr" : "$S2atxSgSi_tcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP4leaf2atxSgSi_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func hasChild(_ child: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: `true` if the given node is contained herein. Otherwise, `false`.",
            "key.doc.declaration" : "func hasChild(_ child: Self) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"96\" column=\"10\"><Name>hasChild(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP8hasChildySbxF<\/USR><Declaration>func hasChild(_ child: Self) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is contained herein. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 96,
            "key.doc.name" : "hasChild(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is contained herein. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 81,
            "key.docoffset" : 2633,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>child<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 36,
            "key.name" : "hasChild(_:)",
            "key.namelength" : 23,
            "key.nameoffset" : 2723,
            "key.offset" : 2718,
            "key.parsed_declaration" : "func hasChild(_ child: Self) -> Bool",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 96,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE8hasChildySbxF\">hasChild(_: Self) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) -> Bool",
            "key.typeusr" : "$SySbxcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP8hasChildySbxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func hasLeaf(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: `true` if the given node is a leaf. Otherwise, `false`.",
            "key.doc.declaration" : "func hasLeaf(_ node: Self) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"99\" column=\"10\"><Name>hasLeaf(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP7hasLeafySbxF<\/USR><Declaration>func hasLeaf(_ node: Self) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is a leaf. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 99,
            "key.doc.name" : "hasLeaf(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is a leaf. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 71,
            "key.docoffset" : 2760,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasLeaf<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 34,
            "key.name" : "hasLeaf(_:)",
            "key.namelength" : 21,
            "key.nameoffset" : 2840,
            "key.offset" : 2835,
            "key.parsed_declaration" : "func hasLeaf(_ node: Self) -> Bool",
            "key.parsed_scope.end" : 99,
            "key.parsed_scope.start" : 99,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE7hasLeafySbxF\">hasLeaf(_: Self) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) -> Bool",
            "key.typeusr" : "$SySbxcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP7hasLeafySbxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func hasAncestor(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: `true` if the given node is an ancestor. Otherwise, `false`.",
            "key.doc.declaration" : "func hasAncestor(_ node: Self) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"102\" column=\"10\"><Name>hasAncestor(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP11hasAncestorySbxF<\/USR><Declaration>func hasAncestor(_ node: Self) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is an ancestor. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 102,
            "key.doc.name" : "hasAncestor(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is an ancestor. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 76,
            "key.docoffset" : 2875,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasAncestor<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 38,
            "key.name" : "hasAncestor(_:)",
            "key.namelength" : 25,
            "key.nameoffset" : 2960,
            "key.offset" : 2955,
            "key.parsed_declaration" : "func hasAncestor(_ node: Self) -> Bool",
            "key.parsed_scope.end" : 102,
            "key.parsed_scope.start" : 102,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE11hasAncestorySbxF\">hasAncestor(_: Self) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) -> Bool",
            "key.typeusr" : "$SySbxcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP11hasAncestorySbxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func ancestor(at distance: <Type usr=\"s:Si\">Int<\/Type>) -&gt; `Self`?<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: Ancestor at the given distance, if present. Otherwise, `nil`.",
            "key.doc.declaration" : "func ancestor(at distance: Int) -> `Self`?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"105\" column=\"10\"><Name>ancestor(at:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP8ancestor2atxSgSi_tF<\/USR><Declaration>func ancestor(at distance: Int) -&gt; `Self`?<\/Declaration><CommentParts><ResultDiscussion><Para>Ancestor at the given distance, if present. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 105,
            "key.doc.name" : "ancestor(at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Ancestor at the given distance, if present. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 77,
            "key.docoffset" : 2999,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ancestor<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>distance<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>`Self`?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 40,
            "key.name" : "ancestor(at:)",
            "key.namelength" : 26,
            "key.nameoffset" : 3085,
            "key.offset" : 3080,
            "key.parsed_declaration" : "func ancestor(at distance: Int) -> Self?",
            "key.parsed_scope.end" : 105,
            "key.parsed_scope.start" : 105,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE8ancestor2atxSgSi_tF\">ancestor(at: Int) -&gt; Self?<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Int) -> Self?",
            "key.typeusr" : "$S2atxSgSi_tcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP8ancestor2atxSgSi_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func hasDescendent(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: `true` if the given node is a descendent. Otherwise, `false`.",
            "key.doc.declaration" : "func hasDescendent(_ node: Self) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"108\" column=\"10\"><Name>hasDescendent(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP13hasDescendentySbxF<\/USR><Declaration>func hasDescendent(_ node: Self) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is a descendent. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 108,
            "key.doc.name" : "hasDescendent(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is a descendent. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 77,
            "key.docoffset" : 3126,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasDescendent<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 40,
            "key.name" : "hasDescendent(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 3212,
            "key.offset" : 3207,
            "key.parsed_declaration" : "func hasDescendent(_ node: Self) -> Bool",
            "key.parsed_scope.end" : 108,
            "key.parsed_scope.start" : 108,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE13hasDescendentySbxF\">hasDescendent(_: Self) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) -> Bool",
            "key.typeusr" : "$SySbxcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP13hasDescendentySbxF"
          }
        ],
        "key.typename" : "ReferenceTreeProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures21ReferenceTreeProtocol_pmD",
        "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol ReferenceTreeProtocol : AnyObject<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3251
          }
        ],
        "key.bodylength" : 5549,
        "key.bodyoffset" : 3291,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol ReferenceTreeProtocol : AnyObject",
        "key.doc.discussion" : [
          {
            "Para" : "Provides default implementations for many tree structure operations."
          },
          {
            "Para" : "Useable only by `final class` types."
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"29\" column=\"17\"><Name>ReferenceTreeProtocol<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolP<\/USR><Declaration>public protocol ReferenceTreeProtocol : AnyObject<\/Declaration><CommentParts><Abstract><Para>Interface for nodes in tree structures.<\/Para><\/Abstract><Discussion><Para>Provides default implementations for many tree structure operations.<\/Para><Para>Useable only by <codeVoice>final class<\/codeVoice> types.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 29,
        "key.doc.name" : "ReferenceTreeProtocol",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>ReferenceTreeProtocol<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 5583,
        "key.name" : "ReferenceTreeProtocol",
        "key.namelength" : 21,
        "key.nameoffset" : 3268,
        "key.offset" : 3258,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func addChild(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>)<\/Declaration>",
            "key.bodylength" : 62,
            "key.bodyoffset" : 3370,
            "key.doc.column" : 10,
            "key.doc.comment" : "Add the given `node` to `children`.",
            "key.doc.declaration" : "func addChild(_ node: Self)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"114\" column=\"10\"><Name>addChild(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE8addChildyyxF<\/USR><Declaration>func addChild(_ node: Self)<\/Declaration><CommentParts><Abstract><Para>Add the given <codeVoice>node<\/codeVoice> to <codeVoice>children<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 114,
            "key.doc.name" : "addChild(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 40,
            "key.docoffset" : 3297,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 92,
            "key.name" : "addChild(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 3346,
            "key.offset" : 3341,
            "key.parsed_declaration" : "func addChild(_ node: Self)",
            "key.parsed_scope.end" : 117,
            "key.parsed_scope.start" : 114,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP8addChildyyxF\">addChild(_: Self)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) -> ()",
            "key.typeusr" : "$SyyxcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE8addChildyyxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func addChildren(_ nodes: [<Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>])<\/Declaration>",
            "key.bodylength" : 37,
            "key.bodyoffset" : 3522,
            "key.doc.column" : 10,
            "key.doc.comment" : "Append the given `nodes` to `children`.",
            "key.doc.declaration" : "func addChildren(_ nodes: [Self])",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"120\" column=\"10\"><Name>addChildren(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE11addChildrenyySayxGF<\/USR><Declaration>func addChildren(_ nodes: [Self])<\/Declaration><CommentParts><Abstract><Para>Append the given <codeVoice>nodes<\/codeVoice> to <codeVoice>children<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 120,
            "key.doc.name" : "addChildren(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 44,
            "key.docoffset" : 3439,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addChildren<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>nodes<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 73,
            "key.name" : "addChildren(_:)",
            "key.namelength" : 28,
            "key.nameoffset" : 3492,
            "key.offset" : 3487,
            "key.parsed_declaration" : "func addChildren(_ nodes: [Self])",
            "key.parsed_scope.end" : 122,
            "key.parsed_scope.start" : 120,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP11addChildrenyySayxGF\">addChildren(_: [Self])<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> ([Self]) -> ()",
            "key.typeusr" : "$SyySayxGcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE11addChildrenyySayxGF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func insertChild(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>, at index: <Type usr=\"s:Si\">Int<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 185,
            "key.bodyoffset" : 3779,
            "key.doc.column" : 10,
            "key.doc.comment" : "Insert the given `node` at the given `index` of `children`.\n\n- throws: `ReferenceTreeError.insertionError` if `index` is out of bounds.",
            "key.doc.declaration" : "func insertChild(_ node: Self, at index: Int) throws",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"127\" column=\"10\"><Name>insertChild(_:at:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE11insertChild_2atyx_SitKF<\/USR><Declaration>func insertChild(_ node: Self, at index: Int) throws<\/Declaration><CommentParts><Abstract><Para>Insert the given <codeVoice>node<\/codeVoice> at the given <codeVoice>index<\/codeVoice> of <codeVoice>children<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>ReferenceTreeError.insertionError<\/codeVoice> if <codeVoice>index<\/codeVoice> is out of bounds.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 127,
            "key.doc.name" : "insertChild(_:at:)",
            "key.doc.type" : "Function",
            "key.doclength" : 155,
            "key.docoffset" : 3566,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>insertChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 240,
            "key.name" : "insertChild(_:at:)",
            "key.namelength" : 40,
            "key.nameoffset" : 3730,
            "key.offset" : 3725,
            "key.parsed_declaration" : "func insertChild(_ node: Self, at index: Int) throws",
            "key.parsed_scope.end" : 135,
            "key.parsed_scope.start" : 127,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP11insertChild_2atyx_SitKF\">insertChild(_: Self, at: Int) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self, Int) throws -> ()",
            "key.typeusr" : "$S_2atyx_SitKcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE11insertChild_2atyx_SitKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func removeChild(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 174,
            "key.bodyoffset" : 4166,
            "key.doc.column" : 10,
            "key.doc.comment" : "Remove the given `node` from `children`.\n\n- throws: `ReferenceTreeError.removalError` if the given `node` is not held in `children`.",
            "key.doc.declaration" : "func removeChild(_ node: Self) throws",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"140\" column=\"10\"><Name>removeChild(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE11removeChildyyxKF<\/USR><Declaration>func removeChild(_ node: Self) throws<\/Declaration><CommentParts><Abstract><Para>Remove the given <codeVoice>node<\/codeVoice> from <codeVoice>children<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>ReferenceTreeError.removalError<\/codeVoice> if the given <codeVoice>node<\/codeVoice> is not held in <codeVoice>children<\/codeVoice>.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 140,
            "key.doc.name" : "removeChild(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 152,
            "key.docoffset" : 3971,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>removeChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 214,
            "key.name" : "removeChild(_:)",
            "key.namelength" : 25,
            "key.nameoffset" : 4132,
            "key.offset" : 4127,
            "key.parsed_declaration" : "func removeChild(_ node: Self) throws",
            "key.parsed_scope.end" : 147,
            "key.parsed_scope.start" : 140,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP11removeChildyyxKF\">removeChild(_: Self) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP11removeChild2atySi_tKF\">removeChild(at: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE11removeChild2atySi_tKF\">removeChild(at: Int) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) throws -> ()",
            "key.typeusr" : "$SyyxKcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE11removeChildyyxKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func removeChild(at index: <Type usr=\"s:Si\">Int<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 156,
            "key.bodyoffset" : 4522,
            "key.doc.column" : 10,
            "key.doc.comment" : "Remove the node at the given `index`.\n\n- throws: `ReferenceTreeError.removalError` if `index` is out of bounds.",
            "key.doc.declaration" : "func removeChild(at index: Int) throws",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"152\" column=\"10\"><Name>removeChild(at:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE11removeChild2atySi_tKF<\/USR><Declaration>func removeChild(at index: Int) throws<\/Declaration><CommentParts><Abstract><Para>Remove the node at the given <codeVoice>index<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>ReferenceTreeError.removalError<\/codeVoice> if <codeVoice>index<\/codeVoice> is out of bounds.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 152,
            "key.doc.name" : "removeChild(at:)",
            "key.doc.type" : "Function",
            "key.doclength" : 131,
            "key.docoffset" : 4347,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>removeChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 197,
            "key.name" : "removeChild(at:)",
            "key.namelength" : 26,
            "key.nameoffset" : 4487,
            "key.offset" : 4482,
            "key.parsed_declaration" : "func removeChild(at index: Int) throws",
            "key.parsed_scope.end" : 159,
            "key.parsed_scope.start" : 152,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP11removeChildyyxKF\">removeChild(_: Self) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP11removeChild2atySi_tKF\">removeChild(at: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE11removeChildyyxKF\">removeChild(_: Self) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Int) throws -> ()",
            "key.typeusr" : "$S2atySi_tKcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE11removeChild2atySi_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func hasChild(_ child: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.bodylength" : 55,
            "key.bodyoffset" : 4808,
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: `true` if the given node is contained herein. Otherwise, `false`.",
            "key.doc.declaration" : "func hasChild(_ child: Self) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"162\" column=\"10\"><Name>hasChild(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE8hasChildySbxF<\/USR><Declaration>func hasChild(_ child: Self) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is contained herein. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 162,
            "key.doc.name" : "hasChild(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is contained herein. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 81,
            "key.docoffset" : 4685,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasChild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>child<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 94,
            "key.name" : "hasChild(_:)",
            "key.namelength" : 23,
            "key.nameoffset" : 4775,
            "key.offset" : 4770,
            "key.parsed_declaration" : "func hasChild(_ child: Self) -> Bool",
            "key.parsed_scope.end" : 164,
            "key.parsed_scope.start" : 162,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP8hasChildySbxF\">hasChild(_: Self) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) -> Bool",
            "key.typeusr" : "$SySbxcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE8hasChildySbxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func child(at index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>?<\/Declaration>",
            "key.bodylength" : 125,
            "key.bodyoffset" : 4988,
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: Child node at the given `index`, if present. Otherwise, `nil`.",
            "key.doc.declaration" : "func child(at index: Int) -> Self?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"167\" column=\"10\"><Name>child(at:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE5child2atxSgSi_tF<\/USR><Declaration>func child(at index: Int) -&gt; Self?<\/Declaration><CommentParts><ResultDiscussion><Para>Child node at the given <codeVoice>index<\/codeVoice>, if present. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 167,
            "key.doc.name" : "child(at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Child node at the given `index`, if present. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 78,
            "key.docoffset" : 4870,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>child<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 162,
            "key.name" : "child(at:)",
            "key.namelength" : 20,
            "key.nameoffset" : 4957,
            "key.offset" : 4952,
            "key.parsed_declaration" : "func child(at index: Int) -> Self?",
            "key.parsed_scope.end" : 174,
            "key.parsed_scope.start" : 167,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP5child2atxSgSi_tF\">child(at: Int) -&gt; `Self`?<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Int) -> Self?",
            "key.typeusr" : "$S2atxSgSi_tcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE5child2atxSgSi_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var isLeaf: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 40,
            "key.bodyoffset" : 5210,
            "key.doc.column" : 9,
            "key.doc.comment" : "- returns: `true` if there are no children. Otherwise, `false`.",
            "key.doc.declaration" : "var isLeaf: Bool { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"177\" column=\"9\"><Name>isLeaf<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE6isLeafSbvp<\/USR><Declaration>var isLeaf: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there are no children. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 177,
            "key.doc.name" : "isLeaf",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there are no children. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 68,
            "key.docoffset" : 5120,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isLeaf<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 59,
            "key.name" : "isLeaf",
            "key.namelength" : 6,
            "key.nameoffset" : 5196,
            "key.offset" : 5192,
            "key.parsed_declaration" : "var isLeaf: Bool",
            "key.parsed_scope.end" : 179,
            "key.parsed_scope.start" : 177,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP6isLeafSbvp\">isLeaf<\/RelatedName>"
              }
            ],
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE6isLeafSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var leaves: [<Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>] { get }<\/Declaration>",
            "key.bodylength" : 410,
            "key.bodyoffset" : 5308,
            "key.doc.column" : 9,
            "key.doc.comment" : "- returns: All leaves.",
            "key.doc.declaration" : "var leaves: [Self] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"182\" column=\"9\"><Name>leaves<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE6leavesSayxGvp<\/USR><Declaration>var leaves: [Self] { get }<\/Declaration><CommentParts><ResultDiscussion><Para>All leaves.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 182,
            "key.doc.name" : "leaves",
            "key.doc.result_discussion" : [
              {
                "Para" : "All leaves."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 27,
            "key.docoffset" : 5257,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>leaves<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 431,
            "key.name" : "leaves",
            "key.namelength" : 6,
            "key.nameoffset" : 5292,
            "key.offset" : 5288,
            "key.parsed_declaration" : "var leaves: [Self]",
            "key.parsed_scope.end" : 196,
            "key.parsed_scope.start" : 182,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP6leavesSayxGvp\">leaves<\/RelatedName>"
              }
            ],
            "key.typename" : "[Self]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE6leavesSayxGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func descendToGetLeaves(of node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>, result: inout [<Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>])<\/Declaration>",
            "key.bodylength" : 223,
            "key.bodyoffset" : 5380,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>descendToGetLeaves<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>result<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> [<ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 286,
            "key.name" : "descendToGetLeaves(of:result:)",
            "key.namelength" : 55,
            "key.nameoffset" : 5323,
            "key.offset" : 5318,
            "key.parsed_declaration" : "func descendToGetLeaves(of node: Self, result: inout [Self])",
            "key.parsed_scope.end" : 191,
            "key.parsed_scope.start" : 184,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (of: Self, result: inout [Self]) -> ()",
            "key.typeusr" : "$S2of6resultyx_SayxGztc14DataStructures21ReferenceTreeProtocolRzluD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE6leavesSayxGvg18descendToGetLeavesL_2of6resultyx_AEztAaBRzlF"
          },
          {
            "key.annotated_decl" : "<Declaration>var result: [<Type usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/Type>]<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>result<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolP4Selfxmfp\">Self<\/ref.generic_type_param>]<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 23,
            "key.name" : "result",
            "key.namelength" : 6,
            "key.nameoffset" : 5618,
            "key.offset" : 5614,
            "key.parsed_declaration" : "var result: [Self] = []",
            "key.parsed_scope.end" : 193,
            "key.parsed_scope.start" : 193,
            "key.typename" : "[Self]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE6leavesSayxGvg6resultL_AEvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func leaf(at index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>?<\/Declaration>",
            "key.bodylength" : 103,
            "key.bodyoffset" : 5853,
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: Returns the leaf node at the given `index`, if present. Otherwise, `nil`.",
            "key.doc.declaration" : "func leaf(at index: Int) -> Self?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"199\" column=\"10\"><Name>leaf(at:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE4leaf2atxSgSi_tF<\/USR><Declaration>func leaf(at index: Int) -&gt; Self?<\/Declaration><CommentParts><ResultDiscussion><Para>Returns the leaf node at the given <codeVoice>index<\/codeVoice>, if present. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 199,
            "key.doc.name" : "leaf(at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Returns the leaf node at the given `index`, if present. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 89,
            "key.docoffset" : 5725,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>leaf<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 139,
            "key.name" : "leaf(at:)",
            "key.namelength" : 19,
            "key.nameoffset" : 5823,
            "key.offset" : 5818,
            "key.parsed_declaration" : "func leaf(at index: Int) -> Self?",
            "key.parsed_scope.end" : 202,
            "key.parsed_scope.start" : 199,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP4leaf2atxSgSi_tF\">leaf(at: Int) -&gt; `Self`?<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Int) -> Self?",
            "key.typeusr" : "$S2atxSgSi_tcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE4leaf2atxSgSi_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func hasLeaf(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.bodylength" : 52,
            "key.bodyoffset" : 6074,
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: `true` if the given node is a leaf. Otherwise, `false`.",
            "key.doc.declaration" : "func hasLeaf(_ node: Self) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"205\" column=\"10\"><Name>hasLeaf(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE7hasLeafySbxF<\/USR><Declaration>func hasLeaf(_ node: Self) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is a leaf. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 205,
            "key.doc.name" : "hasLeaf(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is a leaf. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 71,
            "key.docoffset" : 5963,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasLeaf<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 89,
            "key.name" : "hasLeaf(_:)",
            "key.namelength" : 21,
            "key.nameoffset" : 6043,
            "key.offset" : 6038,
            "key.parsed_declaration" : "func hasLeaf(_ node: Self) -> Bool",
            "key.parsed_scope.end" : 207,
            "key.parsed_scope.start" : 205,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP7hasLeafySbxF\">hasLeaf(_: Self) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) -> Bool",
            "key.typeusr" : "$SySbxcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE7hasLeafySbxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var isContainer: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 39,
            "key.bodyoffset" : 6234,
            "key.doc.column" : 9,
            "key.doc.comment" : "- returns: `true` if there is at least one child. Otherwise, `false`.",
            "key.doc.declaration" : "var isContainer: Bool { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"210\" column=\"9\"><Name>isContainer<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE11isContainerSbvp<\/USR><Declaration>var isContainer: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there is at least one child. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 210,
            "key.doc.name" : "isContainer",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there is at least one child. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 74,
            "key.docoffset" : 6133,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isContainer<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 63,
            "key.name" : "isContainer",
            "key.namelength" : 11,
            "key.nameoffset" : 6215,
            "key.offset" : 6211,
            "key.parsed_declaration" : "var isContainer: Bool",
            "key.parsed_scope.end" : 212,
            "key.parsed_scope.start" : 210,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP11isContainerSbvp\">isContainer<\/RelatedName>"
              }
            ],
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE11isContainerSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var isRoot: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 34,
            "key.bodyoffset" : 6367,
            "key.doc.column" : 9,
            "key.doc.comment" : "- returns: `true` if there is no parent. Otherwise, `false`.",
            "key.doc.declaration" : "var isRoot: Bool { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"215\" column=\"9\"><Name>isRoot<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE6isRootSbvp<\/USR><Declaration>var isRoot: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there is no parent. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 215,
            "key.doc.name" : "isRoot",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there is no parent. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 65,
            "key.docoffset" : 6280,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isRoot<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 53,
            "key.name" : "isRoot",
            "key.namelength" : 6,
            "key.nameoffset" : 6353,
            "key.offset" : 6349,
            "key.parsed_declaration" : "var isRoot: Bool",
            "key.parsed_scope.end" : 217,
            "key.parsed_scope.start" : 215,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP6isRootSbvp\">isRoot<\/RelatedName>"
              }
            ],
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE6isRootSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var root: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 253,
            "key.bodyoffset" : 6493,
            "key.doc.column" : 9,
            "key.doc.comment" : "- returns: `true` if there is no parent. Otherwise, `false`.",
            "key.doc.declaration" : "var root: Self { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"220\" column=\"9\"><Name>root<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE4rootxvp<\/USR><Declaration>var root: Self { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there is no parent. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 220,
            "key.doc.name" : "root",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there is no parent. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 65,
            "key.docoffset" : 6408,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>root<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 270,
            "key.name" : "root",
            "key.namelength" : 4,
            "key.nameoffset" : 6481,
            "key.offset" : 6477,
            "key.parsed_declaration" : "var root: Self",
            "key.parsed_scope.end" : 232,
            "key.parsed_scope.start" : 220,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP4rootxvp\">root<\/RelatedName>"
              }
            ],
            "key.typename" : "Self",
            "key.typeusr" : "$SxD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE4rootxvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func ascendToGetRoot(of node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type><\/Declaration>",
            "key.bodylength" : 150,
            "key.bodyoffset" : 6548,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ascendToGetRoot<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 196,
            "key.name" : "ascendToGetRoot(of:)",
            "key.namelength" : 30,
            "key.nameoffset" : 6508,
            "key.offset" : 6503,
            "key.parsed_declaration" : "func ascendToGetRoot(of node: Self) -> Self",
            "key.parsed_scope.end" : 229,
            "key.parsed_scope.start" : 222,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (of: Self) -> Self",
            "key.typeusr" : "$S2ofxx_tc14DataStructures21ReferenceTreeProtocolRzluD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE4rootxvg15ascendToGetRootL_2ofxx_tAaBRzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var pathToRoot: [<Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>] { get }<\/Declaration>",
            "key.bodylength" : 303,
            "key.bodyoffset" : 6856,
            "key.doc.column" : 9,
            "key.doc.comment" : "Array of all Node objects between (and including) `self` up to `root`.",
            "key.doc.declaration" : "var pathToRoot: [Self] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"235\" column=\"9\"><Name>pathToRoot<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE10pathToRootSayxGvp<\/USR><Declaration>var pathToRoot: [Self] { get }<\/Declaration><CommentParts><Abstract><Para>Array of all Node objects between (and including) <codeVoice>self<\/codeVoice> up to <codeVoice>root<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 235,
            "key.doc.name" : "pathToRoot",
            "key.doc.type" : "Other",
            "key.doclength" : 75,
            "key.docoffset" : 6753,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>pathToRoot<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 328,
            "key.name" : "pathToRoot",
            "key.namelength" : 10,
            "key.nameoffset" : 6836,
            "key.offset" : 6832,
            "key.parsed_declaration" : "var pathToRoot: [Self]",
            "key.parsed_scope.end" : 243,
            "key.parsed_scope.start" : 235,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP10pathToRootSayxGvp\">pathToRoot<\/RelatedName>"
              }
            ],
            "key.typename" : "[Self]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE10pathToRootSayxGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func ascendToGetPathToRoot(of node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>, result: [<Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>]) -&gt; [<Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>]<\/Declaration>",
            "key.bodylength" : 158,
            "key.bodyoffset" : 6935,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ascendToGetPathToRoot<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>result<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param>]<\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 228,
            "key.name" : "ascendToGetPathToRoot(of:result:)",
            "key.namelength" : 52,
            "key.nameoffset" : 6871,
            "key.offset" : 6866,
            "key.parsed_declaration" : "func ascendToGetPathToRoot(of node: Self, result: [Self]) -> [Self]",
            "key.parsed_scope.end" : 240,
            "key.parsed_scope.start" : 237,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (of: Self, result: [Self]) -> [Self]",
            "key.typeusr" : "$S2of6resultSayxGx_ACtc14DataStructures21ReferenceTreeProtocolRzluD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE10pathToRootSayxGvg06ascendg7GetPathgH0L_2of6resultAEx_AEtAaBRzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func hasAncestor(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.bodylength" : 80,
            "key.bodyoffset" : 7286,
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: `true` if the given node is an ancestor. Otherwise, `false`.",
            "key.doc.declaration" : "func hasAncestor(_ node: Self) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"246\" column=\"10\"><Name>hasAncestor(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE11hasAncestorySbxF<\/USR><Declaration>func hasAncestor(_ node: Self) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is an ancestor. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 246,
            "key.doc.name" : "hasAncestor(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is an ancestor. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 76,
            "key.docoffset" : 7166,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasAncestor<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 121,
            "key.name" : "hasAncestor(_:)",
            "key.namelength" : 25,
            "key.nameoffset" : 7251,
            "key.offset" : 7246,
            "key.parsed_declaration" : "func hasAncestor(_ node: Self) -> Bool",
            "key.parsed_scope.end" : 248,
            "key.parsed_scope.start" : 246,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP11hasAncestorySbxF\">hasAncestor(_: Self) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) -> Bool",
            "key.typeusr" : "$SySbxcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE11hasAncestorySbxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func ancestor(at distance: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>?<\/Declaration>",
            "key.bodylength" : 125,
            "key.bodyoffset" : 7496,
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: Ancestor at the given distance, if present. Otherwise, `nil`.",
            "key.doc.declaration" : "func ancestor(at distance: Int) -> Self?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"251\" column=\"10\"><Name>ancestor(at:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE8ancestor2atxSgSi_tF<\/USR><Declaration>func ancestor(at distance: Int) -&gt; Self?<\/Declaration><CommentParts><ResultDiscussion><Para>Ancestor at the given distance, if present. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 251,
            "key.doc.name" : "ancestor(at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Ancestor at the given distance, if present. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 77,
            "key.docoffset" : 7373,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ancestor<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>distance<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 168,
            "key.name" : "ancestor(at:)",
            "key.namelength" : 26,
            "key.nameoffset" : 7459,
            "key.offset" : 7454,
            "key.parsed_declaration" : "func ancestor(at distance: Int) -> Self?",
            "key.parsed_scope.end" : 258,
            "key.parsed_scope.start" : 251,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP8ancestor2atxSgSi_tF\">ancestor(at: Int) -&gt; `Self`?<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Int) -> Self?",
            "key.typeusr" : "$S2atxSgSi_tcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE8ancestor2atxSgSi_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func hasDescendent(_ node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.bodylength" : 246,
            "key.bodyoffset" : 7751,
            "key.doc.column" : 10,
            "key.doc.comment" : "- returns: `true` if the given node is a descendent. Otherwise, `false`.",
            "key.doc.declaration" : "func hasDescendent(_ node: Self) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"261\" column=\"10\"><Name>hasDescendent(_:)<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE13hasDescendentySbxF<\/USR><Declaration>func hasDescendent(_ node: Self) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given node is a descendent. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 261,
            "key.doc.name" : "hasDescendent(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if the given node is a descendent. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 77,
            "key.docoffset" : 7628,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hasDescendent<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 289,
            "key.name" : "hasDescendent(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 7714,
            "key.offset" : 7709,
            "key.parsed_declaration" : "func hasDescendent(_ node: Self) -> Bool",
            "key.parsed_scope.end" : 275,
            "key.parsed_scope.start" : 261,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP13hasDescendentySbxF\">hasDescendent(_: Self) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (Self) -> (Self) -> Bool",
            "key.typeusr" : "$SySbxcD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE13hasDescendentySbxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var height: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 354,
            "key.bodyoffset" : 8045,
            "key.doc.column" : 9,
            "key.doc.comment" : "Height of node.",
            "key.doc.declaration" : "var height: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"278\" column=\"9\"><Name>height<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE6heightSivp<\/USR><Declaration>var height: Int { get }<\/Declaration><CommentParts><Abstract><Para>Height of node.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 278,
            "key.doc.name" : "height",
            "key.doc.type" : "Other",
            "key.doclength" : 20,
            "key.docoffset" : 8004,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>height<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 372,
            "key.name" : "height",
            "key.namelength" : 6,
            "key.nameoffset" : 8032,
            "key.offset" : 8028,
            "key.parsed_declaration" : "var height: Int",
            "key.parsed_scope.end" : 293,
            "key.parsed_scope.start" : 278,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP6heightSivp\">height<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE6heightSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func descendToGetHeight(of node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>, result: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 221,
            "key.bodyoffset" : 8115,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>descendToGetHeight<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>result<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 282,
            "key.name" : "descendToGetHeight(of:result:)",
            "key.namelength" : 46,
            "key.nameoffset" : 8060,
            "key.offset" : 8055,
            "key.parsed_declaration" : "func descendToGetHeight(of node: Self, result: Int) -> Int",
            "key.parsed_scope.end" : 289,
            "key.parsed_scope.start" : 280,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (of: Self, result: Int) -> Int",
            "key.typeusr" : "$S2of6resultSix_Sitc14DataStructures21ReferenceTreeProtocolRzluD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE6heightSivg18descendToGetHeightL_2of6resultSix_SitAaBRzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var heightOfTree: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 32,
            "key.bodyoffset" : 8464,
            "key.doc.column" : 9,
            "key.doc.comment" : "Height of containing tree.",
            "key.doc.declaration" : "var heightOfTree: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"296\" column=\"9\"><Name>heightOfTree<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE08heightOfD0Sivp<\/USR><Declaration>var heightOfTree: Int { get }<\/Declaration><CommentParts><Abstract><Para>Height of containing tree.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 296,
            "key.doc.name" : "heightOfTree",
            "key.doc.type" : "Other",
            "key.doclength" : 31,
            "key.docoffset" : 8406,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>heightOfTree<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 56,
            "key.name" : "heightOfTree",
            "key.namelength" : 12,
            "key.nameoffset" : 8445,
            "key.offset" : 8441,
            "key.parsed_declaration" : "var heightOfTree: Int",
            "key.parsed_scope.end" : 298,
            "key.parsed_scope.start" : 296,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP08heightOfD0Sivp\">heightOfTree<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE08heightOfD0Sivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var depth: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 296,
            "key.bodyoffset" : 8542,
            "key.doc.column" : 9,
            "key.doc.comment" : "Depth of node.",
            "key.doc.declaration" : "var depth: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift\" line=\"301\" column=\"9\"><Name>depth<\/Name><USR>s:14DataStructures21ReferenceTreeProtocolPAAE5depthSivp<\/USR><Declaration>var depth: Int { get }<\/Declaration><CommentParts><Abstract><Para>Depth of node.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 301,
            "key.doc.name" : "depth",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 8503,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>depth<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 313,
            "key.name" : "depth",
            "key.namelength" : 5,
            "key.nameoffset" : 8530,
            "key.offset" : 8526,
            "key.parsed_declaration" : "var depth: Int",
            "key.parsed_scope.end" : 313,
            "key.parsed_scope.start" : 301,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures21ReferenceTreeProtocolP5depthSivp\">depth<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE5depthSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func ascendToGetDepth(of node: <Type usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/Type>, depth: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 170,
            "key.bodyoffset" : 8609,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ReferenceTreeProtocol.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ascendToGetDepth<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>node<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ReferenceTreeProtocolPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>depth<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 228,
            "key.name" : "ascendToGetDepth(of:depth:)",
            "key.namelength" : 43,
            "key.nameoffset" : 8557,
            "key.offset" : 8552,
            "key.parsed_declaration" : "func ascendToGetDepth(of node: Self, depth: Int) -> Int",
            "key.parsed_scope.end" : 310,
            "key.parsed_scope.start" : 303,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ReferenceTreeProtocol> (of: Self, depth: Int) -> Int",
            "key.typeusr" : "$S2of5depthSix_Sitc14DataStructures21ReferenceTreeProtocolRzluD",
            "key.usr" : "s:14DataStructures21ReferenceTreeProtocolPAAE5depthSivg16ascendToGetDepthL_2ofADSix_SitAaBRzlF"
          }
        ],
        "key.typename" : "ReferenceTreeProtocol.Protocol",
        "key.typeusr" : "$S14DataStructures21ReferenceTreeProtocol_pmD",
        "key.usr" : "s:14DataStructures21ReferenceTreeProtocolP"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SequenceExtensions.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 876,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>protocol Sequence<\/Declaration>",
        "key.bodylength" : 556,
        "key.bodyoffset" : 116,
        "key.doc.declaration" : "protocol Sequence",
        "key.doc.discussion" : [
          {
            "Para" : "A sequence is a list of values that you can step through one at a time. The most common way to iterate over the elements of a sequence is to use a `for`-`in` loop:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "While seemingly simple, this capability gives you access to a large number of operations that you can perform on any sequence. As an example, to check whether a sequence includes a particular value, you can test each value sequentially until you’ve found a match or reached the end of the sequence. This example checks to see whether a particular insect is in an array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Sequence` protocol provides default implementations for many common operations that depend on sequential access to a sequence’s values. For clearer, more concise code, the example above could use the array’s `contains(_:)` method, which every sequence inherits from `Sequence`, instead of iterating manually:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Sequence` protocol makes no requirement on conforming types regarding whether they will be destructively consumed by iteration. As a consequence, don’t assume that multiple `for`-`in` loops on a sequence will either resume iteration or restart from the beginning:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "In this case, you cannot assume either that a sequence will be consumable and will resume iteration, or that a sequence is a collection and will restart iteration from the first element. A conforming sequence that is not a collection is allowed to produce an arbitrary sequence of elements in the second `for`-`in` loop."
          },
          {
            "Para" : "To establish that a type you’ve created supports nondestructive iteration, add conformance to the `Collection` protocol."
          },
          {
            "Para" : "Making your own custom types conform to `Sequence` enables many useful operations, like `for`-`in` looping and the `contains` method, without much effort. To add `Sequence` conformance to your own custom type, add a `makeIterator()` method that returns an iterator."
          },
          {
            "Para" : "Alternatively, if your type can act as its own iterator, implementing the requirements of the `IteratorProtocol` protocol and declaring conformance to both `Sequence` and `IteratorProtocol` are sufficient."
          },
          {
            "Para" : "Here’s a definition of a `Countdown` sequence that serves as its own iterator. The `makeIterator()` method is provided as a default implementation."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A sequence should provide its iterator in O(1). The `Sequence` protocol makes no other requirements about element access, so routines that traverse a sequence should be considered O() unless documented otherwise."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Sequence<\/Name><USR>s:ST<\/USR><Declaration>protocol Sequence<\/Declaration><CommentParts><Abstract><Para>A type that provides sequential, iterated access to its elements.<\/Para><\/Abstract><Discussion><Para>A sequence is a list of values that you can step through one at a time. The most common way to iterate over the elements of a sequence is to use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let oneTwoThree = 1...3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for number in oneTwoThree {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(number)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>While seemingly simple, this capability gives you access to a large number of operations that you can perform on any sequence. As an example, to check whether a sequence includes a particular value, you can test each value sequentially until you’ve found a match or reached the end of the sequence. This example checks to see whether a particular insect is in an array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let bugs = [\"Aphid\", \"Bumblebee\", \"Cicada\", \"Damselfly\", \"Earwig\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var hasMosquito = false]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for bug in bugs {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if bug == \"Mosquito\" {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        hasMosquito = true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        break]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(\"'bugs' has a mosquito: \\(hasMosquito)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"'bugs' has a mosquito: false\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Sequence<\/codeVoice> protocol provides default implementations for many common operations that depend on sequential access to a sequence’s values. For clearer, more concise code, the example above could use the array’s <codeVoice>contains(_:)<\/codeVoice> method, which every sequence inherits from <codeVoice>Sequence<\/codeVoice>, instead of iterating manually:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if bugs.contains(\"Mosquito\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Break out the bug spray.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Whew, no mosquitos!\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Whew, no mosquitos!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Repeated Access<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>The <codeVoice>Sequence<\/codeVoice> protocol makes no requirement on conforming types regarding whether they will be destructively consumed by iteration. As a consequence, don’t assume that multiple <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loops on a sequence will either resume iteration or restart from the beginning:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for element in sequence {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if ... some condition { break }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for element in sequence {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ No defined behavior]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In this case, you cannot assume either that a sequence will be consumable and will resume iteration, or that a sequence is a collection and will restart iteration from the first element. A conforming sequence that is not a collection is allowed to produce an arbitrary sequence of elements in the second <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop.<\/Para><Para>To establish that a type you’ve created supports nondestructive iteration, add conformance to the <codeVoice>Collection<\/codeVoice> protocol.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Conforming to the Sequence Protocol<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Making your own custom types conform to <codeVoice>Sequence<\/codeVoice> enables many useful operations, like <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> looping and the <codeVoice>contains<\/codeVoice> method, without much effort. To add <codeVoice>Sequence<\/codeVoice> conformance to your own custom type, add a <codeVoice>makeIterator()<\/codeVoice> method that returns an iterator.<\/Para><Para>Alternatively, if your type can act as its own iterator, implementing the requirements of the <codeVoice>IteratorProtocol<\/codeVoice> protocol and declaring conformance to both <codeVoice>Sequence<\/codeVoice> and <codeVoice>IteratorProtocol<\/codeVoice> are sufficient.<\/Para><Para>Here’s a definition of a <codeVoice>Countdown<\/codeVoice> sequence that serves as its own iterator. The <codeVoice>makeIterator()<\/codeVoice> method is provided as a default implementation.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Countdown: Sequence, IteratorProtocol {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var count: Int]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    mutating func next() -> Int? {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        if count == 0 {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            return nil]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            defer { count -= 1 }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            return count]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let threeToGo = Countdown(count: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for i in threeToGo {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(i)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Expected Performance<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A sequence should provide its iterator in O(1). The <codeVoice>Sequence<\/codeVoice> protocol makes no other requirements about element access, so routines that traverse a sequence should be considered O(<emphasis>n<\/emphasis>) unless documented otherwise.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Sequence",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Sequence<\/decl.name><\/decl.protocol>",
        "key.groupname" : "Collection",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 577,
        "key.modulename" : "Swift",
        "key.name" : "Sequence",
        "key.namelength" : 8,
        "key.nameoffset" : 106,
        "key.offset" : 96,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func extrema&lt;T&gt;(property: (<Type usr=\"s:ST7ElementQa\">Element<\/Type>) -&gt; <Type usr=\"s:ST14DataStructuresE7extrema8property20areInIncreasingOrderSay7ElementQzGqd__AFXE_Sbqd___qd__tXEtSLRd__lF1TL_qd__mfp\">T<\/Type>, areInIncreasingOrder: (<Type usr=\"s:ST14DataStructuresE7extrema8property20areInIncreasingOrderSay7ElementQzGqd__AFXE_Sbqd___qd__tXEtSLRd__lF1TL_qd__mfp\">T<\/Type>, <Type usr=\"s:ST14DataStructuresE7extrema8property20areInIncreasingOrderSay7ElementQzGqd__AFXE_Sbqd___qd__tXEtSLRd__lF1TL_qd__mfp\">T<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type>) -&gt; [<Type usr=\"s:ST7ElementQa\">Element<\/Type>] where T : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 308
              }
            ],
            "key.bodylength" : 228,
            "key.bodyoffset" : 442,
            "key.doc.column" : 17,
            "key.doc.comment" : "All of the values which are the least or greatest given the `areInIncreasingOrder` closure.\n\n- NOTE: Consider returning (Element, count: Int)? instead of `Array`.",
            "key.doc.declaration" : "public func extrema<T>(property: (Element) -> T, areInIncreasingOrder: (T, T) -> Bool) -> [Element] where T : Comparable",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SequenceExtensions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SequenceExtensions.swift\" line=\"13\" column=\"17\"><Name>extrema(property:areInIncreasingOrder:)<\/Name><USR>s:ST14DataStructuresE7extrema8property20areInIncreasingOrderSay7ElementQzGqd__AFXE_Sbqd___qd__tXEtSLRd__lF<\/USR><Declaration>public func extrema&lt;T&gt;(property: (Element) -&gt; T, areInIncreasingOrder: (T, T) -&gt; Bool) -&gt; [Element] where T : Comparable<\/Declaration><CommentParts><Abstract><Para>All of the values which are the least or greatest given the <codeVoice>areInIncreasingOrder<\/codeVoice> closure.<\/Para><\/Abstract><Discussion><Note><Para>Consider returning (Element, count: Int)? instead of <codeVoice>Array<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 13,
            "key.doc.name" : "extrema(property:areInIncreasingOrder:)",
            "key.doc.type" : "Function",
            "key.doclength" : 182,
            "key.docoffset" : 122,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SequenceExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>extrema<\/decl.name>&lt;<decl.generic_type_param usr=\"s:ST14DataStructuresE7extrema8property20areInIncreasingOrderSay7ElementQzGqd__AFXE_Sbqd___qd__tXEtSLRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>property<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:ST14DataStructuresE7extrema8property20areInIncreasingOrderSay7ElementQzGqd__AFXE_Sbqd___qd__tXEtSLRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>areInIncreasingOrder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:ST14DataStructuresE7extrema8property20areInIncreasingOrderSay7ElementQzGqd__AFXE_Sbqd___qd__tXEtSLRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:ST14DataStructuresE7extrema8property20areInIncreasingOrderSay7ElementQzGqd__AFXE_Sbqd___qd__tXEtSLRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype>]<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.groupname" : "Collection",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 356,
            "key.name" : "extrema(property:areInIncreasingOrder:)",
            "key.namelength" : 75,
            "key.nameoffset" : 320,
            "key.offset" : 315,
            "key.parsed_declaration" : "public func extrema <T> (property: (Element) -> T, areInIncreasingOrder: (T,T) -> Bool)\n    -> [Element] where T: Comparable",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 13,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SequenceExtensions.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.groupname" : "Collection",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 329,
                "key.offset" : 329,
                "key.parsed_declaration" : "public func extrema <T> (property: (Element) -> T, areInIncreasingOrder: (T,T) -> Bool)",
                "key.parsed_scope.end" : 13,
                "key.parsed_scope.start" : 13,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:ST14DataStructuresE7extrema8property20areInIncreasingOrderSay7ElementQzGqd__AFXE_Sbqd___qd__tXEtSLRd__lF1TL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let sorted: [<Type usr=\"s:ST4Selfxmfp\">Self<\/Type>.Element]<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SequenceExtensions.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sorted<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:ST4Selfxmfp\">Self<\/ref.generic_type_param>.Element]<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Collection",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 77,
                "key.name" : "sorted",
                "key.namelength" : 6,
                "key.nameoffset" : 455,
                "key.offset" : 451,
                "key.parsed_declaration" : "let sorted = self.sorted { areInIncreasingOrder(property($0), property($1)) }",
                "key.parsed_scope.end" : 16,
                "key.parsed_scope.start" : 16,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:STsSL7ElementRpzrlE6sortedSayABGyF\">sorted()<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:STsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF\">sorted(by:)<\/RelatedName>"
                  }
                ],
                "key.typename" : "[Self.Element]",
                "key.typeusr" : "$SSay7ElementSTQzGD",
                "key.usr" : "s:ST14DataStructuresE7extrema8property20areInIncreasingOrderSay7ElementQzGqd__AFXE_Sbqd___qd__tXEtSLRd__lF6sortedL_AGvp"
              }
            ],
            "key.typename" : "<Self, T where Self : Sequence, T : Comparable> (Self) -> ((Self.Element) -> T, (T, T) -> Bool) -> [Self.Element]",
            "key.typeusr" : "$S8property20areInIncreasingOrderSay7ElementQzGqd__ADXE_Sbqd___qd__tXEtcSLRd__luD",
            "key.usr" : "s:ST14DataStructuresE7extrema8property20areInIncreasingOrderSay7ElementQzGqd__AFXE_Sbqd___qd__tXEtSLRd__lF"
          }
        ],
        "key.typename" : "Sequence.Protocol",
        "key.typeusr" : "$SST_pmD",
        "key.usr" : "s:ST"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func ~= &lt;S&gt;(array: <Type usr=\"s:14DataStructures2teoiySbx_7ElementQztSTRzSQADRQlF1SL_xmfp\">S<\/Type>, value: <Type usr=\"s:14DataStructures2teoiySbx_7ElementQztSTRzSQADRQlF1SL_xmfp\">S<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where S : <Type usr=\"s:ST\">Sequence<\/Type>, S.Element : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 746
          }
        ],
        "key.bodylength" : 34,
        "key.bodyoffset" : 840,
        "key.doc.column" : 13,
        "key.doc.comment" : "- Returns: `true` if the given `array` contains the given `value`.",
        "key.doc.declaration" : "public func ~= <S>(array: S, value: S.Element) -> Bool where S : Sequence, S.Element : Equatable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SequenceExtensions.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SequenceExtensions.swift\" line=\"23\" column=\"13\"><Name>~=(_:_:)<\/Name><USR>s:14DataStructures2teoiySbx_7ElementQztSTRzSQADRQlF<\/USR><Declaration>public func ~= &lt;S&gt;(array: S, value: S.Element) -&gt; Bool where S : Sequence, S.Element : Equatable<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if the given <codeVoice>array<\/codeVoice> contains the given <codeVoice>value<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 23,
        "key.doc.name" : "~=(_:_:)",
        "key.doc.result_discussion" : [
          {
            "Para" : "`true` if the given `array` contains the given `value`."
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 71,
        "key.docoffset" : 675,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SequenceExtensions.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>~= <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures2teoiySbx_7ElementQztSTRzSQADRQlF1SL_xmfp\"><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>array<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2teoiySbx_7ElementQztSTRzSQADRQlF1SL_xmfp\">S<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2teoiySbx_7ElementQztSTRzSQADRQlF1SL_xmfp\">S<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>S.Element : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 122,
        "key.name" : "~=(_:_:)",
        "key.namelength" : 45,
        "key.nameoffset" : 758,
        "key.offset" : 753,
        "key.parsed_declaration" : "public func ~= <S: Sequence> (array: S, value: S.Element) -> Bool where S.Element: Equatable",
        "key.parsed_scope.end" : 25,
        "key.parsed_scope.start" : 23,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2teoiySbx_xtSQRzlF\">~= &lt;T&gt;(_: T, _: T) -&gt; Bool where T : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2teoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">~= (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SXsE2teoiySbx_5BoundQztFZ\">~= (_: Self, _: Self.Bound) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>S : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 765
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SequenceExtensions.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>S<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Sequence"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 11,
            "key.name" : "S",
            "key.namelength" : 1,
            "key.nameoffset" : 762,
            "key.offset" : 762,
            "key.parsed_declaration" : "public func ~= <S: Sequence> (array: S, value: S.Element) -> Bool where S.Element: Equatable",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.typename" : "S.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures2teoiySbx_7ElementQztSTRzSQADRQlF1SL_xmfp"
          }
        ],
        "key.typename" : "<S where S : Sequence, S.Element : Equatable> (S, S.Element) -> Bool",
        "key.typeusr" : "$SySbx_7ElementQztcSTRzSQABRQluD",
        "key.usr" : "s:14DataStructures2teoiySbx_7ElementQztSTRzSQADRQlF"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SetExtensions.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 558,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>struct Set&lt;Element&gt; where Element : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 450,
        "key.bodyoffset" : 106,
        "key.doc.declaration" : "struct Set<Element> where Element : Hashable",
        "key.doc.discussion" : [
          {
            "Para" : "You use a set instead of an array when you need to test efficiently for membership and you aren’t concerned with the order of the elements in the collection, or when you need to ensure that each element appears only once in a collection."
          },
          {
            "Para" : "You can create a set with any element type that conforms to the `Hashable` protocol. By default, most types in the standard library are hashable, including strings, numeric and Boolean types, enumeration cases without associated values, and even sets themselves."
          },
          {
            "Para" : "Swift makes it as easy to create a new set as to create a new array. Simply assign an array literal to a variable or constant with the `Set` type specified."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Sets provide a suite of mathematical set operations. For example, you can efficiently test a set for membership of an element or check its intersection with another set:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "You can also combine, exclude, or subtract the elements of two sets:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "You can modify a set in place by using these methods’ mutating counterparts: `formUnion(_:)`, `formIntersection(_:)`, `formSymmetricDifference(_:)`, and `subtract(_:)`."
          },
          {
            "Para" : "Set operations are not limited to use with other sets. Instead, you can perform set operations with another set, an array, or any other sequence type."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "In addition to the `Set` type’s set operations, you can use any nonmutating sequence or collection methods with a set."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can iterate through a set’s unordered elements with a `for`-`in` loop."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Many sequence and collection operations return an array or a type-erasing collection wrapper instead of a set. To restore efficient set operations, create a new set from the result."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can bridge between `Set` and `NSSet` using the `as` operator. For bridging to be possible, the `Element` type of a set must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."
          },
          {
            "Para" : "Bridging from `Set` to `NSSet` always takes O(1) time and space. When the set’s `Element` type is neither a class nor an `@objc` protocol, any required bridging of elements occurs at the first access of each element, so the first operation that uses the contents of the set (for example, a membership test) can take O()."
          },
          {
            "Para" : "Bridging from `NSSet` to `Set` first calls the `copy(with:)` method (`- copyWithZone:` in Objective-C) on the set to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSSet` that are already immutable, `copy(with:)` returns the same set in constant time; otherwise, the copying performance is unspecified. The instances of `NSSet` and `Set` share buffer using the same copy-on-write optimization that is used when two instances of `Set` share buffer."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Set<\/Name><USR>s:Sh<\/USR><Declaration>struct Set&lt;Element&gt; where Element : Hashable<\/Declaration><CommentParts><Abstract><Para>An unordered collection of unique elements.<\/Para><\/Abstract><Discussion><Para>You use a set instead of an array when you need to test efficiently for membership and you aren’t concerned with the order of the elements in the collection, or when you need to ensure that each element appears only once in a collection.<\/Para><Para>You can create a set with any element type that conforms to the <codeVoice>Hashable<\/codeVoice> protocol. By default, most types in the standard library are hashable, including strings, numeric and Boolean types, enumeration cases without associated values, and even sets themselves.<\/Para><Para>Swift makes it as easy to create a new set as to create a new array. Simply assign an array literal to a variable or constant with the <codeVoice>Set<\/codeVoice> type specified.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if ingredients.contains(\"sugar\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No thanks, too sweet.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No thanks, too sweet.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Set Operations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Sets provide a suite of mathematical set operations. For example, you can efficiently test a set for membership of an element or check its intersection with another set:<\/Para><List-Bullet><Item><Para>Use the <codeVoice>contains(_:)<\/codeVoice> method to test whether a set contains a specific element.<\/Para><\/Item><Item><Para>Use the “equal to” operator (<codeVoice>==<\/codeVoice>) to test whether two sets contain the same elements.<\/Para><\/Item><Item><Para>Use the <codeVoice>isSubset(of:)<\/codeVoice> method to test whether a set contains all the elements of another set or sequence.<\/Para><\/Item><Item><Para>Use the <codeVoice>isSuperset(of:)<\/codeVoice> method to test whether all elements of a set are contained in another set or sequence.<\/Para><\/Item><Item><Para>Use the <codeVoice>isStrictSubset(of:)<\/codeVoice> and <codeVoice>isStrictSuperset(of:)<\/codeVoice> methods to test whether a set is a subset or superset of, but not equal to, another set.<\/Para><\/Item><Item><Para>Use the <codeVoice>isDisjoint(with:)<\/codeVoice> method to test whether a set has any elements in common with another set.<\/Para><\/Item><\/List-Bullet><Para>You can also combine, exclude, or subtract the elements of two sets:<\/Para><List-Bullet><Item><Para>Use the <codeVoice>union(_:)<\/codeVoice> method to create a new set with the elements of a set and another set or sequence.<\/Para><\/Item><Item><Para>Use the <codeVoice>intersection(_:)<\/codeVoice> method to create a new set with only the elements common to a set and another set or sequence.<\/Para><\/Item><Item><Para>Use the <codeVoice>symmetricDifference(_:)<\/codeVoice> method to create a new set with the elements that are in either a set or another set or sequence, but not in both.<\/Para><\/Item><Item><Para>Use the <codeVoice>subtracting(_:)<\/codeVoice> method to create a new set with the elements of a set that are not also in another set or sequence.<\/Para><\/Item><\/List-Bullet><Para>You can modify a set in place by using these methods’ mutating counterparts: <codeVoice>formUnion(_:)<\/codeVoice>, <codeVoice>formIntersection(_:)<\/codeVoice>, <codeVoice>formSymmetricDifference(_:)<\/codeVoice>, and <codeVoice>subtract(_:)<\/codeVoice>.<\/Para><Para>Set operations are not limited to use with other sets. Instead, you can perform set operations with another set, an array, or any other sequence type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var primes: Set = [2, 3, 5, 7]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Tests whether primes is a subset of a Range<Int>]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(primes.isSubset(of: 0..<10))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Performs an intersection with an Array<Int>]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let favoriteNumbers = [5, 7, 15, 21]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(primes.intersection(favoriteNumbers))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[5, 7]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Sequence and Collection Operations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>In addition to the <codeVoice>Set<\/codeVoice> type’s set operations, you can use any nonmutating sequence or collection methods with a set.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if primes.isEmpty {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No primes!\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"We have \\(primes.count) primes.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"We have 4 primes.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let primesSum = primes.reduce(0, +)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'primesSum' == 17]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let primeStrings = primes.sorted().map(String.init)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'primeStrings' == [\"2\", \"3\", \"5\", \"7\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can iterate through a set’s unordered elements with a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for number in primes {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(number)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"5\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Many sequence and collection operations return an array or a type-erasing collection wrapper instead of a set. To restore efficient set operations, create a new set from the result.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let morePrimes = primes.union([11, 13, 17, 19])]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let laterPrimes = morePrimes.filter { $0 > 10 }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'laterPrimes' is of type Array<Int>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let laterPrimesSet = Set(morePrimes.filter { $0 > 10 })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'laterPrimesSet' is of type Set<Int>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Set and NSSet<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can bridge between <codeVoice>Set<\/codeVoice> and <codeVoice>NSSet<\/codeVoice> using the <codeVoice>as<\/codeVoice> operator. For bridging to be possible, the <codeVoice>Element<\/codeVoice> type of a set must be a class, an <codeVoice>@objc<\/codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc<\/codeVoice> attribute), or a type that bridges to a Foundation type.<\/Para><Para>Bridging from <codeVoice>Set<\/codeVoice> to <codeVoice>NSSet<\/codeVoice> always takes O(1) time and space. When the set’s <codeVoice>Element<\/codeVoice> type is neither a class nor an <codeVoice>@objc<\/codeVoice> protocol, any required bridging of elements occurs at the first access of each element, so the first operation that uses the contents of the set (for example, a membership test) can take O(<emphasis>n<\/emphasis>).<\/Para><Para>Bridging from <codeVoice>NSSet<\/codeVoice> to <codeVoice>Set<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> method (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) on the set to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSSet<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> returns the same set in constant time; otherwise, the copying performance is unspecified. The instances of <codeVoice>NSSet<\/codeVoice> and <codeVoice>Set<\/codeVoice> share buffer using the same copy-on-write optimization that is used when two instances of <codeVoice>Set<\/codeVoice> share buffer.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Set",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Set<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sh7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.groupname" : "Collection\/HashedCollections",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 466,
        "key.modulename" : "Swift",
        "key.name" : "Set",
        "key.namelength" : 3,
        "key.nameoffset" : 101,
        "key.offset" : 91,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func inserting(_ element: <Type usr=\"s:Sh7Elementa\">Element<\/Type>) -&gt; <Type usr=\"s:Sh\">Set<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 112
              }
            ],
            "key.bodylength" : 78,
            "key.bodyoffset" : 162,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SetExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>inserting<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:Sh7Elementa\">Element<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sh\">Set<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Collection\/HashedCollections",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 122,
            "key.name" : "inserting(_:)",
            "key.namelength" : 29,
            "key.nameoffset" : 124,
            "key.offset" : 119,
            "key.parsed_declaration" : "public func inserting(_ element: Element) -> Set",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 10,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var copy: <Type usr=\"s:Sh\">Set<\/Type>&lt;Element&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SetExtensions.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>copy<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct>&lt;Element&gt;<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Collection\/HashedCollections",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 15,
                "key.name" : "copy",
                "key.namelength" : 4,
                "key.nameoffset" : 175,
                "key.offset" : 171,
                "key.parsed_declaration" : "var copy = self",
                "key.parsed_scope.end" : 11,
                "key.parsed_scope.start" : 11,
                "key.typename" : "Set<Element>",
                "key.typeusr" : "$SShyxGD",
                "key.usr" : "s:Sh14DataStructuresE9insertingyShyxGxF4copyL_ACvp"
              }
            ],
            "key.typename" : "<Element where Element : Hashable> (Set<Element>) -> (Element) -> Set<Element>",
            "key.typeusr" : "$SyShyxGxcD",
            "key.usr" : "s:Sh14DataStructuresE9insertingyShyxGxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func + (lhs: <Type usr=\"s:Sh\">Set<\/Type>, rhs: <Type usr=\"s:Sh7Elementa\">Element<\/Type>?) -&gt; <Type usr=\"s:Sh\">Set<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 247
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 302,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SetExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:Sh7Elementa\">Element<\/ref.typealias>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sh\">Set<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.groupname" : "Collection\/HashedCollections",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 144,
            "key.name" : "+(_:_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 266,
            "key.offset" : 254,
            "key.parsed_declaration" : "public static func + (lhs: Set, rhs: Element?) -> Set",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 16,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element where Element : Hashable> (Set<Element>.Type) -> (Set<Element>, Element?) -> Set<Element>",
            "key.typeusr" : "$SyShyxGAA_xSgtcD",
            "key.usr" : "s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func + (lhs: <Type usr=\"s:Sh7Elementa\">Element<\/Type>?, rhs: <Type usr=\"s:Sh\">Set<\/Type>) -&gt; <Type usr=\"s:Sh\">Set<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 404
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 459,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SetExtensions.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:Sh7Elementa\">Element<\/ref.typealias>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sh\">Set<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.groupname" : "Collection\/HashedCollections",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 144,
            "key.name" : "+(_:_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 423,
            "key.offset" : 411,
            "key.parsed_declaration" : "public static func + (lhs: Element?, rhs: Set) -> Set",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 21,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element where Element : Hashable> (Set<Element>.Type) -> (Element?, Set<Element>) -> Set<Element>",
            "key.typeusr" : "$SyShyxGxSg_AAtcD",
            "key.usr" : "s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ"
          }
        ],
        "key.typename" : "Set<Element>.Type",
        "key.typeusr" : "$SShyxGmD",
        "key.usr" : "s:Sh"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1741,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration>",
        "key.bodylength" : 1609,
        "key.bodyoffset" : 130,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum Tree<Branch, Leaf>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "A `Tree` can be used in pretty simple cases:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Or more nested cases:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"39\" column=\"13\"><Name>Tree<\/Name><USR>s:14DataStructures4TreeO<\/USR><Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration><CommentParts><Abstract><Para>A value-semantic, immutable Tree structure with two generic types for the branches and leaves.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>A <codeVoice>Tree<\/codeVoice> can be used in pretty simple cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let justALeaf: Tree<(),Double> = .leaf(3.14159265359)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Or more nested cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let happyTree = Tree.branch(\"alpha\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(1),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"beta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(2),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(3),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(4)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(5),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"gamma\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(6),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .branch(\"delta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(7),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(8)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[])]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 39,
        "key.doc.name" : "Tree",
        "key.doc.type" : "Other",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Tree<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\"><decl.generic_type_param.name>Branch<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\"><decl.generic_type_param.name>Leaf<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1647,
        "key.name" : "Tree",
        "key.namelength" : 4,
        "key.nameoffset" : 103,
        "key.offset" : 93,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 25,
            "key.name" : "MARK: - Single-Typed Tree",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 139
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var value: <Type usr=\"s:14DataStructures4TreeOAAq_RszrlE4Leafq_mfp\">Leaf<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 209
              }
            ],
            "key.bodylength" : 154,
            "key.bodyoffset" : 233,
            "key.doc.column" : 16,
            "key.doc.comment" : "The payload of a given `Tree`.",
            "key.doc.declaration" : "public var value: Leaf { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift\" line=\"14\" column=\"16\"><Name>value<\/Name><USR>s:14DataStructures4TreeOAAq_RszrlE5valuexvp<\/USR><Declaration>public var value: Leaf { get }<\/Declaration><CommentParts><Abstract><Para>The payload of a given <codeVoice>Tree<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 14,
            "key.doc.name" : "value",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 170,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures4TreeOAAq_RszrlE4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 172,
            "key.name" : "value",
            "key.namelength" : 5,
            "key.nameoffset" : 220,
            "key.offset" : 216,
            "key.parsed_declaration" : "public var value: Leaf",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 14,
            "key.typename" : "Branch",
            "key.typeusr" : "$SxD",
            "key.usr" : "s:14DataStructures4TreeOAAq_RszrlE5valuexvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init&lt;S&gt;(_ value: <Type usr=\"s:14DataStructures4TreeOAAq_RszrlE4Leafq_mfp\">Leaf<\/Type>, _ sequence: <Type usr=\"s:14DataStructures4TreeOAAq_RszrlEyACyxxGx_qd__tc7ElementQyd__Rs_STRd__lufc1SL_qd__mfp\">S<\/Type>) where Leaf == S.Element, S : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 785
              }
            ],
            "key.bodylength" : 206,
            "key.bodyoffset" : 867,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a single-depth `TreeNode.branch` with leaves defined by a given `Sequence`\nparameretized over `T`.\n\nIn the case of initializing with an empty array:\n\n    let tree = Tree(1, [])\n\nA branch is created, populated with a single value matching the given `value`:\n\n    self = .branch(value, [.leaf(value)])",
            "key.doc.declaration" : "public init<S>(_ value: Leaf, _ sequence: S) where Leaf == S.Element, S : Sequence",
            "key.doc.discussion" : [
              {
                "Para" : "In the case of initializing with an empty array:"
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "A branch is created, populated with a single value matching the given `value`:"
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift\" line=\"34\" column=\"12\"><Name>init(_:_:)<\/Name><USR>s:14DataStructures4TreeOAAq_RszrlEyACyxxGx_qd__tc7ElementQyd__Rs_STRd__lufc<\/USR><Declaration>public init&lt;S&gt;(_ value: Leaf, _ sequence: S) where Leaf == S.Element, S : Sequence<\/Declaration><CommentParts><Abstract><Para>Create a single-depth <codeVoice>TreeNode.branch<\/codeVoice> with leaves defined by a given <codeVoice>Sequence<\/codeVoice> parameretized over <codeVoice>T<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>In the case of initializing with an empty array:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let tree = Tree(1, [])]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A branch is created, populated with a single value matching the given <codeVoice>value<\/codeVoice>:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[self = .branch(value, [.leaf(value)])]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 34,
            "key.doc.name" : "init(_:_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 387,
            "key.docoffset" : 394,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeOAAq_RszrlEyACyxxGx_qd__tc7ElementQyd__Rs_STRd__lufc1SL_qd__mfp\"><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeOAAq_RszrlE4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeOAAq_RszrlEyACyxxGx_qd__tc7ElementQyd__Rs_STRd__lufc1SL_qd__mfp\">S<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Leaf == S.Element<\/decl.generic_type_requirement>, <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 282,
            "key.name" : "init(_:_:)",
            "key.namelength" : 49,
            "key.nameoffset" : 792,
            "key.offset" : 792,
            "key.parsed_declaration" : "public init <S: Sequence> (_ value: Leaf, _ sequence: S) where S.Element == Leaf",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 34,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>S : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 8,
                    "key.offset" : 801
                  }
                ],
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>S<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Sequence"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 11,
                "key.name" : "S",
                "key.namelength" : 1,
                "key.nameoffset" : 798,
                "key.offset" : 798,
                "key.parsed_declaration" : "public init <S: Sequence> (_ value: Leaf, _ sequence: S) where S.Element == Leaf",
                "key.parsed_scope.end" : 34,
                "key.parsed_scope.start" : 34,
                "key.typename" : "S.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures4TreeOAAq_RszrlEyACyxxGx_qd__tc7ElementQyd__Rs_STRd__lufc1SL_qd__mfp"
              }
            ],
            "key.typename" : "<Branch, Leaf, S where Branch == Leaf, Leaf == S.Element, S : Sequence> (Tree<Branch, Leaf>.Type) -> (Leaf, S) -> Tree<Branch, Leaf>",
            "key.typeusr" : "$Sy14DataStructures4TreeOyxxGx_qd__tc7ElementQyd__Rs_STRd__luD",
            "key.usr" : "s:14DataStructures4TreeOAAq_RszrlEyACyxxGx_qd__tc7ElementQyd__Rs_STRd__lufc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func updating(value: <Type usr=\"s:14DataStructures4TreeOAAq_RszrlE4Leafq_mfp\">Leaf<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1147
              }
            ],
            "key.bodylength" : 166,
            "key.bodyoffset" : 1190,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: A new `Tree` with the given `value` as payload.",
            "key.doc.declaration" : "public func updating(value: Leaf) -> Tree",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift\" line=\"45\" column=\"17\"><Name>updating(value:)<\/Name><USR>s:14DataStructures4TreeOAAq_RszrlE8updating5valueACyxxGx_tF<\/USR><Declaration>public func updating(value: Leaf) -&gt; Tree<\/Declaration><CommentParts><ResultDiscussion><Para>A new <codeVoice>Tree<\/codeVoice> with the given <codeVoice>value<\/codeVoice> as payload.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 45,
            "key.doc.name" : "updating(value:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A new `Tree` with the given `value` as payload."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 63,
            "key.docoffset" : 1080,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updating<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeOAAq_RszrlE4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 203,
            "key.name" : "updating(value:)",
            "key.namelength" : 21,
            "key.nameoffset" : 1159,
            "key.offset" : 1154,
            "key.parsed_declaration" : "public func updating(value: Leaf) -> Tree",
            "key.parsed_scope.end" : 52,
            "key.parsed_scope.start" : 45,
            "key.substructure" : [

            ],
            "key.typename" : "<Branch, Leaf where Branch == Leaf> (Tree<Branch, Leaf>) -> (Leaf) -> Tree<Branch, Leaf>",
            "key.typeusr" : "$S5value14DataStructures4TreeOyxxGx_tcD",
            "key.usr" : "s:14DataStructures4TreeOAAq_RszrlE8updating5valueACyxxGx_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func map&lt;Result&gt;(_ transform: (<Type usr=\"s:14DataStructures4TreeOAAq_RszrlE4Leafq_mfp\">Leaf<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeOAAq_RszrlE3mapyACyqd__qd__Gqd__xXElF6ResultL_qd__mfp\">Result<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeOAAq_RszrlE3mapyACyqd__qd__Gqd__xXElF6ResultL_qd__mfp\">Result<\/Type>, <Type usr=\"s:14DataStructures4TreeOAAq_RszrlE3mapyACyqd__qd__Gqd__xXElF6ResultL_qd__mfp\">Result<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1423
              }
            ],
            "key.bodylength" : 233,
            "key.bodyoffset" : 1504,
            "key.doc.column" : 17,
            "key.doc.comment" : "Apply a given `transform` to all nodes in a `Tree`.",
            "key.doc.declaration" : "public func map<Result>(_ transform: (Leaf) -> Result) -> Tree<Result, Result>",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift\" line=\"55\" column=\"17\"><Name>map(_:)<\/Name><USR>s:14DataStructures4TreeOAAq_RszrlE3mapyACyqd__qd__Gqd__xXElF<\/USR><Declaration>public func map&lt;Result&gt;(_ transform: (Leaf) -&gt; Result) -&gt; Tree&lt;Result, Result&gt;<\/Declaration><CommentParts><Abstract><Para>Apply a given <codeVoice>transform<\/codeVoice> to all nodes in a <codeVoice>Tree<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 55,
            "key.doc.name" : "map(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 56,
            "key.docoffset" : 1363,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>map<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeOAAq_RszrlE3mapyACyqd__qd__Gqd__xXElF6ResultL_qd__mfp\"><decl.generic_type_param.name>Result<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>transform<\/decl.var.parameter.name>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeOAAq_RszrlE4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures4TreeOAAq_RszrlE3mapyACyqd__qd__Gqd__xXElF6ResultL_qd__mfp\">Result<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeOAAq_RszrlE3mapyACyqd__qd__Gqd__xXElF6ResultL_qd__mfp\">Result<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeOAAq_RszrlE3mapyACyqd__qd__Gqd__xXElF6ResultL_qd__mfp\">Result<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 308,
            "key.name" : "map(_:)",
            "key.namelength" : 44,
            "key.nameoffset" : 1435,
            "key.offset" : 1430,
            "key.parsed_declaration" : "public func map <Result> (_ transform: (Leaf) -> Result) -> Tree<Result,Result>",
            "key.parsed_scope.end" : 62,
            "key.parsed_scope.start" : 55,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF\">map&lt;B, L&gt;(_: Transform&lt;B, L&gt;) -&gt; Tree&lt;B, L&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Result<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SingleTypedTree.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Result<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 6,
                "key.name" : "Result",
                "key.namelength" : 6,
                "key.nameoffset" : 1440,
                "key.offset" : 1440,
                "key.parsed_declaration" : "public func map <Result> (_ transform: (Leaf) -> Result) -> Tree<Result,Result>",
                "key.parsed_scope.end" : 55,
                "key.parsed_scope.start" : 55,
                "key.typename" : "Result.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures4TreeOAAq_RszrlE3mapyACyqd__qd__Gqd__xXElF6ResultL_qd__mfp"
              }
            ],
            "key.typename" : "<Branch, Leaf, Result where Branch == Leaf> (Tree<Branch, Leaf>) -> ((Leaf) -> Result) -> Tree<Result, Result>",
            "key.typeusr" : "$Sy14DataStructures4TreeOyqd__qd__Gqd__xXEcluD",
            "key.usr" : "s:14DataStructures4TreeOAAq_RszrlE3mapyACyqd__qd__Gqd__xXElF"
          }
        ],
        "key.typename" : "Tree<Branch, Leaf>.Type",
        "key.typeusr" : "$S14DataStructures4TreeOyxq_GmD",
        "key.usr" : "s:14DataStructures4TreeO"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3843,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct SortedArray&lt;Element&gt; : <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/Type>, <Type usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/Type> where Element : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 144
          }
        ],
        "key.bodylength" : 1967,
        "key.bodyoffset" : 259,
        "key.doc.column" : 15,
        "key.doc.comment" : "`Array` that keeps itself sorted.",
        "key.doc.declaration" : "public struct SortedArray<Element> : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"12\" column=\"15\"><Name>SortedArray<\/Name><USR>s:14DataStructures11SortedArrayV<\/USR><Declaration>public struct SortedArray&lt;Element&gt; : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable<\/Declaration><CommentParts><Abstract><Para><codeVoice>Array<\/codeVoice> that keeps itself sorted.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "SortedArray",
        "key.doc.type" : "Class",
        "key.doclength" : 38,
        "key.docoffset" : 106,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 30,
            "key.offset" : 197
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 24,
            "key.offset" : 233
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/ref.protocol>, <ref.protocol usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "RandomAccessCollectionWrapping"
          },
          {
            "key.name" : "SortedCollectionWrapping"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 2076,
        "key.name" : "SortedArray",
        "key.namelength" : 11,
        "key.nameoffset" : 158,
        "key.offset" : 151,
        "key.parsed_declaration" : "public struct SortedArray <Element: Comparable>:\n    RandomAccessCollectionWrapping,\n    SortedCollectionWrapping",
        "key.parsed_scope.end" : 79,
        "key.parsed_scope.start" : 12,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Element : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 10,
                "key.offset" : 180
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Element<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Comparable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 19,
            "key.name" : "Element",
            "key.namelength" : 7,
            "key.nameoffset" : 171,
            "key.offset" : 171,
            "key.parsed_declaration" : "public struct SortedArray <Element: Comparable>:",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV7Elementa\">Element<\/RelatedName>"
              }
            ],
            "key.typename" : "Element.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures11SortedArrayV7Elementxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var base: [Element]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 322
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Underlying storage of elements contained herein.",
            "key.doc.declaration" : "public var base: [Element]",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"18\" column=\"16\"><Name>base<\/Name><USR>s:14DataStructures11SortedArrayV4baseSayxGvp<\/USR><Declaration>public var base: [Element]<\/Declaration><CommentParts><Abstract><Para>Underlying storage of elements contained herein.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 18,
            "key.doc.name" : "base",
            "key.doc.type" : "Other",
            "key.doclength" : 53,
            "key.docoffset" : 265,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>base<\/decl.name>: <decl.var.type>[Element]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "base",
            "key.namelength" : 4,
            "key.nameoffset" : 333,
            "key.offset" : 329,
            "key.overrides" : [
              {
                "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingP4base4BaseQzvp"
              },
              {
                "key.usr" : "s:14DataStructures24SortedCollectionWrappingP4base4BaseQzvp"
              }
            ],
            "key.parsed_declaration" : "public var base: [Element] = []",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[Element]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures11SortedArrayV4baseSayxGvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - Initializers",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 362
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 427
              }
            ],
            "key.bodylength" : 1,
            "key.bodyoffset" : 442,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create an empty `SortedArray`.",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"23\" column=\"12\"><Name>init()<\/Name><USR>s:14DataStructures11SortedArrayVACyxGycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Create an empty <codeVoice>SortedArray<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 23,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 35,
            "key.docoffset" : 388,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 10,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 434,
            "key.offset" : 434,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV12arrayLiteralACyxGxd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              }
            ],
            "key.typename" : "<Element where Element : Comparable> (SortedArray<Element>.Type) -> () -> SortedArray<Element>",
            "key.typeusr" : "$S14DataStructures11SortedArrayVyxGycD",
            "key.usr" : "s:14DataStructures11SortedArrayVACyxGycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init&lt;S&gt;(_ elements: <Type usr=\"s:14DataStructures11SortedArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp\">S<\/Type>) where Element == S.Element, S : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 520
              }
            ],
            "key.bodylength" : 50,
            "key.bodyoffset" : 593,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a `SortedArray` with the given sequence of `elements`.",
            "key.doc.declaration" : "public init<S>(_ elements: S) where Element == S.Element, S : Sequence",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"26\" column=\"12\"><Name>init(_:)<\/Name><USR>s:14DataStructures11SortedArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc<\/USR><Declaration>public init&lt;S&gt;(_ elements: S) where Element == S.Element, S : Sequence<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>SortedArray<\/codeVoice> with the given sequence of <codeVoice>elements<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 26,
            "key.doc.name" : "init(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 66,
            "key.docoffset" : 450,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:14DataStructures11SortedArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp\"><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures11SortedArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp\">S<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element == S.Element<\/decl.generic_type_requirement>, <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 117,
            "key.name" : "init(_:)",
            "key.namelength" : 24,
            "key.nameoffset" : 527,
            "key.offset" : 527,
            "key.parsed_declaration" : "public init <S> (_ elements: S) where S: Sequence, S.Element == Element",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 26,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayVACyxGycfc\">init()<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV12arrayLiteralACyxGxd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>S<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "S",
                "key.namelength" : 1,
                "key.nameoffset" : 533,
                "key.offset" : 533,
                "key.parsed_declaration" : "public init <S> (_ elements: S) where S: Sequence, S.Element == Element",
                "key.parsed_scope.end" : 26,
                "key.parsed_scope.start" : 26,
                "key.typename" : "S.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures11SortedArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp"
              }
            ],
            "key.typename" : "<Element, S where Element : Comparable, Element == S.Element, S : Sequence> (SortedArray<Element>.Type) -> (S) -> SortedArray<Element>",
            "key.typeusr" : "$Sy14DataStructures11SortedArrayVyxGqd__c7ElementQyd__RszSTRd__luD",
            "key.usr" : "s:14DataStructures11SortedArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 653
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func remove(_ element: <Type usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 822
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 815
              }
            ],
            "key.bodylength" : 102,
            "key.bodyoffset" : 864,
            "key.doc.column" : 26,
            "key.doc.comment" : "Remove the given `element`, if it is contained herein.\n\n- TODO: Make `throws` instead of returning silently.",
            "key.doc.declaration" : "public mutating func remove(_ element: Element)",
            "key.doc.discussion" : [
              {
                "TODO" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"35\" column=\"26\"><Name>remove(_:)<\/Name><USR>s:14DataStructures11SortedArrayV6removeyyxF<\/USR><Declaration>public mutating func remove(_ element: Element)<\/Declaration><CommentParts><Abstract><Para>Remove the given <codeVoice>element<\/codeVoice>, if it is contained herein.<\/Para><\/Abstract><Discussion><TODO><Para>Make <codeVoice>throws<\/codeVoice> instead of returning silently.<\/Para><\/TODO><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 35,
            "key.doc.name" : "remove(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 128,
            "key.docoffset" : 683,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>remove<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 136,
            "key.name" : "remove(_:)",
            "key.namelength" : 26,
            "key.nameoffset" : 836,
            "key.offset" : 831,
            "key.parsed_declaration" : "public mutating func remove(_ element: Element)",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 35,
            "key.substructure" : [

            ],
            "key.typename" : "<Element where Element : Comparable> (inout SortedArray<Element>) -> (Element) -> ()",
            "key.typeusr" : "$SyyxcD",
            "key.usr" : "s:14DataStructures11SortedArrayV6removeyyxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func insert(_ element: <Type usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1053
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1046
              }
            ],
            "key.bodylength" : 90,
            "key.bodyoffset" : 1095,
            "key.doc.column" : 26,
            "key.doc.comment" : "Insert the given `element`.\n\n- Complexity: O(_n_)",
            "key.doc.declaration" : "public mutating func insert(_ element: Element)",
            "key.doc.discussion" : [
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"43\" column=\"26\"><Name>insert(_:)<\/Name><USR>s:14DataStructures11SortedArrayV6insertyyxF<\/USR><Declaration>public mutating func insert(_ element: Element)<\/Declaration><CommentParts><Abstract><Para>Insert the given <codeVoice>element<\/codeVoice>.<\/Para><\/Abstract><Discussion><Complexity><Para>O(<emphasis>n<\/emphasis>)<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 43,
            "key.doc.name" : "insert(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 69,
            "key.docoffset" : 973,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>insert<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 124,
            "key.name" : "insert(_:)",
            "key.namelength" : 26,
            "key.nameoffset" : 1067,
            "key.offset" : 1062,
            "key.parsed_declaration" : "public mutating func insert(_ element: Element)",
            "key.parsed_scope.end" : 46,
            "key.parsed_scope.start" : 43,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV6insert10contentsOfyqd___t7ElementQyd__RszSTRd__lF\">insert(contentsOf:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let index: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>index<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 36,
                "key.name" : "index",
                "key.namelength" : 5,
                "key.nameoffset" : 1108,
                "key.offset" : 1104,
                "key.parsed_declaration" : "let index = self.index(for: element)",
                "key.parsed_scope.end" : 44,
                "key.parsed_scope.start" : 44,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV5index2ofSiSgx_tF\">index(of:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV5index33_6D82534077A23065B8749B4A4D339203LL3forSix_tF\">index(for:)<\/RelatedName>"
                  }
                ],
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:14DataStructures11SortedArrayV6insertyyxF5indexL_Sivp"
              }
            ],
            "key.typename" : "<Element where Element : Comparable> (inout SortedArray<Element>) -> (Element) -> ()",
            "key.typeusr" : "$SyyxcD",
            "key.usr" : "s:14DataStructures11SortedArrayV6insertyyxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func insert&lt;S&gt;(contentsOf elements: <Type usr=\"s:14DataStructures11SortedArrayV6insert10contentsOfyqd___t7ElementQyd__RszSTRd__lF1SL_qd__mfp\">S<\/Type>) where Element == S.Element, S : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1255
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1248
              }
            ],
            "key.bodylength" : 45,
            "key.bodyoffset" : 1358,
            "key.doc.column" : 26,
            "key.doc.comment" : "Insert the contents of another sequence of `T`.",
            "key.doc.declaration" : "public mutating func insert<S>(contentsOf elements: S) where Element == S.Element, S : Sequence",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"49\" column=\"26\"><Name>insert(contentsOf:)<\/Name><USR>s:14DataStructures11SortedArrayV6insert10contentsOfyqd___t7ElementQyd__RszSTRd__lF<\/USR><Declaration>public mutating func insert&lt;S&gt;(contentsOf elements: S) where Element == S.Element, S : Sequence<\/Declaration><CommentParts><Abstract><Para>Insert the contents of another sequence of <codeVoice>T<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 49,
            "key.doc.name" : "insert(contentsOf:)",
            "key.doc.type" : "Function",
            "key.doclength" : 52,
            "key.docoffset" : 1192,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>insert<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures11SortedArrayV6insert10contentsOfyqd___t7ElementQyd__RszSTRd__lF1SL_qd__mfp\"><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>contentsOf<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV6insert10contentsOfyqd___t7ElementQyd__RszSTRd__lF1SL_qd__mfp\">S<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element == S.Element<\/decl.generic_type_requirement>, <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 140,
            "key.name" : "insert(contentsOf:)",
            "key.namelength" : 35,
            "key.nameoffset" : 1269,
            "key.offset" : 1264,
            "key.parsed_declaration" : "public mutating func insert <S> (contentsOf elements: S)\n    where S: Sequence, S.Element == Element",
            "key.parsed_scope.end" : 53,
            "key.parsed_scope.start" : 49,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV6insertyyxF\">insert(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>S<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "S",
                "key.namelength" : 1,
                "key.nameoffset" : 1277,
                "key.offset" : 1277,
                "key.parsed_declaration" : "public mutating func insert <S> (contentsOf elements: S)",
                "key.parsed_scope.end" : 49,
                "key.parsed_scope.start" : 49,
                "key.typename" : "S.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures11SortedArrayV6insert10contentsOfyqd___t7ElementQyd__RszSTRd__lF1SL_qd__mfp"
              }
            ],
            "key.typename" : "<Element, S where Element : Comparable, Element == S.Element, S : Sequence> (inout SortedArray<Element>) -> (S) -> ()",
            "key.typeusr" : "$S10contentsOfyqd___tc7ElementQyd__RszSTRd__luD",
            "key.usr" : "s:14DataStructures11SortedArrayV6insert10contentsOfyqd___t7ElementQyd__RszSTRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(of element: <Type usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1492
              }
            ],
            "key.bodylength" : 143,
            "key.bodyoffset" : 1540,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: Index for the given `element`, if it exists. Otherwise, `nil`.",
            "key.doc.declaration" : "public func index(of element: Element) -> Int?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"56\" column=\"17\"><Name>index(of:)<\/Name><USR>s:14DataStructures11SortedArrayV5index2ofSiSgx_tF<\/USR><Declaration>public func index(of element: Element) -&gt; Int?<\/Declaration><CommentParts><ResultDiscussion><Para>Index for the given <codeVoice>element<\/codeVoice>, if it exists. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 56,
            "key.doc.name" : "index(of:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Index for the given `element`, if it exists. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 78,
            "key.docoffset" : 1410,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 185,
            "key.name" : "index(of:)",
            "key.namelength" : 26,
            "key.nameoffset" : 1504,
            "key.offset" : 1499,
            "key.parsed_declaration" : "public func index(of element: Element) -> Int?",
            "key.parsed_scope.end" : 60,
            "key.parsed_scope.start" : 56,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV5index33_6D82534077A23065B8749B4A4D339203LL3forSix_tF\">index(for:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let index: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>index<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 36,
                "key.name" : "index",
                "key.namelength" : 5,
                "key.nameoffset" : 1553,
                "key.offset" : 1549,
                "key.parsed_declaration" : "let index = self.index(for: element)",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 57,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV5index2ofSiSgx_tF\">index(of:)<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV5index33_6D82534077A23065B8749B4A4D339203LL3forSix_tF\">index(for:)<\/RelatedName>"
                  }
                ],
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:14DataStructures11SortedArrayV5index2ofSiSgx_tFADL_Sivp"
              }
            ],
            "key.typename" : "<Element where Element : Comparable> (SortedArray<Element>) -> (Element) -> Int?",
            "key.typeusr" : "$S2ofSiSgx_tcD",
            "key.usr" : "s:14DataStructures11SortedArrayV5index2ofSiSgx_tF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 78,
            "key.name" : "FIXME: Move to extension on `BidirectionCollection where Element: Comparable`.",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1747
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 32,
            "key.name" : "FIXME: Add to `SortedCollection`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1833
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func index(for element: <Type usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1870
              }
            ],
            "key.bodylength" : 305,
            "key.bodyoffset" : 1919,
            "key.doc.comment" : "Binary search to find insertion point",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 347,
            "key.name" : "index(for:)",
            "key.namelength" : 27,
            "key.nameoffset" : 1883,
            "key.offset" : 1878,
            "key.parsed_declaration" : "private func index(for element: Element) -> Int",
            "key.parsed_scope.end" : 78,
            "key.parsed_scope.start" : 66,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV5index2ofSiSgx_tF\">index(of:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var start: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>start<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 13,
                "key.name" : "start",
                "key.namelength" : 5,
                "key.nameoffset" : 1932,
                "key.offset" : 1928,
                "key.parsed_declaration" : "var start = 0",
                "key.parsed_scope.end" : 67,
                "key.parsed_scope.start" : 67,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:14DataStructures11SortedArrayV5index33_6D82534077A23065B8749B4A4D339203LL3forSix_tF5startL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>var end: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>end<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 20,
                "key.name" : "end",
                "key.namelength" : 3,
                "key.nameoffset" : 1954,
                "key.offset" : 1950,
                "key.parsed_declaration" : "var end = base.count",
                "key.parsed_scope.end" : 68,
                "key.parsed_scope.start" : 68,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:14DataStructures11SortedArrayV5index33_6D82534077A23065B8749B4A4D339203LL3forSix_tF3endL_Sivp"
              }
            ],
            "key.typename" : "<Element where Element : Comparable> (SortedArray<Element>) -> (Element) -> Int",
            "key.typeusr" : "$S3forSix_tcD",
            "key.usr" : "s:14DataStructures11SortedArrayV5index33_6D82534077A23065B8749B4A4D339203LL3forSix_tF"
          }
        ],
        "key.typename" : "SortedArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures11SortedArrayVyxGmD",
        "key.usr" : "s:14DataStructures11SortedArrayV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct SortedArray&lt;Element&gt; : <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/Type>, <Type usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/Type> where Element : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.bodylength" : 196,
        "key.bodyoffset" : 2252,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct SortedArray<Element> : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"12\" column=\"15\"><Name>SortedArray<\/Name><USR>s:14DataStructures11SortedArrayV<\/USR><Declaration>public struct SortedArray&lt;Element&gt; : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable<\/Declaration><CommentParts><Abstract><Para><codeVoice>Array<\/codeVoice> that keeps itself sorted.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "SortedArray",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/ref.protocol>, <ref.protocol usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 220,
        "key.name" : "SortedArray",
        "key.namelength" : 11,
        "key.nameoffset" : 2239,
        "key.offset" : 2229,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(bounds: <Type usr=\"s:Sn\">Range<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV4Basea\">Base<\/Type>.<Type usr=\"s:Sa5Indexa\">Index<\/Type>&gt;) -&gt; <Type usr=\"s:s5SliceV\">Slice<\/Type>&lt;<Type usr=\"s:14DataStructures24SortedCollectionWrappingP4BaseQa\">Base<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2332
              }
            ],
            "key.bodylength" : 54,
            "key.bodyoffset" : 2392,
            "key.doc.column" : 12,
            "key.doc.comment" : "- Returns: The slice of the `SortedArray` for the given `bounds`.",
            "key.doc.declaration" : "public subscript(bounds: Range<Base.Index>) -> Slice<Base> { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"84\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:14DataStructures11SortedArrayVys5SliceVySayxGGSnySiGcip<\/USR><Declaration>public subscript(bounds: Range&lt;Base.Index&gt;) -&gt; Slice&lt;Base&gt; { get }<\/Declaration><CommentParts><ResultDiscussion><Para>The slice of the <codeVoice>SortedArray<\/codeVoice> for the given <codeVoice>bounds<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 84,
            "key.doc.name" : "subscript(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "The slice of the `SortedArray` for the given `bounds`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 70,
            "key.docoffset" : 2258,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>bounds<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sn\">Range<\/ref.struct>&lt;<ref.typealias usr=\"s:14DataStructures11SortedArrayV4Basea\">Base<\/ref.typealias>.<ref.typealias usr=\"s:Sa5Indexa\">Index<\/ref.typealias>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5SliceV\">Slice<\/ref.struct>&lt;<ref.associatedtype usr=\"s:14DataStructures24SortedCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>&gt;<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 108,
            "key.name" : "subscript(_:)",
            "key.namelength" : 36,
            "key.nameoffset" : 2339,
            "key.offset" : 2339,
            "key.overrides" : [
              {
                "key.usr" : "s:Sky11SubSequenceQzSny5IndexQzGcip"
              },
              {
                "key.usr" : "s:Sly11SubSequenceQzSny5IndexQzGcip"
              },
              {
                "key.usr" : "s:SKy11SubSequenceQzSny5IndexQzGcip"
              }
            ],
            "key.parsed_declaration" : "public subscript(bounds: Range<Base.Index>) -> Slice<Base>",
            "key.parsed_scope.end" : 86,
            "key.parsed_scope.start" : 84,
            "key.substructure" : [

            ],
            "key.typename" : "<Element where Element : Comparable> (Range<Int>) -> Slice<[Element]>",
            "key.typeusr" : "$Sys5SliceVySayxGGSnySiGcD",
            "key.usr" : "s:14DataStructures11SortedArrayVys5SliceVySayxGGSnySiGcip"
          }
        ],
        "key.typename" : "SortedArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures11SortedArrayVyxGmD",
        "key.usr" : "s:14DataStructures11SortedArrayV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct SortedArray&lt;Element&gt; : <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/Type>, <Type usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/Type> where Element : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.bodylength" : 246,
        "key.bodyoffset" : 2485,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct SortedArray<Element> : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"12\" column=\"15\"><Name>SortedArray<\/Name><USR>s:14DataStructures11SortedArrayV<\/USR><Declaration>public struct SortedArray&lt;Element&gt; : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable<\/Declaration><CommentParts><Abstract><Para><codeVoice>Array<\/codeVoice> that keeps itself sorted.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "SortedArray",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 2474
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/ref.protocol>, <ref.protocol usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Equatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 281,
        "key.name" : "SortedArray",
        "key.namelength" : 11,
        "key.nameoffset" : 2461,
        "key.offset" : 2451,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 17,
            "key.name" : "MARK: - Equatable",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2494
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func == &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ1TL_qd__mfp\">T<\/Type>&gt;, rhs: <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ1TL_qd__mfp\">T<\/Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2610
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 2688,
            "key.doc.column" : 24,
            "key.doc.comment" : "- returns: `true` if all elements in both arrays are equivalent. Otherwise, `false`.",
            "key.doc.declaration" : "public static func == <T>(lhs: SortedArray<T>, rhs: SortedArray<T>) -> Bool where T : Comparable",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"94\" column=\"24\"><Name>==(_:_:)<\/Name><USR>s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ<\/USR><Declaration>public static func == &lt;T&gt;(lhs: SortedArray&lt;T&gt;, rhs: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if all elements in both arrays are equivalent. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 94,
            "key.doc.name" : "==(_:_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if all elements in both arrays are equivalent. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 89,
            "key.docoffset" : 2517,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ1TL_qd__mfp\">T<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ1TL_qd__mfp\">T<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 113,
            "key.name" : "==(_:_:)",
            "key.namelength" : 49,
            "key.nameoffset" : 2629,
            "key.offset" : 2617,
            "key.overrides" : [
              {
                "key.usr" : "s:SQ2eeoiySbx_xtFZ"
              }
            ],
            "key.parsed_declaration" : "public static func == <T> (lhs: SortedArray<T>, rhs: SortedArray<T>) -> Bool",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 94,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 2633,
                "key.offset" : 2633,
                "key.parsed_declaration" : "public static func == <T> (lhs: SortedArray<T>, rhs: SortedArray<T>) -> Bool",
                "key.parsed_scope.end" : 94,
                "key.parsed_scope.start" : 94,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Element, T where Element : Comparable, T : Comparable> (SortedArray<Element>.Type) -> (SortedArray<T>, SortedArray<T>) -> Bool",
            "key.typeusr" : "$SySb14DataStructures11SortedArrayVyqd__G_ADtcSLRd__luD",
            "key.usr" : "s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ"
          }
        ],
        "key.typename" : "SortedArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures11SortedArrayVyxGmD",
        "key.usr" : "s:14DataStructures11SortedArrayV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct SortedArray&lt;Element&gt; : <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/Type>, <Type usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/Type> where Element : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.bodylength" : 418,
        "key.bodyoffset" : 2767,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct SortedArray<Element> : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"12\" column=\"15\"><Name>SortedArray<\/Name><USR>s:14DataStructures11SortedArrayV<\/USR><Declaration>public struct SortedArray&lt;Element&gt; : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable<\/Declaration><CommentParts><Abstract><Para><codeVoice>Array<\/codeVoice> that keeps itself sorted.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "SortedArray",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 2757
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/ref.protocol>, <ref.protocol usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Additive"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 452,
        "key.name" : "SortedArray",
        "key.namelength" : 11,
        "key.nameoffset" : 2744,
        "key.offset" : 2734,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 16,
            "key.name" : "MARK: - Additive",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2776
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var zero: <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2838
              }
            ],
            "key.bodylength" : 34,
            "key.bodyoffset" : 2884,
            "key.doc.column" : 23,
            "key.doc.comment" : "- Returns: Empty `SortedArray`.",
            "key.doc.declaration" : "public static var zero: SortedArray<Element> { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"104\" column=\"23\"><Name>zero<\/Name><USR>s:14DataStructures11SortedArrayV4zeroACyxGvpZ<\/USR><Declaration>public static var zero: SortedArray&lt;Element&gt; { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Empty <codeVoice>SortedArray<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 104,
            "key.doc.name" : "zero",
            "key.doc.result_discussion" : [
              {
                "Para" : "Empty `SortedArray`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 36,
            "key.docoffset" : 2798,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>zero<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "zero",
            "key.namelength" : 4,
            "key.nameoffset" : 2856,
            "key.offset" : 2845,
            "key.parsed_declaration" : "public static var zero: SortedArray<Element>",
            "key.parsed_scope.end" : 106,
            "key.parsed_scope.start" : 104,
            "key.typename" : "SortedArray<Element>",
            "key.typeusr" : "$S14DataStructures11SortedArrayVyxGD",
            "key.usr" : "s:14DataStructures11SortedArrayV4zeroACyxGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func + &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ1TL_qd__mfp\">T<\/Type>&gt;, rhs: <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ1TL_qd__mfp\">T<\/Type>&gt;) -&gt; <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ1TL_qd__mfp\">T<\/Type>&gt; where T : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3005
              }
            ],
            "key.bodylength" : 91,
            "key.bodyoffset" : 3092,
            "key.doc.column" : 24,
            "key.doc.comment" : "- returns: `SortedArray` with the contents of two `SortedArray` values.",
            "key.doc.declaration" : "public static func + <T>(lhs: SortedArray<T>, rhs: SortedArray<T>) -> SortedArray<T> where T : Comparable",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"109\" column=\"24\"><Name>+(_:_:)<\/Name><USR>s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ<\/USR><Declaration>public static func + &lt;T&gt;(lhs: SortedArray&lt;T&gt;, rhs: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>SortedArray<\/codeVoice> with the contents of two <codeVoice>SortedArray<\/codeVoice> values.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 109,
            "key.doc.name" : "+(_:_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`SortedArray` with the contents of two `SortedArray` values."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 76,
            "key.docoffset" : 2925,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ1TL_qd__mfp\">T<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ1TL_qd__mfp\">T<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ1TL_qd__mfp\">T<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 172,
            "key.name" : "+(_:_:)",
            "key.namelength" : 48,
            "key.nameoffset" : 3024,
            "key.offset" : 3012,
            "key.parsed_declaration" : "public static func + <T> (lhs: SortedArray<T>, rhs: SortedArray<T>) -> SortedArray<T>",
            "key.parsed_scope.end" : 113,
            "key.parsed_scope.start" : 109,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 3027,
                "key.offset" : 3027,
                "key.parsed_declaration" : "public static func + <T> (lhs: SortedArray<T>, rhs: SortedArray<T>) -> SortedArray<T>",
                "key.parsed_scope.end" : 109,
                "key.parsed_scope.start" : 109,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ1TL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>var result: <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;T&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>result<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;T&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 16,
                "key.name" : "result",
                "key.namelength" : 6,
                "key.nameoffset" : 3105,
                "key.offset" : 3101,
                "key.parsed_declaration" : "var result = lhs",
                "key.parsed_scope.end" : 110,
                "key.parsed_scope.start" : 110,
                "key.typename" : "SortedArray<T>",
                "key.typeusr" : "$S14DataStructures11SortedArrayVyqd__GD",
                "key.usr" : "s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ6resultL_AEvp"
              }
            ],
            "key.typename" : "<Element, T where Element : Comparable, T : Comparable> (SortedArray<Element>.Type) -> (SortedArray<T>, SortedArray<T>) -> SortedArray<T>",
            "key.typeusr" : "$Sy14DataStructures11SortedArrayVyqd__GAD_ADtcSLRd__luD",
            "key.usr" : "s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ"
          }
        ],
        "key.typename" : "SortedArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures11SortedArrayVyxGmD",
        "key.usr" : "s:14DataStructures11SortedArrayV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct SortedArray&lt;Element&gt; : <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/Type>, <Type usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/Type> where Element : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.bodylength" : 373,
        "key.bodyoffset" : 3219,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct SortedArray<Element> : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"12\" column=\"15\"><Name>SortedArray<\/Name><USR>s:14DataStructures11SortedArrayV<\/USR><Declaration>public struct SortedArray&lt;Element&gt; : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable<\/Declaration><CommentParts><Abstract><Para><codeVoice>Array<\/codeVoice> that keeps itself sorted.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "SortedArray",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 6,
            "key.offset" : 3211
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/ref.protocol>, <ref.protocol usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Monoid"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 405,
        "key.name" : "SortedArray",
        "key.namelength" : 11,
        "key.nameoffset" : 3198,
        "key.offset" : 3188,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: - Monoid",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3228
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var identity: <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3288
              }
            ],
            "key.bodylength" : 26,
            "key.bodyoffset" : 3338,
            "key.doc.column" : 23,
            "key.doc.comment" : "- Returns: Empty `SortedArray`.",
            "key.doc.declaration" : "public static var identity: SortedArray<Element> { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"121\" column=\"23\"><Name>identity<\/Name><USR>s:14DataStructures11SortedArrayV8identityACyxGvpZ<\/USR><Declaration>public static var identity: SortedArray&lt;Element&gt; { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Empty <codeVoice>SortedArray<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 121,
            "key.doc.name" : "identity",
            "key.doc.result_discussion" : [
              {
                "Para" : "Empty `SortedArray`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 36,
            "key.docoffset" : 3248,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>identity<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 70,
            "key.name" : "identity",
            "key.namelength" : 8,
            "key.nameoffset" : 3306,
            "key.offset" : 3295,
            "key.parsed_declaration" : "public static var identity: SortedArray<Element>",
            "key.parsed_scope.end" : 123,
            "key.parsed_scope.start" : 121,
            "key.typename" : "SortedArray<Element>",
            "key.typeusr" : "$S14DataStructures11SortedArrayVyxGD",
            "key.usr" : "s:14DataStructures11SortedArrayV8identityACyxGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func &lt;&gt; (lhs: <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/Type>&gt;, rhs: <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/Type>&gt;) -&gt; <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3446
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 3560,
            "key.doc.column" : 24,
            "key.doc.comment" : "- Returns: Composition of two of the same `Semigroup` type values.",
            "key.doc.declaration" : "public static func <> (lhs: SortedArray<Element>, rhs: SortedArray<Element>) -> SortedArray<Element>",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"126\" column=\"24\"><Name>&lt;&gt;(_:_:)<\/Name><USR>s:14DataStructures11SortedArrayV2lgoiyACyxGAE_AEtFZ<\/USR><Declaration>public static func &lt;&gt; (lhs: SortedArray&lt;Element&gt;, rhs: SortedArray&lt;Element&gt;) -&gt; SortedArray&lt;Element&gt;<\/Declaration><CommentParts><ResultDiscussion><Para>Composition of two of the same <codeVoice>Semigroup<\/codeVoice> type values.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 126,
            "key.doc.name" : "<>(_:_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Composition of two of the same `Semigroup` type values."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 71,
            "key.docoffset" : 3371,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt;&gt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 138,
            "key.name" : "<>(_:_:)",
            "key.namelength" : 57,
            "key.nameoffset" : 3465,
            "key.offset" : 3453,
            "key.parsed_declaration" : "public static func <> (lhs: SortedArray<Element>, rhs: SortedArray<Element>)\n    -> SortedArray<Element>",
            "key.parsed_scope.end" : 130,
            "key.parsed_scope.start" : 126,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV2lgoiyACyxGAE_AEtFZ\">&lt;&gt; (_: Stack&lt;Element&gt;, _: Stack&lt;Element&gt;) -&gt; Stack&lt;Element&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let lhs: <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
                "key.fully_annotated_decl" : "<decl.var.parameter><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>",
                "key.kind" : "source.lang.swift.decl.var.parameter",
                "key.length" : 3,
                "key.name" : "lhs",
                "key.offset" : 3469,
                "key.parent_loc" : 3465,
                "key.parsed_declaration" : "public static func <> (lhs: SortedArray<Element>, rhs: SortedArray<Element>)",
                "key.parsed_scope.end" : 126,
                "key.parsed_scope.start" : 126,
                "key.typename" : "SortedArray<Element>",
                "key.typeusr" : "$S14DataStructures11SortedArrayVyxGD",
                "key.usr" : "s:14DataStructures11SortedArrayV2lgoiyACyxGAE_AEtFZ3lhsL_AEvp"
              }
            ],
            "key.typename" : "<Element where Element : Comparable> (SortedArray<Element>.Type) -> (SortedArray<Element>, SortedArray<Element>) -> SortedArray<Element>",
            "key.typeusr" : "$Sy14DataStructures11SortedArrayVyxGAD_ADtcD",
            "key.usr" : "s:14DataStructures11SortedArrayV2lgoiyACyxGAE_AEtFZ"
          }
        ],
        "key.typename" : "SortedArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures11SortedArrayVyxGmD",
        "key.usr" : "s:14DataStructures11SortedArrayV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct SortedArray&lt;Element&gt; : <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/Type>, <Type usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/Type> where Element : <Type usr=\"s:SL\">Comparable<\/Type><\/Declaration>",
        "key.bodylength" : 196,
        "key.bodyoffset" : 3645,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct SortedArray<Element> : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"12\" column=\"15\"><Name>SortedArray<\/Name><USR>s:14DataStructures11SortedArrayV<\/USR><Declaration>public struct SortedArray&lt;Element&gt; : RandomAccessCollectionWrapping, SortedCollectionWrapping where Element : Comparable<\/Declaration><CommentParts><Abstract><Para><codeVoice>Array<\/codeVoice> that keeps itself sorted.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "SortedArray",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 25,
            "key.offset" : 3618
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedArray<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures30RandomAccessCollectionWrappingP\">RandomAccessCollectionWrapping<\/ref.protocol>, <ref.protocol usr=\"s:14DataStructures24SortedCollectionWrappingP\">SortedCollectionWrapping<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ExpressibleByArrayLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 247,
        "key.name" : "SortedArray",
        "key.namelength" : 11,
        "key.nameoffset" : 3605,
        "key.offset" : 3595,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 33,
            "key.name" : "MARK: - ExpressibleByArrayLiteral",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3654
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(arrayLiteral elements: <Type usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/Type>...)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3758
              }
            ],
            "key.bodylength" : 33,
            "key.bodyoffset" : 3806,
            "key.doc.column" : 12,
            "key.doc.comment" : "- returns: Create a `SortedArray` with an array literal.",
            "key.doc.declaration" : "public init(arrayLiteral elements: Element...)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift\" line=\"138\" column=\"12\"><Name>init(arrayLiteral:)<\/Name><USR>s:14DataStructures11SortedArrayV12arrayLiteralACyxGxd_tcfc<\/USR><Declaration>public init(arrayLiteral elements: Element...)<\/Declaration><CommentParts><ResultDiscussion><Para>Create a <codeVoice>SortedArray<\/codeVoice> with an array literal.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 138,
            "key.doc.name" : "init(arrayLiteral:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Create a `SortedArray` with an array literal."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 61,
            "key.docoffset" : 3693,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedArray.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>arrayLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures11SortedArrayV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type>...<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 75,
            "key.name" : "init(arrayLiteral:)",
            "key.namelength" : 39,
            "key.nameoffset" : 3765,
            "key.offset" : 3765,
            "key.overrides" : [
              {
                "key.usr" : "s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(arrayLiteral elements: Element...)",
            "key.parsed_scope.end" : 140,
            "key.parsed_scope.start" : 138,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayVACyxGycfc\">init()<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayVyACyxGqd__c7ElementQyd__RszSTRd__lufc\">init(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element where Element : Comparable> (SortedArray<Element>.Type) -> (Element...) -> SortedArray<Element>",
            "key.typeusr" : "$S12arrayLiteral14DataStructures11SortedArrayVyxGxd_tcD",
            "key.usr" : "s:14DataStructures11SortedArrayV12arrayLiteralACyxGxd_tcfc"
          }
        ],
        "key.typename" : "SortedArray<Element>.Type",
        "key.typeusr" : "$S14DataStructures11SortedArrayVyxGmD",
        "key.usr" : "s:14DataStructures11SortedArrayV"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4756,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct SortedDictionary&lt;Key, Value&gt; : <Type usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/Type> where Key : <Type usr=\"s:SL\">Comparable<\/Type>, Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 143
          }
        ],
        "key.bodylength" : 1767,
        "key.bodyoffset" : 240,
        "key.doc.column" : 15,
        "key.doc.comment" : "Ordered dictionary which has sorted `keys`.",
        "key.doc.declaration" : "public struct SortedDictionary<Key, Value> : DictionaryProtocol where Key : Comparable, Key : Hashable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"10\" column=\"15\"><Name>SortedDictionary<\/Name><USR>s:14DataStructures16SortedDictionaryV<\/USR><Declaration>public struct SortedDictionary&lt;Key, Value&gt; : DictionaryProtocol where Key : Comparable, Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Ordered dictionary which has sorted <codeVoice>keys<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "SortedDictionary",
        "key.doc.type" : "Class",
        "key.doclength" : 48,
        "key.docoffset" : 95,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 187
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedDictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "DictionaryProtocol"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1858,
        "key.name" : "SortedDictionary",
        "key.namelength" : 16,
        "key.nameoffset" : 157,
        "key.offset" : 150,
        "key.parsed_declaration" : "public struct SortedDictionary<Key, Value>: DictionaryProtocol where Key: Hashable & Comparable",
        "key.parsed_scope.end" : 75,
        "key.parsed_scope.start" : 10,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Key<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 3,
            "key.name" : "Key",
            "key.namelength" : 3,
            "key.nameoffset" : 174,
            "key.offset" : 174,
            "key.parsed_declaration" : "public struct SortedDictionary<Key, Value>: DictionaryProtocol where Key: Hashable & Comparable",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures16SortedDictionaryV3Keya\">Key<\/RelatedName>"
              }
            ],
            "key.typename" : "Key.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV3Keyxmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Value<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 5,
            "key.name" : "Value",
            "key.namelength" : 5,
            "key.nameoffset" : 179,
            "key.offset" : 179,
            "key.parsed_declaration" : "public struct SortedDictionary<Key, Value>: DictionaryProtocol where Key: Hashable & Comparable",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures16SortedDictionaryV5Valuea\">Value<\/RelatedName>"
              }
            ],
            "key.typename" : "Value.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV5Valueq_mfp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 32,
            "key.name" : "FIXME: Make `private` in Swift 4",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 285
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal var unsorted: [Key : Value]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 322
              }
            ],
            "key.doc.comment" : "Backing dictionary.",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>unsorted<\/decl.name>: <decl.var.type>[Key : Value]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.name" : "unsorted",
            "key.namelength" : 8,
            "key.nameoffset" : 335,
            "key.offset" : 331,
            "key.parsed_declaration" : "internal var unsorted: [Key: Value] = [:]",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "[Key : Value]",
            "key.typeusr" : "$SSDyxq_GD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV8unsortedSDyxq_Gvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 372
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var values: <Type usr=\"s:s17LazyMapCollectionV\">LazyMapCollection<\/Type>&lt;<Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;<Type usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/Type>&gt;, <Type usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 480
              }
            ],
            "key.bodylength" : 57,
            "key.bodyoffset" : 542,
            "key.doc.column" : 16,
            "key.doc.comment" : "Values contained herein, in order sorted by their associated keys.",
            "key.doc.declaration" : "public var values: LazyMapCollection<SortedArray<Key>, Value> { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"20\" column=\"16\"><Name>values<\/Name><USR>s:14DataStructures16SortedDictionaryV6valuess17LazyMapCollectionVyAA0C5ArrayVyxGq_Gvp<\/USR><Declaration>public var values: LazyMapCollection&lt;SortedArray&lt;Key&gt;, Value&gt; { get }<\/Declaration><CommentParts><Abstract><Para>Values contained herein, in order sorted by their associated keys.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 20,
            "key.doc.name" : "values",
            "key.doc.type" : "Other",
            "key.doclength" : 71,
            "key.docoffset" : 405,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>values<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s17LazyMapCollectionV\">LazyMapCollection<\/ref.struct>&lt;<ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param>&gt;, <ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 113,
            "key.name" : "values",
            "key.namelength" : 6,
            "key.nameoffset" : 491,
            "key.offset" : 487,
            "key.parsed_declaration" : "public var values: LazyMapCollection<SortedArray<Key>,Value>",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 20,
            "key.typename" : "LazyMapCollection<SortedArray<Key>, Value>",
            "key.typeusr" : "$Ss17LazyMapCollectionVy14DataStructures11SortedArrayVyxGq_GD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV6valuess17LazyMapCollectionVyAA0C5ArrayVyxGq_Gvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var keys: <Type usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/Type>&lt;Key&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 627
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Sorted keys.",
            "key.doc.declaration" : "public var keys: DataStructures.SortedArray<Key>",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"25\" column=\"16\"><Name>keys<\/Name><USR>s:14DataStructures16SortedDictionaryV4keysAA0C5ArrayVyxGvp<\/USR><Declaration>public var keys: DataStructures.SortedArray&lt;Key&gt;<\/Declaration><CommentParts><Abstract><Para>Sorted keys.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 25,
            "key.doc.name" : "keys",
            "key.doc.type" : "Other",
            "key.doclength" : 17,
            "key.docoffset" : 606,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>keys<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures11SortedArrayV\">SortedArray<\/ref.struct>&lt;Key&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 31,
            "key.name" : "keys",
            "key.namelength" : 4,
            "key.nameoffset" : 638,
            "key.offset" : 634,
            "key.parsed_declaration" : "public var keys: SortedArray<Key> = []",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 25,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "SortedArray<Key>",
            "key.typeusr" : "$S14DataStructures11SortedArrayVyxGD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV4keysAA0C5ArrayVyxGvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - Initializers",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 674
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 751
              }
            ],
            "key.bodylength" : 1,
            "key.bodyoffset" : 766,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create an empty `SortedOrderedDictionary`.",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"30\" column=\"12\"><Name>init()<\/Name><USR>s:14DataStructures16SortedDictionaryVACyxq_Gycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Create an empty <codeVoice>SortedOrderedDictionary<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 30,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 47,
            "key.docoffset" : 700,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 10,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 758,
            "key.offset" : 758,
            "key.overrides" : [
              {
                "key.usr" : "s:14DataStructures18DictionaryProtocolPxycfc"
              }
            ],
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 30,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures16SortedDictionaryV17dictionaryLiteralACyxq_Gx_q_td_tcfc\">init(dictionaryLiteral:)<\/RelatedName>"
              }
            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (SortedDictionary<Key, Value>.Type) -> () -> SortedDictionary<Key, Value>",
            "key.typeusr" : "$S14DataStructures16SortedDictionaryVyxq_GycD",
            "key.usr" : "s:14DataStructures16SortedDictionaryVACyxq_Gycfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: - Subscripts",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 777
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(key: <Type usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/Type>) -&gt; <Type usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 879
              }
            ],
            "key.bodylength" : 411,
            "key.bodyoffset" : 917,
            "key.doc.column" : 12,
            "key.doc.comment" : "- returns: Value for the given `key`, if available. Otherwise, `nil`.",
            "key.doc.declaration" : "public subscript(key: Key) -> Value? { get set }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"35\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:14DataStructures16SortedDictionaryVyq_Sgxcip<\/USR><Declaration>public subscript(key: Key) -&gt; Value? { get set }<\/Declaration><CommentParts><ResultDiscussion><Para>Value for the given <codeVoice>key<\/codeVoice>, if available. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 35,
            "key.doc.name" : "subscript(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Value for the given `key`, if available. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 74,
            "key.docoffset" : 801,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param>?<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 443,
            "key.name" : "subscript(_:)",
            "key.namelength" : 19,
            "key.nameoffset" : 886,
            "key.offset" : 886,
            "key.overrides" : [
              {
                "key.usr" : "s:14DataStructures18DictionaryProtocolPy5ValueQzSg3KeyQzcip"
              }
            ],
            "key.parsed_declaration" : "public subscript(key: Key) -> Value?",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 35,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures16SortedDictionaryVyx_q_tSicip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (Key) -> Value?",
            "key.typeusr" : "$Syq_SgxcD",
            "key.usr" : "s:14DataStructures16SortedDictionaryVyq_Sgxcip"
          },
          {
            "key.annotated_decl" : "<Declaration>let oldValue: Value?<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>oldValue<\/decl.name>: <decl.var.type>Value?<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 58,
            "key.name" : "oldValue",
            "key.namelength" : 8,
            "key.nameoffset" : 1178,
            "key.offset" : 1174,
            "key.parsed_declaration" : "let oldValue = unsorted.updateValue(newValue, forKey: key)",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 49,
            "key.typename" : "Value?",
            "key.typeusr" : "$Sq_SgD",
            "key.usr" : "s:14DataStructures16SortedDictionaryVyq_Sgxcis8oldValueL_ADvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1338
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func insert(_ value: <Type usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/Type>, key: <Type usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1455
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1448
              }
            ],
            "key.bodylength" : 60,
            "key.bodyoffset" : 1503,
            "key.doc.column" : 26,
            "key.doc.comment" : "Insert the given `value` for the given `key`. Order will be maintained.",
            "key.doc.declaration" : "public mutating func insert(_ value: Value, key: Key)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"60\" column=\"26\"><Name>insert(_:key:)<\/Name><USR>s:14DataStructures16SortedDictionaryV6insert_3keyyq__xtF<\/USR><Declaration>public mutating func insert(_ value: Value, key: Key)<\/Declaration><CommentParts><Abstract><Para>Insert the given <codeVoice>value<\/codeVoice> for the given <codeVoice>key<\/codeVoice>. Order will be maintained.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 60,
            "key.doc.name" : "insert(_:key:)",
            "key.doc.type" : "Function",
            "key.doclength" : 76,
            "key.docoffset" : 1368,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>insert<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>key<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 100,
            "key.name" : "insert(_:key:)",
            "key.namelength" : 32,
            "key.nameoffset" : 1469,
            "key.offset" : 1464,
            "key.parsed_declaration" : "public mutating func insert(_ value: Value, key: Key)",
            "key.parsed_scope.end" : 63,
            "key.parsed_scope.start" : 60,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures16SortedDictionaryV6insert10contentsOfyACyxq_G_tF\">insert(contentsOf:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (inout SortedDictionary<Key, Value>) -> (Value, Key) -> ()",
            "key.typeusr" : "$S_3keyyq__xtcD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV6insert_3keyyq__xtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func insert(contentsOf sortedDictionary: <Type usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/Type>&lt;<Type usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/Type>, <Type usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/Type>&gt;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1642
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1635
              }
            ],
            "key.bodylength" : 66,
            "key.bodyoffset" : 1723,
            "key.doc.column" : 26,
            "key.doc.comment" : "Insert the contents of another `SortedDictionary` value.",
            "key.doc.declaration" : "public mutating func insert(contentsOf sortedDictionary: SortedDictionary<Key, Value>)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"66\" column=\"26\"><Name>insert(contentsOf:)<\/Name><USR>s:14DataStructures16SortedDictionaryV6insert10contentsOfyACyxq_G_tF<\/USR><Declaration>public mutating func insert(contentsOf sortedDictionary: SortedDictionary&lt;Key, Value&gt;)<\/Declaration><CommentParts><Abstract><Para>Insert the contents of another <codeVoice>SortedDictionary<\/codeVoice> value.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 66,
            "key.doc.name" : "insert(contentsOf:)",
            "key.doc.type" : "Function",
            "key.doclength" : 61,
            "key.docoffset" : 1570,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>insert<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>contentsOf<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sortedDictionary<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 139,
            "key.name" : "insert(contentsOf:)",
            "key.namelength" : 65,
            "key.nameoffset" : 1656,
            "key.offset" : 1651,
            "key.parsed_declaration" : "public mutating func insert(contentsOf sortedDictionary: SortedDictionary<Key, Value>)",
            "key.parsed_scope.end" : 68,
            "key.parsed_scope.start" : 66,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures16SortedDictionaryV6insert_3keyyq__xtF\">insert(_:key:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (inout SortedDictionary<Key, Value>) -> (SortedDictionary<Key, Value>) -> ()",
            "key.typeusr" : "$S10contentsOfy14DataStructures16SortedDictionaryVyxq_G_tcD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV6insert10contentsOfyACyxq_G_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func value(at index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1873
              }
            ],
            "key.bodylength" : 88,
            "key.bodyoffset" : 1917,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: Value at the given `index`, if present. Otherwise, `nil`.",
            "key.doc.declaration" : "public func value(at index: Int) -> Value?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"71\" column=\"17\"><Name>value(at:)<\/Name><USR>s:14DataStructures16SortedDictionaryV5value2atq_SgSi_tF<\/USR><Declaration>public func value(at index: Int) -&gt; Value?<\/Declaration><CommentParts><ResultDiscussion><Para>Value at the given <codeVoice>index<\/codeVoice>, if present. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 71,
            "key.doc.name" : "value(at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Value at the given `index`, if present. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 73,
            "key.docoffset" : 1796,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>value<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 126,
            "key.name" : "value(at:)",
            "key.namelength" : 20,
            "key.nameoffset" : 1885,
            "key.offset" : 1880,
            "key.parsed_declaration" : "public func value(at index: Int) -> Value?",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 71,
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (SortedDictionary<Key, Value>) -> (Int) -> Value?",
            "key.typeusr" : "$S2atq_SgSi_tcD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV5value2atq_SgSi_tF"
          }
        ],
        "key.typename" : "SortedDictionary<Key, Value>.Type",
        "key.typeusr" : "$S14DataStructures16SortedDictionaryVyxq_GmD",
        "key.usr" : "s:14DataStructures16SortedDictionaryV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct SortedDictionary&lt;Key, Value&gt; : <Type usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/Type> where Key : <Type usr=\"s:SL\">Comparable<\/Type>, Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 462,
        "key.bodyoffset" : 2050,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct SortedDictionary<Key, Value> : DictionaryProtocol where Key : Comparable, Key : Hashable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"10\" column=\"15\"><Name>SortedDictionary<\/Name><USR>s:14DataStructures16SortedDictionaryV<\/USR><Declaration>public struct SortedDictionary&lt;Key, Value&gt; : DictionaryProtocol where Key : Comparable, Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Ordered dictionary which has sorted <codeVoice>keys<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "SortedDictionary",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 2038
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedDictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Collection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 503,
        "key.name" : "SortedDictionary",
        "key.namelength" : 16,
        "key.nameoffset" : 2020,
        "key.offset" : 2010,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - `Collection`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2059
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(after index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2124
              }
            ],
            "key.bodylength" : 105,
            "key.bodyoffset" : 2168,
            "key.doc.column" : 17,
            "key.doc.comment" : "Index after the given `index`.",
            "key.doc.declaration" : "public func index(after index: Int) -> Int",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"82\" column=\"17\"><Name>index(after:)<\/Name><USR>s:14DataStructures16SortedDictionaryV5index5afterS2i_tF<\/USR><Declaration>public func index(after index: Int) -&gt; Int<\/Declaration><CommentParts><Abstract><Para>Index after the given <codeVoice>index<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 82,
            "key.doc.name" : "index(after:)",
            "key.doc.type" : "Function",
            "key.doclength" : 35,
            "key.docoffset" : 2085,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>after<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 143,
            "key.name" : "index(after:)",
            "key.namelength" : 23,
            "key.nameoffset" : 2136,
            "key.offset" : 2131,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl5index5after5IndexQzAD_tF"
              }
            ],
            "key.parsed_declaration" : "public func index(after index: Int) -> Int",
            "key.parsed_scope.end" : 85,
            "key.parsed_scope.start" : 82,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures16SortedDictionaryV5index6beforeS2i_tF\">index(before:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (SortedDictionary<Key, Value>) -> (Int) -> Int",
            "key.typeusr" : "$S5afterS2i_tcD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV5index5afterS2i_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var startIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2301
              }
            ],
            "key.bodylength" : 22,
            "key.bodyoffset" : 2329,
            "key.doc.column" : 16,
            "key.doc.comment" : "Start index.",
            "key.doc.declaration" : "public var startIndex: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"88\" column=\"16\"><Name>startIndex<\/Name><USR>s:14DataStructures16SortedDictionaryV10startIndexSivp<\/USR><Declaration>public var startIndex: Int { get }<\/Declaration><CommentParts><Abstract><Para>Start index.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 88,
            "key.doc.name" : "startIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 17,
            "key.docoffset" : 2280,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>startIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.name" : "startIndex",
            "key.namelength" : 10,
            "key.nameoffset" : 2312,
            "key.offset" : 2308,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl10startIndex0B0Qzvp"
              },
              {
                "key.usr" : "s:SK10startIndex0B0Qzvp"
              },
              {
                "key.usr" : "s:Sk10startIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var startIndex: Int",
            "key.parsed_scope.end" : 90,
            "key.parsed_scope.start" : 88,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV10startIndexSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var endIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2377
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 2403,
            "key.doc.column" : 16,
            "key.doc.comment" : "End index.",
            "key.doc.declaration" : "public var endIndex: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"93\" column=\"16\"><Name>endIndex<\/Name><USR>s:14DataStructures16SortedDictionaryV8endIndexSivp<\/USR><Declaration>public var endIndex: Int { get }<\/Declaration><CommentParts><Abstract><Para>End index.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 93,
            "key.doc.name" : "endIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 15,
            "key.docoffset" : 2358,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>endIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.name" : "endIndex",
            "key.namelength" : 8,
            "key.nameoffset" : 2388,
            "key.offset" : 2384,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl8endIndex0B0Qzvp"
              },
              {
                "key.usr" : "s:SK8endIndex0B0Qzvp"
              },
              {
                "key.usr" : "s:Sk8endIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var endIndex: Int",
            "key.parsed_scope.end" : 95,
            "key.parsed_scope.start" : 93,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV8endIndexSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var count: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2456
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 2479,
            "key.doc.column" : 16,
            "key.doc.comment" : "Count.",
            "key.doc.declaration" : "public var count: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"98\" column=\"16\"><Name>count<\/Name><USR>s:14DataStructures16SortedDictionaryV5countSivp<\/USR><Declaration>public var count: Int { get }<\/Declaration><CommentParts><Abstract><Para>Count.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 98,
            "key.doc.name" : "count",
            "key.doc.type" : "Other",
            "key.doclength" : 11,
            "key.docoffset" : 2441,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>count<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 48,
            "key.name" : "count",
            "key.namelength" : 5,
            "key.nameoffset" : 2467,
            "key.offset" : 2463,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl5countSivp"
              }
            ],
            "key.parsed_declaration" : "public var count: Int",
            "key.parsed_scope.end" : 100,
            "key.parsed_scope.start" : 98,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV5countSivp"
          }
        ],
        "key.typename" : "SortedDictionary<Key, Value>.Type",
        "key.typeusr" : "$S14DataStructures16SortedDictionaryVyxq_GmD",
        "key.usr" : "s:14DataStructures16SortedDictionaryV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct SortedDictionary&lt;Key, Value&gt; : <Type usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/Type> where Key : <Type usr=\"s:SL\">Comparable<\/Type>, Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 191,
        "key.bodyoffset" : 2568,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct SortedDictionary<Key, Value> : DictionaryProtocol where Key : Comparable, Key : Hashable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"10\" column=\"15\"><Name>SortedDictionary<\/Name><USR>s:14DataStructures16SortedDictionaryV<\/USR><Declaration>public struct SortedDictionary&lt;Key, Value&gt; : DictionaryProtocol where Key : Comparable, Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Ordered dictionary which has sorted <codeVoice>keys<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "SortedDictionary",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 2543
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedDictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "BidirectionalCollection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 245,
        "key.name" : "SortedDictionary",
        "key.namelength" : 16,
        "key.nameoffset" : 2525,
        "key.offset" : 2515,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(before index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2614
              }
            ],
            "key.bodylength" : 98,
            "key.bodyoffset" : 2659,
            "key.doc.column" : 17,
            "key.doc.comment" : "Index before the given `index`.",
            "key.doc.declaration" : "public func index(before index: Int) -> Int",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"106\" column=\"17\"><Name>index(before:)<\/Name><USR>s:14DataStructures16SortedDictionaryV5index6beforeS2i_tF<\/USR><Declaration>public func index(before index: Int) -&gt; Int<\/Declaration><CommentParts><Abstract><Para>Index before the given <codeVoice>index<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 106,
            "key.doc.name" : "index(before:)",
            "key.doc.type" : "Function",
            "key.doclength" : 36,
            "key.docoffset" : 2574,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>before<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 137,
            "key.name" : "index(before:)",
            "key.namelength" : 24,
            "key.nameoffset" : 2626,
            "key.offset" : 2621,
            "key.overrides" : [
              {
                "key.usr" : "s:SK5index6before5IndexQzAD_tF"
              }
            ],
            "key.parsed_declaration" : "public func index(before index: Int) -> Int",
            "key.parsed_scope.end" : 109,
            "key.parsed_scope.start" : 106,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures16SortedDictionaryV5index5afterS2i_tF\">index(after:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (SortedDictionary<Key, Value>) -> (Int) -> Int",
            "key.typeusr" : "$S6beforeS2i_tcD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV5index6beforeS2i_tF"
          }
        ],
        "key.typename" : "SortedDictionary<Key, Value>.Type",
        "key.typeusr" : "$S14DataStructures16SortedDictionaryVyxq_GmD",
        "key.usr" : "s:14DataStructures16SortedDictionaryV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct SortedDictionary&lt;Key, Value&gt; : <Type usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/Type> where Key : <Type usr=\"s:SL\">Comparable<\/Type>, Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 202,
        "key.bodyoffset" : 2814,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct SortedDictionary<Key, Value> : DictionaryProtocol where Key : Comparable, Key : Hashable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"10\" column=\"15\"><Name>SortedDictionary<\/Name><USR>s:14DataStructures16SortedDictionaryV<\/USR><Declaration>public struct SortedDictionary&lt;Key, Value&gt; : DictionaryProtocol where Key : Comparable, Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Ordered dictionary which has sorted <codeVoice>keys<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "SortedDictionary",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 22,
            "key.offset" : 2790
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedDictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "RandomAccessCollection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 255,
        "key.name" : "SortedDictionary",
        "key.namelength" : 16,
        "key.nameoffset" : 2772,
        "key.offset" : 2762,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; (<Type usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/Type>, <Type usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/Type>) { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2869
              }
            ],
            "key.bodylength" : 98,
            "key.bodyoffset" : 2916,
            "key.doc.column" : 12,
            "key.doc.comment" : "- Returns: Element at the given `index`.",
            "key.doc.declaration" : "public subscript(index: Int) -> (Key, Value) { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"115\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:14DataStructures16SortedDictionaryVyx_q_tSicip<\/USR><Declaration>public subscript(index: Int) -&gt; (Key, Value) { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Element at the given <codeVoice>index<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 115,
            "key.doc.name" : "subscript(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Element at the given `index`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 45,
            "key.docoffset" : 2820,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 139,
            "key.name" : "subscript(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 2876,
            "key.offset" : 2876,
            "key.overrides" : [
              {
                "key.usr" : "s:Sly7ElementQz5IndexQzcip"
              },
              {
                "key.usr" : "s:SKy7ElementQz5IndexQzcip"
              },
              {
                "key.usr" : "s:Sky7ElementQz5IndexQzcip"
              }
            ],
            "key.parsed_declaration" : "public subscript (index: Int) -> (Key, Value)",
            "key.parsed_scope.end" : 119,
            "key.parsed_scope.start" : 115,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures16SortedDictionaryVyq_Sgxcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (Int) -> (Key, Value)",
            "key.typeusr" : "$Syx_q_tSicD",
            "key.usr" : "s:14DataStructures16SortedDictionaryVyx_q_tSicip"
          },
          {
            "key.annotated_decl" : "<Declaration>let key: Key<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type>Key<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 21,
            "key.name" : "key",
            "key.namelength" : 3,
            "key.nameoffset" : 2929,
            "key.offset" : 2925,
            "key.parsed_declaration" : "let key = keys[index]",
            "key.parsed_scope.end" : 116,
            "key.parsed_scope.start" : 116,
            "key.typename" : "Key",
            "key.typeusr" : "$SxD",
            "key.usr" : "s:14DataStructures16SortedDictionaryVyx_q_tSicig3keyL_xvp"
          },
          {
            "key.annotated_decl" : "<Declaration>let value: Value<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type>Value<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 26,
            "key.name" : "value",
            "key.namelength" : 5,
            "key.nameoffset" : 2959,
            "key.offset" : 2955,
            "key.parsed_declaration" : "let value = unsorted[key]!",
            "key.parsed_scope.end" : 117,
            "key.parsed_scope.start" : 117,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures16SortedDictionaryV5value2atq_SgSi_tF\">value(at:)<\/RelatedName>"
              }
            ],
            "key.typename" : "Value",
            "key.typeusr" : "$Sq_D",
            "key.usr" : "s:14DataStructures16SortedDictionaryVyx_q_tSicig5valueL_q_vp"
          }
        ],
        "key.typename" : "SortedDictionary<Key, Value>.Type",
        "key.typeusr" : "$S14DataStructures16SortedDictionaryVyxq_GmD",
        "key.usr" : "s:14DataStructures16SortedDictionaryV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct SortedDictionary&lt;Key, Value&gt; : <Type usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/Type> where Key : <Type usr=\"s:SL\">Comparable<\/Type>, Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 383,
        "key.bodyoffset" : 3047,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct SortedDictionary<Key, Value> : DictionaryProtocol where Key : Comparable, Key : Hashable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"10\" column=\"15\"><Name>SortedDictionary<\/Name><USR>s:14DataStructures16SortedDictionaryV<\/USR><Declaration>public struct SortedDictionary&lt;Key, Value&gt; : DictionaryProtocol where Key : Comparable, Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Ordered dictionary which has sorted <codeVoice>keys<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "SortedDictionary",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedDictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 412,
        "key.name" : "SortedDictionary",
        "key.namelength" : 16,
        "key.nameoffset" : 3029,
        "key.offset" : 3019,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func min() -&gt; (<Type usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/Type>, <Type usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/Type>)?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3053
              }
            ],
            "key.bodylength" : 112,
            "key.bodyoffset" : 3088,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>min<\/decl.name>() -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 141,
            "key.name" : "min()",
            "key.namelength" : 5,
            "key.nameoffset" : 3065,
            "key.offset" : 3060,
            "key.parsed_declaration" : "public func min() -> (Key,Value)?",
            "key.parsed_scope.end" : 127,
            "key.parsed_scope.start" : 124,
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (SortedDictionary<Key, Value>) -> () -> (Key, Value)?",
            "key.typeusr" : "$Sx_q_tSgycD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV3minx_q_tSgyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func max() -&gt; (<Type usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/Type>, <Type usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/Type>)?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3207
              }
            ],
            "key.bodylength" : 108,
            "key.bodyoffset" : 3242,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>max<\/decl.name>() -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 137,
            "key.name" : "max()",
            "key.namelength" : 5,
            "key.nameoffset" : 3219,
            "key.offset" : 3214,
            "key.parsed_declaration" : "public func max() -> (Key,Value)?",
            "key.parsed_scope.end" : 132,
            "key.parsed_scope.start" : 129,
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (SortedDictionary<Key, Value>) -> () -> (Key, Value)?",
            "key.typeusr" : "$Sx_q_tSgycD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV3maxx_q_tSgyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func sorted() -&gt; [(<Type usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/Type>, <Type usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/Type>)]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3357
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 3396,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sorted<\/decl.name>() -&gt; <decl.function.returntype>[<tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>)<\/tuple>]<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 65,
            "key.name" : "sorted()",
            "key.namelength" : 8,
            "key.nameoffset" : 3369,
            "key.offset" : 3364,
            "key.parsed_declaration" : "public func sorted() -> [(Key,Value)]",
            "key.parsed_scope.end" : 136,
            "key.parsed_scope.start" : 134,
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (SortedDictionary<Key, Value>) -> () -> [(Key, Value)]",
            "key.typeusr" : "$SSayx_q_tGycD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV6sortedSayx_q_tGyF"
          }
        ],
        "key.typename" : "SortedDictionary<Key, Value>.Type",
        "key.typeusr" : "$S14DataStructures16SortedDictionaryVyxq_GmD",
        "key.usr" : "s:14DataStructures16SortedDictionaryV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct SortedDictionary&lt;Key, Value&gt; : <Type usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/Type> where Key : <Type usr=\"s:SL\">Comparable<\/Type>, Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 283,
        "key.bodyoffset" : 3493,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct SortedDictionary<Key, Value> : DictionaryProtocol where Key : Comparable, Key : Hashable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"10\" column=\"15\"><Name>SortedDictionary<\/Name><USR>s:14DataStructures16SortedDictionaryV<\/USR><Declaration>public struct SortedDictionary&lt;Key, Value&gt; : DictionaryProtocol where Key : Comparable, Key : Hashable<\/Declaration><CommentParts><Abstract><Para>Ordered dictionary which has sorted <codeVoice>keys<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 10,
        "key.doc.name" : "SortedDictionary",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 30,
            "key.offset" : 3461
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SortedDictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:14DataStructures18DictionaryProtocolP\">DictionaryProtocol<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ExpressibleByDictionaryLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 344,
        "key.name" : "SortedDictionary",
        "key.namelength" : 16,
        "key.nameoffset" : 3443,
        "key.offset" : 3433,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 40,
            "key.name" : "MARK: - `ExpressibleByDictionaryLiteral`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3502
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(dictionaryLiteral elements: (<Type usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/Type>, <Type usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/Type>)...)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3612
              }
            ],
            "key.bodylength" : 104,
            "key.bodyoffset" : 3670,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a `SortedDictionary` with a `DictionaryLiteral`.",
            "key.doc.declaration" : "public init(dictionaryLiteral elements: (Key, Value)...)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"144\" column=\"12\"><Name>init(dictionaryLiteral:)<\/Name><USR>s:14DataStructures16SortedDictionaryV17dictionaryLiteralACyxq_Gx_q_td_tcfc<\/USR><Declaration>public init(dictionaryLiteral elements: (Key, Value)...)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>SortedDictionary<\/codeVoice> with a <codeVoice>DictionaryLiteral<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 144,
            "key.doc.name" : "init(dictionaryLiteral:)",
            "key.doc.type" : "Function",
            "key.doclength" : 60,
            "key.docoffset" : 3548,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dictionaryLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV3Keyxmfp\">Key<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures16SortedDictionaryV5Valueq_mfp\">Value<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.var.parameter.type>...<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 156,
            "key.name" : "init(dictionaryLiteral:)",
            "key.namelength" : 49,
            "key.nameoffset" : 3619,
            "key.offset" : 3619,
            "key.overrides" : [
              {
                "key.usr" : "s:s30ExpressibleByDictionaryLiteralP010dictionaryD0x3KeyQz_5ValueQztd_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(dictionaryLiteral elements: (Key, Value)...)",
            "key.parsed_scope.end" : 151,
            "key.parsed_scope.start" : 144,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures16SortedDictionaryVACyxq_Gycfc\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Key, Value where Key : Comparable, Key : Hashable> (SortedDictionary<Key, Value>.Type) -> ((Key, Value)...) -> SortedDictionary<Key, Value>",
            "key.typeusr" : "$S17dictionaryLiteral14DataStructures16SortedDictionaryVyxq_Gx_q_td_tcD",
            "key.usr" : "s:14DataStructures16SortedDictionaryV17dictionaryLiteralACyxq_Gx_q_td_tcfc"
          }
        ],
        "key.typename" : "SortedDictionary<Key, Value>.Type",
        "key.typeusr" : "$S14DataStructures16SortedDictionaryVyxq_GmD",
        "key.usr" : "s:14DataStructures16SortedDictionaryV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func == &lt;K, V&gt;(lhs: <Type usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/Type>&lt;<Type usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1KL_xmfp\">K<\/Type>, <Type usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1VL_q_mfp\">V<\/Type>&gt;, rhs: <Type usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/Type>&lt;<Type usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1KL_xmfp\">K<\/Type>, <Type usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1VL_q_mfp\">V<\/Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where K : <Type usr=\"s:SL\">Comparable<\/Type>, K : <Type usr=\"s:SH\">Hashable<\/Type>, V : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3899
          }
        ],
        "key.bodylength" : 386,
        "key.bodyoffset" : 4002,
        "key.doc.column" : 13,
        "key.doc.comment" : "- returns: `true` if all values contained in both `SortedDictionary` values are\nequivalent. Otherwise, `false`.",
        "key.doc.declaration" : "public func == <K, V>(lhs: SortedDictionary<K, V>, rhs: SortedDictionary<K, V>) -> Bool where K : Comparable, K : Hashable, V : Equatable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"156\" column=\"13\"><Name>==(_:_:)<\/Name><USR>s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF<\/USR><Declaration>public func == &lt;K, V&gt;(lhs: SortedDictionary&lt;K, V&gt;, rhs: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if all values contained in both <codeVoice>SortedDictionary<\/codeVoice> values are equivalent. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 156,
        "key.doc.name" : "==(_:_:)",
        "key.doc.result_discussion" : [
          {
            "Para" : "`true` if all values contained in both `SortedDictionary` values are equivalent. Otherwise, `false`."
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 120,
        "key.docoffset" : 3779,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1KL_xmfp\"><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1VL_q_mfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1KL_xmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1VL_q_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1KL_xmfp\">K<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1VL_q_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>K : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>K : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>V : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 483,
        "key.name" : "==(_:_:)",
        "key.namelength" : 77,
        "key.nameoffset" : 3911,
        "key.offset" : 3906,
        "key.parsed_declaration" : "public func == <K, V: Equatable> (lhs: SortedDictionary<K,V>, rhs: SortedDictionary<K,V>)\n    -> Bool",
        "key.parsed_scope.end" : 179,
        "key.parsed_scope.start" : 156,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>K<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>K<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.name" : "K",
            "key.namelength" : 1,
            "key.nameoffset" : 3915,
            "key.offset" : 3915,
            "key.parsed_declaration" : "public func == <K, V: Equatable> (lhs: SortedDictionary<K,V>, rhs: SortedDictionary<K,V>)",
            "key.parsed_scope.end" : 156,
            "key.parsed_scope.start" : 156,
            "key.typename" : "K.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1KL_xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>V : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 9,
                "key.offset" : 3921
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>V<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Equatable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 12,
            "key.name" : "V",
            "key.namelength" : 1,
            "key.nameoffset" : 3918,
            "key.offset" : 3918,
            "key.parsed_declaration" : "public func == <K, V: Equatable> (lhs: SortedDictionary<K,V>, rhs: SortedDictionary<K,V>)",
            "key.parsed_scope.end" : 156,
            "key.parsed_scope.start" : 156,
            "key.typename" : "V.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF1VL_q_mfp"
          }
        ],
        "key.typename" : "<K, V where K : Comparable, K : Hashable, V : Equatable> (SortedDictionary<K, V>, SortedDictionary<K, V>) -> Bool",
        "key.typeusr" : "$SySb14DataStructures16SortedDictionaryVyxq_G_ADtcSLRzSHRzSQR_r0_luD",
        "key.usr" : "s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;Value, Key&gt;(lhs: <Type usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/Type>&lt;<Type usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF5ValueL_xmfp\">Value<\/Type>, <Type usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF3KeyL_q_mfp\">Key<\/Type>&gt;, rhs: <Type usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/Type>&lt;<Type usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF5ValueL_xmfp\">Value<\/Type>, <Type usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF3KeyL_q_mfp\">Key<\/Type>&gt;) -&gt; <Type usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/Type>&lt;<Type usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF5ValueL_xmfp\">Value<\/Type>, <Type usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF3KeyL_q_mfp\">Key<\/Type>&gt; where Value : <Type usr=\"s:SL\">Comparable<\/Type>, Value : <Type usr=\"s:SH\">Hashable<\/Type>, Key : <Type usr=\"s:SL\">Comparable<\/Type>, Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 4485
          }
        ],
        "key.bodylength" : 91,
        "key.bodyoffset" : 4663,
        "key.doc.column" : 13,
        "key.doc.comment" : "- returns: `SortedOrderedDictionary` with values of two `SortedOrderedDictionary` values.",
        "key.doc.declaration" : "public func + <Value, Key>(lhs: SortedDictionary<Value, Key>, rhs: SortedDictionary<Value, Key>) -> SortedDictionary<Value, Key> where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift\" line=\"182\" column=\"13\"><Name>+(_:_:)<\/Name><USR>s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF<\/USR><Declaration>public func + &lt;Value, Key&gt;(lhs: SortedDictionary&lt;Value, Key&gt;, rhs: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>SortedOrderedDictionary<\/codeVoice> with values of two <codeVoice>SortedOrderedDictionary<\/codeVoice> values.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 182,
        "key.doc.name" : "+(_:_:)",
        "key.doc.result_discussion" : [
          {
            "Para" : "`SortedOrderedDictionary` with values of two `SortedOrderedDictionary` values."
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 94,
        "key.docoffset" : 4391,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF5ValueL_xmfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF3KeyL_q_mfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF5ValueL_xmfp\">Value<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF3KeyL_q_mfp\">Key<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF5ValueL_xmfp\">Value<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF3KeyL_q_mfp\">Key<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF5ValueL_xmfp\">Value<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF3KeyL_q_mfp\">Key<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Value : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Value : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 263,
        "key.name" : "+(_:_:)",
        "key.namelength" : 95,
        "key.nameoffset" : 4497,
        "key.offset" : 4492,
        "key.parsed_declaration" : "public func + <Value, Key> (\n    lhs: SortedDictionary<Value, Key>,\n    rhs: SortedDictionary<Value, Key>\n) -> SortedDictionary<Value, Key> where Key: Hashable, Key: Comparable",
        "key.parsed_scope.end" : 190,
        "key.parsed_scope.start" : 182,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Value<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 5,
            "key.name" : "Value",
            "key.namelength" : 5,
            "key.nameoffset" : 4500,
            "key.offset" : 4500,
            "key.parsed_declaration" : "public func + <Value, Key> (",
            "key.parsed_scope.end" : 182,
            "key.parsed_scope.start" : 182,
            "key.typename" : "Value.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF5ValueL_xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Key<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 3,
            "key.name" : "Key",
            "key.namelength" : 3,
            "key.nameoffset" : 4507,
            "key.offset" : 4507,
            "key.parsed_declaration" : "public func + <Value, Key> (",
            "key.parsed_scope.end" : 182,
            "key.parsed_scope.start" : 182,
            "key.typename" : "Key.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF3KeyL_q_mfp"
          },
          {
            "key.annotated_decl" : "<Declaration>var result: <Type usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/Type>&lt;Value, Key&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/SortedDictionary.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>result<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures16SortedDictionaryV\">SortedDictionary<\/ref.struct>&lt;Value, Key&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 16,
            "key.name" : "result",
            "key.namelength" : 6,
            "key.nameoffset" : 4672,
            "key.offset" : 4668,
            "key.parsed_declaration" : "var result = lhs",
            "key.parsed_scope.end" : 187,
            "key.parsed_scope.start" : 187,
            "key.typename" : "SortedDictionary<Value, Key>",
            "key.typeusr" : "$S14DataStructures16SortedDictionaryVyxq_GD",
            "key.usr" : "s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF6resultL_AEvp"
          }
        ],
        "key.typename" : "<Value, Key where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable> (SortedDictionary<Value, Key>, SortedDictionary<Value, Key>) -> SortedDictionary<Value, Key>",
        "key.typeusr" : "$Sy14DataStructures16SortedDictionaryVyxq_GAD_ADtcSLRzSHRzSLR_SHR_r0_luD",
        "key.usr" : "s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4161,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct Stack&lt;Element&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 120
          }
        ],
        "key.bodylength" : 1833,
        "key.bodyoffset" : 151,
        "key.doc.column" : 15,
        "key.doc.comment" : "Stack structure.",
        "key.doc.declaration" : "public struct Stack<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"12\" column=\"15\"><Name>Stack<\/Name><USR>s:14DataStructures5StackV<\/USR><Declaration>public struct Stack&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Stack structure.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "Stack",
        "key.doc.type" : "Class",
        "key.doclength" : 21,
        "key.docoffset" : 99,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Stack<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1858,
        "key.name" : "Stack",
        "key.namelength" : 5,
        "key.nameoffset" : 134,
        "key.offset" : 127,
        "key.parsed_declaration" : "public struct Stack <Element>",
        "key.parsed_scope.end" : 78,
        "key.parsed_scope.start" : 12,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Element<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 7,
            "key.name" : "Element",
            "key.namelength" : 7,
            "key.nameoffset" : 141,
            "key.offset" : 141,
            "key.parsed_declaration" : "public struct Stack <Element>",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV7Elementa\">Element<\/RelatedName>"
              }
            ],
            "key.typename" : "Element.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures5StackV7Elementxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate var elements: [Element]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 157
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>elements<\/decl.name>: <decl.var.type>[Element]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "elements",
            "key.namelength" : 8,
            "key.nameoffset" : 173,
            "key.offset" : 169,
            "key.parsed_declaration" : "fileprivate var elements: [Element] = []",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.setter_accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.typename" : "[Element]",
            "key.typeusr" : "$SSayxGD",
            "key.usr" : "s:14DataStructures5StackV8elements33_9B84F82B6EAD87E3EA4D8A3AE9AF847ALLSayxGvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 206
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var top: <Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 271
              }
            ],
            "key.bodylength" : 34,
            "key.bodyoffset" : 297,
            "key.doc.column" : 16,
            "key.doc.comment" : "Top element of `Stack`.",
            "key.doc.declaration" : "public var top: Element? { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"19\" column=\"16\"><Name>top<\/Name><USR>s:14DataStructures5StackV3topxSgvp<\/USR><Declaration>public var top: Element? { get }<\/Declaration><CommentParts><Abstract><Para>Top element of <codeVoice>Stack<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 19,
            "key.doc.name" : "top",
            "key.doc.type" : "Other",
            "key.doclength" : 28,
            "key.docoffset" : 239,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>top<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 54,
            "key.name" : "top",
            "key.namelength" : 3,
            "key.nameoffset" : 282,
            "key.offset" : 278,
            "key.parsed_declaration" : "public var top: Element?",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 19,
            "key.typename" : "Element?",
            "key.typeusr" : "$SxSgD",
            "key.usr" : "s:14DataStructures5StackV3topxSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var destructured: (<Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>, <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;<Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>&gt;)? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 423
              }
            ],
            "key.bodylength" : 157,
            "key.bodyoffset" : 476,
            "key.doc.column" : 16,
            "key.doc.comment" : "- returns: The `top` and the remaining items, if possible. Otherwise, `nil`.",
            "key.doc.declaration" : "public var destructured: (Element, Stack<Element>)? { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"24\" column=\"16\"><Name>destructured<\/Name><USR>s:14DataStructures5StackV12destructuredx_ACyxGtSgvp<\/USR><Declaration>public var destructured: (Element, Stack&lt;Element&gt;)? { get }<\/Declaration><CommentParts><ResultDiscussion><Para>The <codeVoice>top<\/codeVoice> and the remaining items, if possible. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 24,
            "key.doc.name" : "destructured",
            "key.doc.result_discussion" : [
              {
                "Para" : "The `top` and the remaining items, if possible. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 81,
            "key.docoffset" : 338,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>destructured<\/decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 204,
            "key.name" : "destructured",
            "key.namelength" : 12,
            "key.nameoffset" : 434,
            "key.offset" : 430,
            "key.parsed_declaration" : "public var destructured: (Element, Stack<Element>)?",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 24,
            "key.typename" : "(Element, Stack<Element>)?",
            "key.typeusr" : "$Sx_14DataStructures5StackVyxGtSgD",
            "key.usr" : "s:14DataStructures5StackV12destructuredx_ACyxGtSgvp"
          },
          {
            "key.annotated_decl" : "<Declaration>var copy: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;Element&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>copy<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;Element&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 15,
            "key.name" : "copy",
            "key.namelength" : 4,
            "key.nameoffset" : 560,
            "key.offset" : 556,
            "key.parsed_declaration" : "var copy = self",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 30,
            "key.typename" : "Stack<Element>",
            "key.typeusr" : "$S14DataStructures5StackVyxGD",
            "key.usr" : "s:14DataStructures5StackV12destructuredx_ACyxGtSgvg4copyL_AEvp"
          },
          {
            "key.annotated_decl" : "<Declaration>let top: Element<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>top<\/decl.name>: <decl.var.type>Element<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 21,
            "key.name" : "top",
            "key.namelength" : 3,
            "key.nameoffset" : 584,
            "key.offset" : 580,
            "key.parsed_declaration" : "let top = copy.pop()!",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 31,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV3topxSgvp\">top<\/RelatedName>"
              }
            ],
            "key.typename" : "Element",
            "key.typeusr" : "$SxD",
            "key.usr" : "s:14DataStructures5StackV12destructuredx_ACyxGtSgvg3topL_xvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - Initializers",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 643
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 702
              }
            ],
            "key.bodylength" : 1,
            "key.bodyoffset" : 717,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create an empty `Stack`.",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"38\" column=\"12\"><Name>init()<\/Name><USR>s:14DataStructures5StackVACyxGycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Create an empty <codeVoice>Stack<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 38,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 669,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 10,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 709,
            "key.offset" : 709,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 38,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVyACyxGqd__c7ElementQyd__RszSTRd__lufc\">init(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV12arrayLiteralACyxGxd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              }
            ],
            "key.typename" : "<Element> (Stack<Element>.Type) -> () -> Stack<Element>",
            "key.typeusr" : "$S14DataStructures5StackVyxGycD",
            "key.usr" : "s:14DataStructures5StackVACyxGycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init&lt;S&gt;(_ elements: <Type usr=\"s:14DataStructures5StackVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp\">S<\/Type>) where Element == S.Element, S : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 789
              }
            ],
            "key.bodylength" : 45,
            "key.bodyoffset" : 859,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a `Stack` with the given sequence of `elements`.",
            "key.doc.declaration" : "public init<S>(_ elements: S) where Element == S.Element, S : Sequence",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"41\" column=\"12\"><Name>init(_:)<\/Name><USR>s:14DataStructures5StackVyACyxGqd__c7ElementQyd__RszSTRd__lufc<\/USR><Declaration>public init&lt;S&gt;(_ elements: S) where Element == S.Element, S : Sequence<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>Stack<\/codeVoice> with the given sequence of <codeVoice>elements<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 41,
            "key.doc.name" : "init(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 60,
            "key.docoffset" : 725,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:14DataStructures5StackVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp\"><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures5StackVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp\">S<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Element == S.Element<\/decl.generic_type_requirement>, <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 109,
            "key.name" : "init(_:)",
            "key.namelength" : 34,
            "key.nameoffset" : 796,
            "key.offset" : 796,
            "key.parsed_declaration" : "public init <S: Sequence> (_ elements: S) where S.Element == Element",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 41,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVACyxGycfc\">init()<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV12arrayLiteralACyxGxd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>S : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 8,
                    "key.offset" : 805
                  }
                ],
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>S<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Sequence"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 11,
                "key.name" : "S",
                "key.namelength" : 1,
                "key.nameoffset" : 802,
                "key.offset" : 802,
                "key.parsed_declaration" : "public init <S: Sequence> (_ elements: S) where S.Element == Element",
                "key.parsed_scope.end" : 41,
                "key.parsed_scope.start" : 41,
                "key.typename" : "S.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures5StackVyACyxGqd__c7ElementQyd__RszSTRd__lufc1SL_qd__mfp"
              }
            ],
            "key.typename" : "<Element, S where Element == S.Element, S : Sequence> (Stack<Element>.Type) -> (S) -> Stack<Element>",
            "key.typeusr" : "$Sy14DataStructures5StackVyxGqd__c7ElementQyd__RszSTRd__luD",
            "key.usr" : "s:14DataStructures5StackVyACyxGqd__c7ElementQyd__RszSTRd__lufc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 914
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func push(_ item: <Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 988
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 981
              }
            ],
            "key.bodylength" : 35,
            "key.bodyoffset" : 1025,
            "key.doc.column" : 26,
            "key.doc.comment" : "Push item to end of `Stack`.",
            "key.doc.declaration" : "public mutating func push(_ item: Element)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"48\" column=\"26\"><Name>push(_:)<\/Name><USR>s:14DataStructures5StackV4pushyyxF<\/USR><Declaration>public mutating func push(_ item: Element)<\/Declaration><CommentParts><Abstract><Para>Push item to end of <codeVoice>Stack<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 48,
            "key.doc.name" : "push(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 33,
            "key.docoffset" : 944,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>push<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>item<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 64,
            "key.name" : "push(_:)",
            "key.namelength" : 21,
            "key.nameoffset" : 1002,
            "key.offset" : 997,
            "key.parsed_declaration" : "public mutating func push(_ item: Element)",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 48,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (inout Stack<Element>) -> (Element) -> ()",
            "key.typeusr" : "$SyyxcD",
            "key.usr" : "s:14DataStructures5StackV4pushyyxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func pushing(_ item: <Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>) -&gt; <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;<Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1141
              }
            ],
            "key.bodylength" : 73,
            "key.bodyoffset" : 1197,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: A new `Stack` with the given `item` pushed to the top.",
            "key.doc.declaration" : "public func pushing(_ item: Element) -> Stack<Element>",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"53\" column=\"17\"><Name>pushing(_:)<\/Name><USR>s:14DataStructures5StackV7pushingyACyxGxF<\/USR><Declaration>public func pushing(_ item: Element) -&gt; Stack&lt;Element&gt;<\/Declaration><CommentParts><ResultDiscussion><Para>A new <codeVoice>Stack<\/codeVoice> with the given <codeVoice>item<\/codeVoice> pushed to the top.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 53,
            "key.doc.name" : "pushing(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A new `Stack` with the given `item` pushed to the top."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 70,
            "key.docoffset" : 1067,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>pushing<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>item<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 123,
            "key.name" : "pushing(_:)",
            "key.namelength" : 24,
            "key.nameoffset" : 1153,
            "key.offset" : 1148,
            "key.parsed_declaration" : "public func pushing(_ item: Element) -> Stack<Element>",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 53,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var copy: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;Element&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>copy<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;Element&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 15,
                "key.name" : "copy",
                "key.namelength" : 4,
                "key.nameoffset" : 1210,
                "key.offset" : 1206,
                "key.parsed_declaration" : "var copy = self",
                "key.parsed_scope.end" : 54,
                "key.parsed_scope.start" : 54,
                "key.typename" : "Stack<Element>",
                "key.typeusr" : "$S14DataStructures5StackVyxGD",
                "key.usr" : "s:14DataStructures5StackV7pushingyACyxGxF4copyL_AEvp"
              }
            ],
            "key.typename" : "<Element> (Stack<Element>) -> (Element) -> Stack<Element>",
            "key.typeusr" : "$Sy14DataStructures5StackVyxGxcD",
            "key.usr" : "s:14DataStructures5StackV7pushingyACyxGxF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public mutating func pop() -&gt; <Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1383
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1376
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1357
              }
            ],
            "key.bodylength" : 39,
            "key.bodyoffset" : 1416,
            "key.doc.column" : 45,
            "key.doc.comment" : "- returns: Item from top of `Stack` if there are any. Otherwise, `nil`.",
            "key.doc.declaration" : "public mutating func pop() -> Element?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"60\" column=\"45\"><Name>pop()<\/Name><USR>s:14DataStructures5StackV3popxSgyF<\/USR><Declaration>public mutating func pop() -&gt; Element?<\/Declaration><CommentParts><ResultDiscussion><Para>Item from top of <codeVoice>Stack<\/codeVoice> if there are any. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 60,
            "key.doc.name" : "pop()",
            "key.doc.result_discussion" : [
              {
                "Para" : "Item from top of `Stack` if there are any. Otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 76,
            "key.docoffset" : 1277,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>pop<\/decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 64,
            "key.name" : "pop()",
            "key.namelength" : 5,
            "key.nameoffset" : 1397,
            "key.offset" : 1392,
            "key.parsed_declaration" : "@discardableResult public mutating func pop() -> Element?",
            "key.parsed_scope.end" : 62,
            "key.parsed_scope.start" : 60,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV3pop6amountACyxGSgSi_tF\">pop(amount:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (inout Stack<Element>) -> () -> Element?",
            "key.typeusr" : "$SxSgycD",
            "key.usr" : "s:14DataStructures5StackV3popxSgyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func pop(amount: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;<Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>&gt;?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1540
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1533
              }
            ],
            "key.bodylength" : 212,
            "key.bodyoffset" : 1591,
            "key.doc.column" : 26,
            "key.doc.comment" : "- returns: `Stack` containing items popped from end of `Stack`",
            "key.doc.declaration" : "public mutating func pop(amount: Int) -> Stack<Element>?",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"65\" column=\"26\"><Name>pop(amount:)<\/Name><USR>s:14DataStructures5StackV3pop6amountACyxGSgSi_tF<\/USR><Declaration>public mutating func pop(amount: Int) -&gt; Stack&lt;Element&gt;?<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>Stack<\/codeVoice> containing items popped from end of <codeVoice>Stack<\/codeVoice><\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 65,
            "key.doc.name" : "pop(amount:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`Stack` containing items popped from end of `Stack`"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 67,
            "key.docoffset" : 1462,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>pop<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>amount<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 255,
            "key.name" : "pop(amount:)",
            "key.namelength" : 16,
            "key.nameoffset" : 1554,
            "key.offset" : 1549,
            "key.parsed_declaration" : "public mutating func pop(amount: Int) -> Stack<Element>?",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 65,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV3popxSgyF\">pop()<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var poppedItems: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;Element&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>poppedItems<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;Element&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 34,
                "key.name" : "poppedItems",
                "key.namelength" : 11,
                "key.nameoffset" : 1684,
                "key.offset" : 1680,
                "key.parsed_declaration" : "var poppedItems = Stack<Element>()",
                "key.parsed_scope.end" : 71,
                "key.parsed_scope.start" : 71,
                "key.typename" : "Stack<Element>",
                "key.typeusr" : "$S14DataStructures5StackVyxGD",
                "key.usr" : "s:14DataStructures5StackV3pop6amountACyxGSgSi_tF11poppedItemsL_AFvp"
              }
            ],
            "key.typename" : "<Element> (inout Stack<Element>) -> (Int) -> Stack<Element>?",
            "key.typeusr" : "$S6amount14DataStructures5StackVyxGSgSi_tcD",
            "key.usr" : "s:14DataStructures5StackV3pop6amountACyxGSgSi_tF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 92,
            "key.name" : "TODO: - Returns: original, modified stack, with popped items, if possible. Otherwise, `nil`.",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1813
          }
        ],
        "key.typename" : "Stack<Element>.Type",
        "key.typeusr" : "$S14DataStructures5StackVyxGmD",
        "key.usr" : "s:14DataStructures5StackV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct Stack&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 534,
        "key.bodyoffset" : 2016,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct Stack<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"12\" column=\"15\"><Name>Stack<\/Name><USR>s:14DataStructures5StackV<\/USR><Declaration>public struct Stack&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Stack structure.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "Stack",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 2004
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Stack<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Collection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 564,
        "key.name" : "Stack",
        "key.namelength" : 5,
        "key.nameoffset" : 1997,
        "key.offset" : 1987,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - `Collection`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2025
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(after index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2101
              }
            ],
            "key.bodylength" : 100,
            "key.bodyoffset" : 2145,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: Index after the given `index`.",
            "key.doc.declaration" : "public func index(after index: Int) -> Int",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"85\" column=\"17\"><Name>index(after:)<\/Name><USR>s:14DataStructures5StackV5index5afterS2i_tF<\/USR><Declaration>public func index(after index: Int) -&gt; Int<\/Declaration><CommentParts><ResultDiscussion><Para>Index after the given <codeVoice>index<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 85,
            "key.doc.name" : "index(after:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Index after the given `index`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 46,
            "key.docoffset" : 2051,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>after<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 138,
            "key.name" : "index(after:)",
            "key.namelength" : 23,
            "key.nameoffset" : 2113,
            "key.offset" : 2108,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl5index5after5IndexQzAD_tF"
              }
            ],
            "key.parsed_declaration" : "public func index(after index: Int) -> Int",
            "key.parsed_scope.end" : 88,
            "key.parsed_scope.start" : 85,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV5index6beforeS2i_tF\">index(before:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (Stack<Element>) -> (Int) -> Int",
            "key.typeusr" : "$S5afterS2i_tcD",
            "key.usr" : "s:14DataStructures5StackV5index5afterS2i_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var startIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2275
              }
            ],
            "key.bodylength" : 22,
            "key.bodyoffset" : 2303,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Start index.",
            "key.doc.declaration" : "public var startIndex: Int { get }",
            "key.doc.discussion" : [
              {
                "List-Bullet" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"91\" column=\"16\"><Name>startIndex<\/Name><USR>s:14DataStructures5StackV10startIndexSivp<\/USR><Declaration>public var startIndex: Int { get }<\/Declaration><CommentParts><Discussion><List-Bullet><Item><Para>Start index.<\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 91,
            "key.doc.name" : "startIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 2252,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>startIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.name" : "startIndex",
            "key.namelength" : 10,
            "key.nameoffset" : 2286,
            "key.offset" : 2282,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl10startIndex0B0Qzvp"
              },
              {
                "key.usr" : "s:SK10startIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var startIndex: Int",
            "key.parsed_scope.end" : 93,
            "key.parsed_scope.start" : 91,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures5StackV10startIndexSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var endIndex: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2353
              }
            ],
            "key.bodylength" : 35,
            "key.bodyoffset" : 2379,
            "key.doc.column" : 16,
            "key.doc.comment" : "- End index.",
            "key.doc.declaration" : "public var endIndex: Int { get }",
            "key.doc.discussion" : [
              {
                "List-Bullet" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"96\" column=\"16\"><Name>endIndex<\/Name><USR>s:14DataStructures5StackV8endIndexSivp<\/USR><Declaration>public var endIndex: Int { get }<\/Declaration><CommentParts><Discussion><List-Bullet><Item><Para>End index.<\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 96,
            "key.doc.name" : "endIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 17,
            "key.docoffset" : 2332,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>endIndex<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 55,
            "key.name" : "endIndex",
            "key.namelength" : 8,
            "key.nameoffset" : 2364,
            "key.offset" : 2360,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl8endIndex0B0Qzvp"
              },
              {
                "key.usr" : "s:SK8endIndex0B0Qzvp"
              }
            ],
            "key.parsed_declaration" : "public var endIndex: Int",
            "key.parsed_scope.end" : 98,
            "key.parsed_scope.start" : 96,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures5StackV8endIndexSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2470
              }
            ],
            "key.bodylength" : 36,
            "key.bodyoffset" : 2512,
            "key.doc.column" : 12,
            "key.doc.comment" : "- returns: Element at the given `index`.",
            "key.doc.declaration" : "public subscript(index: Int) -> Element { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"101\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:14DataStructures5StackVyxSicip<\/USR><Declaration>public subscript(index: Int) -&gt; Element { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Element at the given <codeVoice>index<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 101,
            "key.doc.name" : "subscript(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Element at the given `index`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 45,
            "key.docoffset" : 2421,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 72,
            "key.name" : "subscript(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 2477,
            "key.offset" : 2477,
            "key.overrides" : [
              {
                "key.usr" : "s:Sly7ElementQz5IndexQzcip"
              },
              {
                "key.usr" : "s:SKy7ElementQz5IndexQzcip"
              }
            ],
            "key.parsed_declaration" : "public subscript (index: Int) -> Element",
            "key.parsed_scope.end" : 103,
            "key.parsed_scope.start" : 101,
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (Int) -> Element",
            "key.typeusr" : "$SyxSicD",
            "key.usr" : "s:14DataStructures5StackVyxSicip"
          }
        ],
        "key.typename" : "Stack<Element>.Type",
        "key.typeusr" : "$S14DataStructures5StackVyxGmD",
        "key.usr" : "s:14DataStructures5StackV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct Stack&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 356,
        "key.bodyoffset" : 2595,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct Stack<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"12\" column=\"15\"><Name>Stack<\/Name><USR>s:14DataStructures5StackV<\/USR><Declaration>public struct Stack&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Stack structure.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "Stack",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 2570
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Stack<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "BidirectionalCollection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 399,
        "key.name" : "Stack",
        "key.namelength" : 5,
        "key.nameoffset" : 2563,
        "key.offset" : 2553,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(before index: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2652
              }
            ],
            "key.bodylength" : 98,
            "key.bodyoffset" : 2697,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: Index before the given `index`.",
            "key.doc.declaration" : "public func index(before index: Int) -> Int",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"109\" column=\"17\"><Name>index(before:)<\/Name><USR>s:14DataStructures5StackV5index6beforeS2i_tF<\/USR><Declaration>public func index(before index: Int) -&gt; Int<\/Declaration><CommentParts><ResultDiscussion><Para>Index before the given <codeVoice>index<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 109,
            "key.doc.name" : "index(before:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Index before the given `index`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 47,
            "key.docoffset" : 2601,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>before<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 137,
            "key.name" : "index(before:)",
            "key.namelength" : 24,
            "key.nameoffset" : 2664,
            "key.offset" : 2659,
            "key.overrides" : [
              {
                "key.usr" : "s:SK5index6before5IndexQzAD_tF"
              }
            ],
            "key.parsed_declaration" : "public func index(before index: Int) -> Int",
            "key.parsed_scope.end" : 112,
            "key.parsed_scope.start" : 109,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV5index5afterS2i_tF\">index(after:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (Stack<Element>) -> (Int) -> Int",
            "key.typeusr" : "$S6beforeS2i_tcD",
            "key.usr" : "s:14DataStructures5StackV5index6beforeS2i_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var count: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2891
              }
            ],
            "key.bodylength" : 35,
            "key.bodyoffset" : 2914,
            "key.doc.column" : 16,
            "key.doc.comment" : "Count of elements contained herein.\n\n- Complexity: O(_1_)",
            "key.doc.declaration" : "public var count: Int { get }",
            "key.doc.discussion" : [
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"118\" column=\"16\"><Name>count<\/Name><USR>s:14DataStructures5StackV5countSivp<\/USR><Declaration>public var count: Int { get }<\/Declaration><CommentParts><Abstract><Para>Count of elements contained herein.<\/Para><\/Abstract><Discussion><Complexity><Para>O(<emphasis>1<\/emphasis>)<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 118,
            "key.doc.name" : "count",
            "key.doc.type" : "Other",
            "key.doclength" : 85,
            "key.docoffset" : 2802,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>count<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 52,
            "key.name" : "count",
            "key.namelength" : 5,
            "key.nameoffset" : 2902,
            "key.offset" : 2898,
            "key.overrides" : [
              {
                "key.usr" : "s:Sl5countSivp"
              }
            ],
            "key.parsed_declaration" : "public var count: Int",
            "key.parsed_scope.end" : 120,
            "key.parsed_scope.start" : 118,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures5StackV5countSivp"
          }
        ],
        "key.typename" : "Stack<Element>.Type",
        "key.typeusr" : "$S14DataStructures5StackVyxGmD",
        "key.usr" : "s:14DataStructures5StackV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct Stack&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 196,
        "key.bodyoffset" : 3007,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct Stack<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"12\" column=\"15\"><Name>Stack<\/Name><USR>s:14DataStructures5StackV<\/USR><Declaration>public struct Stack&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Stack structure.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "Stack",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 2971
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Stack<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Equatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 250,
        "key.name" : "Stack",
        "key.namelength" : 5,
        "key.nameoffset" : 2964,
        "key.offset" : 2954,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func == (lhs: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>, rhs: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3096
              }
            ],
            "key.bodylength" : 49,
            "key.bodyoffset" : 3152,
            "key.doc.column" : 24,
            "key.doc.comment" : "- returns: `true` if two `Stack` values are equivalent. Otherwise `false`.",
            "key.doc.declaration" : "public static func == (lhs: Stack, rhs: Stack) -> Bool",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"126\" column=\"24\"><Name>==(_:_:)<\/Name><USR>s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ<\/USR><Declaration>public static func == (lhs: Stack, rhs: Stack) -&gt; Bool<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if two <codeVoice>Stack<\/codeVoice> values are equivalent. Otherwise <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 126,
            "key.doc.name" : "==(_:_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if two `Stack` values are equivalent. Otherwise `false`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 79,
            "key.docoffset" : 3013,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 99,
            "key.name" : "==(_:_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 3115,
            "key.offset" : 3103,
            "key.overrides" : [
              {
                "key.usr" : "s:SQ2eeoiySbx_xtFZ"
              }
            ],
            "key.parsed_declaration" : "public static func == (lhs: Stack, rhs: Stack) -> Bool",
            "key.parsed_scope.end" : 128,
            "key.parsed_scope.start" : 126,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let lhs: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
                "key.fully_annotated_decl" : "<decl.var.parameter><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>",
                "key.kind" : "source.lang.swift.decl.var.parameter",
                "key.length" : 3,
                "key.name" : "lhs",
                "key.offset" : 3119,
                "key.parent_loc" : 3115,
                "key.parsed_declaration" : "public static func == (lhs: Stack, rhs: Stack) -> Bool",
                "key.parsed_scope.end" : 126,
                "key.parsed_scope.start" : 126,
                "key.typename" : "Stack<Element>",
                "key.typeusr" : "$S14DataStructures5StackVyxGD",
                "key.usr" : "s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ3lhsL_AEvp"
              }
            ],
            "key.typename" : "<Element where Element : Equatable> (Stack<Element>.Type) -> (Stack<Element>, Stack<Element>) -> Bool",
            "key.typeusr" : "$SySb14DataStructures5StackVyxG_ADtcD",
            "key.usr" : "s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ"
          }
        ],
        "key.typename" : "Stack<Element>.Type",
        "key.typeusr" : "$S14DataStructures5StackVyxGmD",
        "key.usr" : "s:14DataStructures5StackV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct Stack&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 199,
        "key.bodyoffset" : 3250,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct Stack<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"12\" column=\"15\"><Name>Stack<\/Name><USR>s:14DataStructures5StackV<\/USR><Declaration>public struct Stack&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Stack structure.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "Stack",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 25,
            "key.offset" : 3223
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Stack<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ExpressibleByArrayLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 244,
        "key.name" : "Stack",
        "key.namelength" : 5,
        "key.nameoffset" : 3216,
        "key.offset" : 3206,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 36,
            "key.name" : "MARK: - `ExpressibleByArrayLiteral`.",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3259
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(arrayLiteral elements: <Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>...)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3366
              }
            ],
            "key.bodylength" : 33,
            "key.bodyoffset" : 3414,
            "key.doc.column" : 12,
            "key.doc.comment" : "- returns: Create a `SortedArray` with an array literal.",
            "key.doc.declaration" : "public init(arrayLiteral elements: Element...)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"136\" column=\"12\"><Name>init(arrayLiteral:)<\/Name><USR>s:14DataStructures5StackV12arrayLiteralACyxGxd_tcfc<\/USR><Declaration>public init(arrayLiteral elements: Element...)<\/Declaration><CommentParts><ResultDiscussion><Para>Create a <codeVoice>SortedArray<\/codeVoice> with an array literal.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 136,
            "key.doc.name" : "init(arrayLiteral:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Create a `SortedArray` with an array literal."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 61,
            "key.docoffset" : 3301,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>arrayLiteral<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param><\/decl.var.parameter.type>...<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 75,
            "key.name" : "init(arrayLiteral:)",
            "key.namelength" : 39,
            "key.nameoffset" : 3373,
            "key.offset" : 3373,
            "key.overrides" : [
              {
                "key.usr" : "s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc"
              }
            ],
            "key.parsed_declaration" : "public init(arrayLiteral elements: Element...)",
            "key.parsed_scope.end" : 138,
            "key.parsed_scope.start" : 136,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVACyxGycfc\">init()<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVyACyxGqd__c7ElementQyd__RszSTRd__lufc\">init(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Element> (Stack<Element>.Type) -> (Element...) -> Stack<Element>",
            "key.typeusr" : "$S12arrayLiteral14DataStructures5StackVyxGxd_tcD",
            "key.usr" : "s:14DataStructures5StackV12arrayLiteralACyxGxd_tcfc"
          }
        ],
        "key.typename" : "Stack<Element>.Type",
        "key.typeusr" : "$S14DataStructures5StackVyxGmD",
        "key.usr" : "s:14DataStructures5StackV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct Stack&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 321,
        "key.bodyoffset" : 3479,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct Stack<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"12\" column=\"15\"><Name>Stack<\/Name><USR>s:14DataStructures5StackV<\/USR><Declaration>public struct Stack&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Stack structure.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "Stack",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 3469
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Stack<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Additive"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 349,
        "key.name" : "Stack",
        "key.namelength" : 5,
        "key.nameoffset" : 3462,
        "key.offset" : 3452,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 16,
            "key.name" : "MARK: - Additive",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3488
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var zero: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;<Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3544
              }
            ],
            "key.bodylength" : 28,
            "key.bodyoffset" : 3584,
            "key.doc.column" : 23,
            "key.doc.comment" : "- Returns: Empty `Stack`.",
            "key.doc.declaration" : "public static var zero: Stack<Element> { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"146\" column=\"23\"><Name>zero<\/Name><USR>s:14DataStructures5StackV4zeroACyxGvpZ<\/USR><Declaration>public static var zero: Stack&lt;Element&gt; { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Empty <codeVoice>Stack<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 146,
            "key.doc.name" : "zero",
            "key.doc.result_discussion" : [
              {
                "Para" : "Empty `Stack`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 30,
            "key.docoffset" : 3510,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>zero<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 62,
            "key.name" : "zero",
            "key.namelength" : 4,
            "key.nameoffset" : 3562,
            "key.offset" : 3551,
            "key.parsed_declaration" : "public static var zero: Stack<Element>",
            "key.parsed_scope.end" : 148,
            "key.parsed_scope.start" : 146,
            "key.typename" : "Stack<Element>",
            "key.typeusr" : "$S14DataStructures5StackVyxGD",
            "key.usr" : "s:14DataStructures5StackV4zeroACyxGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func + (lhs: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>, rhs: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>) -&gt; <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3687
              }
            ],
            "key.bodylength" : 55,
            "key.bodyoffset" : 3743,
            "key.doc.column" : 24,
            "key.doc.comment" : "- Returns: `Stack` with the contents of two `Stack` values.",
            "key.doc.declaration" : "public static func + (lhs: Stack, rhs: Stack) -> Stack",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"151\" column=\"24\"><Name>+(_:_:)<\/Name><USR>s:14DataStructures5StackV1poiyACyxGAE_AEtFZ<\/USR><Declaration>public static func + (lhs: Stack, rhs: Stack) -&gt; Stack<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>Stack<\/codeVoice> with the contents of two <codeVoice>Stack<\/codeVoice> values.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 151,
            "key.doc.name" : "+(_:_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "`Stack` with the contents of two `Stack` values."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 64,
            "key.docoffset" : 3619,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 105,
            "key.name" : "+(_:_:)",
            "key.namelength" : 26,
            "key.nameoffset" : 3706,
            "key.offset" : 3694,
            "key.parsed_declaration" : "public static func + (lhs: Stack, rhs: Stack) -> Stack",
            "key.parsed_scope.end" : 153,
            "key.parsed_scope.start" : 151,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let lhs: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
                "key.fully_annotated_decl" : "<decl.var.parameter><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>",
                "key.kind" : "source.lang.swift.decl.var.parameter",
                "key.length" : 3,
                "key.name" : "lhs",
                "key.offset" : 3709,
                "key.parent_loc" : 3706,
                "key.parsed_declaration" : "public static func + (lhs: Stack, rhs: Stack) -> Stack",
                "key.parsed_scope.end" : 151,
                "key.parsed_scope.start" : 151,
                "key.typename" : "Stack<Element>",
                "key.typeusr" : "$S14DataStructures5StackVyxGD",
                "key.usr" : "s:14DataStructures5StackV1poiyACyxGAE_AEtFZ3lhsL_AEvp"
              }
            ],
            "key.typename" : "<Element> (Stack<Element>.Type) -> (Stack<Element>, Stack<Element>) -> Stack<Element>",
            "key.typeusr" : "$Sy14DataStructures5StackVyxGAD_ADtcD",
            "key.usr" : "s:14DataStructures5StackV1poiyACyxGAE_AEtFZ"
          }
        ],
        "key.typename" : "Stack<Element>.Type",
        "key.typeusr" : "$S14DataStructures5StackVyxGmD",
        "key.usr" : "s:14DataStructures5StackV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct Stack&lt;Element&gt;<\/Declaration>",
        "key.bodylength" : 331,
        "key.bodyoffset" : 3828,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct Stack<Element>",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"12\" column=\"15\"><Name>Stack<\/Name><USR>s:14DataStructures5StackV<\/USR><Declaration>public struct Stack&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>Stack structure.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "Stack",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 6,
            "key.offset" : 3820
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Stack<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Monoid"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 357,
        "key.name" : "Stack",
        "key.namelength" : 5,
        "key.nameoffset" : 3813,
        "key.offset" : 3803,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: - Monoid",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3837
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var identity: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;<Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3891
              }
            ],
            "key.bodylength" : 26,
            "key.bodyoffset" : 3935,
            "key.doc.column" : 23,
            "key.doc.comment" : "- Returns: Empty `Stack`.",
            "key.doc.declaration" : "public static var identity: Stack<Element> { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"161\" column=\"23\"><Name>identity<\/Name><USR>s:14DataStructures5StackV8identityACyxGvpZ<\/USR><Declaration>public static var identity: Stack&lt;Element&gt; { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Empty <codeVoice>Stack<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 161,
            "key.doc.name" : "identity",
            "key.doc.result_discussion" : [
              {
                "Para" : "Empty `Stack`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 30,
            "key.docoffset" : 3857,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>identity<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 64,
            "key.name" : "identity",
            "key.namelength" : 8,
            "key.nameoffset" : 3909,
            "key.offset" : 3898,
            "key.parsed_declaration" : "public static var identity: Stack<Element>",
            "key.parsed_scope.end" : 163,
            "key.parsed_scope.start" : 161,
            "key.typename" : "Stack<Element>",
            "key.typeusr" : "$S14DataStructures5StackVyxGD",
            "key.usr" : "s:14DataStructures5StackV8identityACyxGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func &lt;&gt; (lhs: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;<Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>&gt;, rhs: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;<Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>&gt;) -&gt; <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;<Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4043
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 4127,
            "key.doc.column" : 24,
            "key.doc.comment" : "- Returns: Composition of two of the same `Semigroup` type values.",
            "key.doc.declaration" : "public static func <> (lhs: Stack<Element>, rhs: Stack<Element>) -> Stack<Element>",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift\" line=\"166\" column=\"24\"><Name>&lt;&gt;(_:_:)<\/Name><USR>s:14DataStructures5StackV2lgoiyACyxGAE_AEtFZ<\/USR><Declaration>public static func &lt;&gt; (lhs: Stack&lt;Element&gt;, rhs: Stack&lt;Element&gt;) -&gt; Stack&lt;Element&gt;<\/Declaration><CommentParts><ResultDiscussion><Para>Composition of two of the same <codeVoice>Semigroup<\/codeVoice> type values.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 166,
            "key.doc.name" : "<>(_:_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Composition of two of the same `Semigroup` type values."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 71,
            "key.docoffset" : 3968,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt;&gt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 108,
            "key.name" : "<>(_:_:)",
            "key.namelength" : 45,
            "key.nameoffset" : 4062,
            "key.offset" : 4050,
            "key.parsed_declaration" : "public static func <> (lhs: Stack<Element>, rhs: Stack<Element>) -> Stack<Element>",
            "key.parsed_scope.end" : 168,
            "key.parsed_scope.start" : 166,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2lgoiyACyxGAE_AEtFZ\">&lt;&gt; (_: SortedArray&lt;Element&gt;, _: SortedArray&lt;Element&gt;) -&gt; SortedArray&lt;Element&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let lhs: <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;<Type usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Stack.swift",
                "key.fully_annotated_decl" : "<decl.var.parameter><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures5StackV7Elementxmfp\">Element<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>",
                "key.kind" : "source.lang.swift.decl.var.parameter",
                "key.length" : 3,
                "key.name" : "lhs",
                "key.offset" : 4066,
                "key.parent_loc" : 4062,
                "key.parsed_declaration" : "public static func <> (lhs: Stack<Element>, rhs: Stack<Element>) -> Stack<Element>",
                "key.parsed_scope.end" : 166,
                "key.parsed_scope.start" : 166,
                "key.typename" : "Stack<Element>",
                "key.typeusr" : "$S14DataStructures5StackVyxGD",
                "key.usr" : "s:14DataStructures5StackV2lgoiyACyxGAE_AEtFZ3lhsL_AEvp"
              }
            ],
            "key.typename" : "<Element> (Stack<Element>.Type) -> (Stack<Element>, Stack<Element>) -> Stack<Element>",
            "key.typeusr" : "$Sy14DataStructures5StackVyxGAD_ADtcD",
            "key.usr" : "s:14DataStructures5StackV2lgoiyACyxGAE_AEtFZ"
          }
        ],
        "key.typename" : "Stack<Element>.Type",
        "key.typeusr" : "$S14DataStructures5StackVyxGmD",
        "key.usr" : "s:14DataStructures5StackV"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 5563,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration>",
        "key.bodylength" : 5456,
        "key.bodyoffset" : 105,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum Tree<Branch, Leaf>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "A `Tree` can be used in pretty simple cases:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Or more nested cases:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"39\" column=\"13\"><Name>Tree<\/Name><USR>s:14DataStructures4TreeO<\/USR><Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration><CommentParts><Abstract><Para>A value-semantic, immutable Tree structure with two generic types for the branches and leaves.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>A <codeVoice>Tree<\/codeVoice> can be used in pretty simple cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let justALeaf: Tree<(),Double> = .leaf(3.14159265359)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Or more nested cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let happyTree = Tree.branch(\"alpha\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(1),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"beta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(2),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(3),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(4)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(5),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"gamma\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(6),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .branch(\"delta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(7),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(8)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[])]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 39,
        "key.doc.name" : "Tree",
        "key.doc.type" : "Other",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Tree<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\"><decl.generic_type_param.name>Branch<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\"><decl.generic_type_param.name>Leaf<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 5473,
        "key.name" : "Tree",
        "key.namelength" : 4,
        "key.nameoffset" : 99,
        "key.offset" : 89,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct Zipper<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 165
              }
            ],
            "key.bodylength" : 5372,
            "key.bodyoffset" : 187,
            "key.doc.column" : 19,
            "key.doc.comment" : "Navigate an immutable n-ary `Tree` structure.",
            "key.doc.declaration" : "public struct Zipper",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"11\" column=\"19\"><Name>Zipper<\/Name><USR>s:14DataStructures4TreeO6ZipperV<\/USR><Declaration>public struct Zipper<\/Declaration><CommentParts><Abstract><Para>Navigate an immutable n-ary <codeVoice>Tree<\/codeVoice> structure.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 11,
            "key.doc.name" : "Zipper",
            "key.doc.type" : "Class",
            "key.doclength" : 50,
            "key.docoffset" : 111,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Zipper<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 5388,
            "key.name" : "Zipper",
            "key.namelength" : 6,
            "key.nameoffset" : 179,
            "key.offset" : 172,
            "key.parsed_declaration" : "public struct Zipper",
            "key.parsed_scope.end" : 151,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
                "key.length" : 24,
                "key.name" : "MARK: - Associated Types",
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 200
              },
              {
                "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
                "key.length" : 48,
                "key.name" : "FIXME: Move to own file when SR-631 is resolved.",
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 314
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;Branch, Leaf&gt;.<Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type>.Crumb<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 371
                  }
                ],
                "key.bodylength" : 261,
                "key.bodyoffset" : 392,
                "key.doc.comment" : "Value of a `Tree` with its neighboring `Tree` values.",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;Branch, Leaf&gt;.<ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct>.<decl.name>Crumb<\/decl.name><\/decl.struct>",
                "key.kind" : "source.lang.swift.decl.struct",
                "key.length" : 276,
                "key.name" : "Crumb",
                "key.namelength" : 5,
                "key.nameoffset" : 385,
                "key.offset" : 378,
                "key.parsed_declaration" : "public struct Crumb",
                "key.parsed_scope.end" : 25,
                "key.parsed_scope.start" : 18,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public let value: <Type usr=\"s:14DataStructures6EitherO\">Either<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>, <Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>&gt;<\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 473
                      }
                    ],
                    "key.doc.column" : 24,
                    "key.doc.comment" : "Associated value of the currently in-focus `tree`.",
                    "key.doc.declaration" : "public let value: Either<Branch, Leaf>",
                    "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"21\" column=\"24\"><Name>value<\/Name><USR>s:14DataStructures4TreeO6ZipperV5CrumbV5valueAA6EitherOyxq_Gvp<\/USR><Declaration>public let value: Either&lt;Branch, Leaf&gt;<\/Declaration><CommentParts><Abstract><Para>Associated value of the currently in-focus <codeVoice>tree<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 21,
                    "key.doc.name" : "value",
                    "key.doc.type" : "Other",
                    "key.doclength" : 55,
                    "key.docoffset" : 406,
                    "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.enum usr=\"s:14DataStructures6EitherO\">Either<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 30,
                    "key.name" : "value",
                    "key.namelength" : 5,
                    "key.nameoffset" : 484,
                    "key.offset" : 480,
                    "key.parsed_declaration" : "public let value: Either<Branch,Leaf>",
                    "key.parsed_scope.end" : 21,
                    "key.parsed_scope.start" : 21,
                    "key.typename" : "Either<Branch, Leaf>",
                    "key.typeusr" : "$S14DataStructures6EitherOyxq_GD",
                    "key.usr" : "s:14DataStructures4TreeO6ZipperV5CrumbV5valueAA6EitherOyxq_Gvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>public let trees: ([<Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>], [<Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>])<\/Declaration>",
                    "key.attributes" : [
                      {
                        "key.attribute" : "source.decl.attribute.public",
                        "key.length" : 6,
                        "key.offset" : 610
                      }
                    ],
                    "key.doc.column" : 24,
                    "key.doc.comment" : "The other trees to the left and right of the tree currently in focus.",
                    "key.doc.declaration" : "public let trees: ([Tree], [Tree])",
                    "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"24\" column=\"24\"><Name>trees<\/Name><USR>s:14DataStructures4TreeO6ZipperV5CrumbV5treesSayACyxq_GG_AJtvp<\/USR><Declaration>public let trees: ([Tree], [Tree])<\/Declaration><CommentParts><Abstract><Para>The other trees to the left and right of the tree currently in focus.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 24,
                    "key.doc.name" : "trees",
                    "key.doc.type" : "Other",
                    "key.doclength" : 74,
                    "key.docoffset" : 524,
                    "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>trees<\/decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type>[<ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>]<\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type>[<ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>]<\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 27,
                    "key.name" : "trees",
                    "key.namelength" : 5,
                    "key.nameoffset" : 621,
                    "key.offset" : 617,
                    "key.parsed_declaration" : "public let trees: ([Tree], [Tree])",
                    "key.parsed_scope.end" : 24,
                    "key.parsed_scope.start" : 24,
                    "key.typename" : "([Tree<Branch, Leaf>], [Tree<Branch, Leaf>])",
                    "key.typeusr" : "$SSay14DataStructures4TreeOyxq_GG_AEtD",
                    "key.usr" : "s:14DataStructures4TreeO6ZipperV5CrumbV5treesSayACyxq_GG_AJtvp"
                  }
                ],
                "key.typename" : "Tree<Branch, Leaf>.Zipper.Crumb.Type",
                "key.typeusr" : "$S14DataStructures4TreeO6ZipperV5CrumbVyxq___GmD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV5CrumbV"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public typealias <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;Branch, Leaf&gt;.<Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type>.Breadcrumbs = <Type usr=\"s:14DataStructures5StackV\">Stack<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO6ZipperV5CrumbV\">Crumb<\/Type>&gt;<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 706
                  }
                ],
                "key.doc.column" : 26,
                "key.doc.comment" : "Collection of `Crumb` values.",
                "key.doc.declaration" : "public typealias DataStructures.Tree<Branch, Leaf>.Zipper.Breadcrumbs = Stack<Crumb>",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"28\" column=\"26\"><Name>Breadcrumbs<\/Name><USR>s:14DataStructures4TreeO6ZipperV11Breadcrumbsa<\/USR><Declaration>public typealias DataStructures.Tree&lt;Branch, Leaf&gt;.Zipper.Breadcrumbs = Stack&lt;Crumb&gt;<\/Declaration><CommentParts><Abstract><Para>Collection of <codeVoice>Crumb<\/codeVoice> values.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 28,
                "key.doc.name" : "Breadcrumbs",
                "key.doc.type" : "Other",
                "key.doclength" : 34,
                "key.docoffset" : 664,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;Branch, Leaf&gt;.<ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct>.<decl.name>Breadcrumbs<\/decl.name> = <ref.struct usr=\"s:14DataStructures5StackV\">Stack<\/ref.struct>&lt;<ref.struct usr=\"s:14DataStructures4TreeO6ZipperV5CrumbV\">Crumb<\/ref.struct>&gt;<\/decl.typealias>",
                "key.kind" : "source.lang.swift.decl.typealias",
                "key.length" : 36,
                "key.name" : "Breadcrumbs",
                "key.namelength" : 11,
                "key.nameoffset" : 723,
                "key.offset" : 713,
                "key.parsed_declaration" : "public typealias Breadcrumbs = Stack<Crumb>",
                "key.parsed_scope.end" : 28,
                "key.parsed_scope.start" : 28,
                "key.typename" : "Stack<Tree<Branch, Leaf>.Zipper.Crumb>.Type",
                "key.typeusr" : "$S14DataStructures5StackVyAA4TreeO6ZipperV5CrumbVyxq___GGmD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV11Breadcrumbsa"
              },
              {
                "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
                "key.length" : 27,
                "key.name" : "MARK: - Instance Properties",
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 762
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 847
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "The `Tree` wrapped by the `Zipper`.",
                "key.doc.declaration" : "public let tree: Tree",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"33\" column=\"20\"><Name>tree<\/Name><USR>s:14DataStructures4TreeO6ZipperV4treeACyxq_Gvp<\/USR><Declaration>public let tree: Tree<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>Tree<\/codeVoice> wrapped by the <codeVoice>Zipper<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 33,
                "key.doc.name" : "tree",
                "key.doc.type" : "Other",
                "key.doclength" : 40,
                "key.docoffset" : 799,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>tree<\/decl.name>: <decl.var.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 14,
                "key.name" : "tree",
                "key.namelength" : 4,
                "key.nameoffset" : 858,
                "key.offset" : 854,
                "key.parsed_declaration" : "public let tree: Tree",
                "key.parsed_scope.end" : 33,
                "key.parsed_scope.start" : 33,
                "key.typename" : "Tree<Branch, Leaf>",
                "key.typeusr" : "$S14DataStructures4TreeOyxq_GD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV4treeACyxq_Gvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let breadcrumbs: <Type usr=\"s:14DataStructures4TreeO6ZipperV11Breadcrumbsa\">Breadcrumbs<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1018
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "The stack of `Crumb` values that hold a history of the remaining parts of the tree\nthat are not currently in focus.",
                "key.doc.declaration" : "public let breadcrumbs: Breadcrumbs",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"37\" column=\"20\"><Name>breadcrumbs<\/Name><USR>s:14DataStructures4TreeO6ZipperV11breadcrumbsAA5StackVyAE5CrumbVyxq___GGvp<\/USR><Declaration>public let breadcrumbs: Breadcrumbs<\/Declaration><CommentParts><Abstract><Para>The stack of <codeVoice>Crumb<\/codeVoice> values that hold a history of the remaining parts of the tree that are not currently in focus.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 37,
                "key.doc.name" : "breadcrumbs",
                "key.doc.type" : "Other",
                "key.doclength" : 132,
                "key.docoffset" : 878,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>breadcrumbs<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:14DataStructures4TreeO6ZipperV11Breadcrumbsa\">Breadcrumbs<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 28,
                "key.name" : "breadcrumbs",
                "key.namelength" : 11,
                "key.nameoffset" : 1029,
                "key.offset" : 1025,
                "key.parsed_declaration" : "public let breadcrumbs: Breadcrumbs",
                "key.parsed_scope.end" : 37,
                "key.parsed_scope.start" : 37,
                "key.typename" : "Stack<Tree<Branch, Leaf>.Zipper.Crumb>",
                "key.typeusr" : "$S14DataStructures5StackVyAA4TreeO6ZipperV5CrumbVyxq___GGD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV11breadcrumbsAA5StackVyAE5CrumbVyxq___GGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var up: <Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type>? { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1109
                  }
                ],
                "key.bodylength" : 296,
                "key.bodyoffset" : 1133,
                "key.doc.column" : 20,
                "key.doc.comment" : "Move the `Zipper` up in the tree.",
                "key.doc.declaration" : "public var up: Zipper? { get }",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"40\" column=\"20\"><Name>up<\/Name><USR>s:14DataStructures4TreeO6ZipperV2upAEyxq__GSgvp<\/USR><Declaration>public var up: Zipper? { get }<\/Declaration><CommentParts><Abstract><Para>Move the <codeVoice>Zipper<\/codeVoice> up in the tree.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 40,
                "key.doc.name" : "up",
                "key.doc.type" : "Other",
                "key.doclength" : 38,
                "key.docoffset" : 1063,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>up<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 314,
                "key.name" : "up",
                "key.namelength" : 2,
                "key.nameoffset" : 1120,
                "key.offset" : 1116,
                "key.parsed_declaration" : "public var up: Zipper?",
                "key.parsed_scope.end" : 45,
                "key.parsed_scope.start" : 40,
                "key.typename" : "Tree<Branch, Leaf>.Zipper?",
                "key.typeusr" : "$S14DataStructures4TreeO6ZipperVyxq__GSgD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV2upAEyxq__GSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let left: [<Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;Branch, Leaf&gt;]<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>left<\/decl.name>: <decl.var.type>[<ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;Branch, Leaf&gt;]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 32,
                "key.name" : "left",
                "key.namelength" : 4,
                "key.nameoffset" : 1318,
                "key.offset" : 1313,
                "key.parsed_declaration" : "let (left, right) = latest.trees",
                "key.parsed_scope.end" : 43,
                "key.parsed_scope.start" : 43,
                "key.typename" : "[Tree<Branch, Leaf>]",
                "key.typeusr" : "$SSay14DataStructures4TreeOyxq_GGD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV2upAEyxq__GSgvg4leftL_SayACyxq_GGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let right: [<Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;Branch, Leaf&gt;]<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>right<\/decl.name>: <decl.var.type>[<ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;Branch, Leaf&gt;]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 32,
                "key.name" : "right",
                "key.namelength" : 5,
                "key.nameoffset" : 1324,
                "key.offset" : 1313,
                "key.parsed_declaration" : "let (left, right) = latest.trees",
                "key.parsed_scope.end" : 43,
                "key.parsed_scope.start" : 43,
                "key.typename" : "[Tree<Branch, Leaf>]",
                "key.typeusr" : "$SSay14DataStructures4TreeOyxq_GGD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV2upAEyxq__GSgvg5rightL_SayACyxq_GGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var top: <Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type> { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1496
                  }
                ],
                "key.bodylength" : 44,
                "key.bodyoffset" : 1520,
                "key.doc.column" : 20,
                "key.doc.comment" : "`Zipper` wrapping the `root` of the `Tree`.",
                "key.doc.declaration" : "public var top: Zipper { get }",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"48\" column=\"20\"><Name>top<\/Name><USR>s:14DataStructures4TreeO6ZipperV3topAEyxq__Gvp<\/USR><Declaration>public var top: Zipper { get }<\/Declaration><CommentParts><Abstract><Para><codeVoice>Zipper<\/codeVoice> wrapping the <codeVoice>root<\/codeVoice> of the <codeVoice>Tree<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 48,
                "key.doc.name" : "top",
                "key.doc.type" : "Other",
                "key.doclength" : 48,
                "key.docoffset" : 1440,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>top<\/decl.name>: <decl.var.type><ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 62,
                "key.name" : "top",
                "key.namelength" : 3,
                "key.nameoffset" : 1507,
                "key.offset" : 1503,
                "key.parsed_declaration" : "public var top: Zipper",
                "key.parsed_scope.end" : 50,
                "key.parsed_scope.start" : 48,
                "key.typename" : "Tree<Branch, Leaf>.Zipper",
                "key.typeusr" : "$S14DataStructures4TreeO6ZipperVyxq__GD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV3topAEyxq__Gvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var children: [<Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type>] { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1697
                  }
                ],
                "key.bodylength" : 128,
                "key.bodyoffset" : 1728,
                "key.doc.column" : 20,
                "key.doc.comment" : "- returns: `Zipper` values for each subtree contained by the wrapped `Tree`, if it is\na `branch`.",
                "key.doc.declaration" : "public var children: [Zipper] { get }",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"54\" column=\"20\"><Name>children<\/Name><USR>s:14DataStructures4TreeO6ZipperV8childrenSayAEyxq__GGvp<\/USR><Declaration>public var children: [Zipper] { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>Zipper<\/codeVoice> values for each subtree contained by the wrapped <codeVoice>Tree<\/codeVoice>, if it is a <codeVoice>branch<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
                "key.doc.line" : 54,
                "key.doc.name" : "children",
                "key.doc.result_discussion" : [
                  {
                    "Para" : "`Zipper` values for each subtree contained by the wrapped `Tree`, if it is a `branch`."
                  }
                ],
                "key.doc.type" : "Other",
                "key.doclength" : 114,
                "key.docoffset" : 1575,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>children<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 153,
                "key.name" : "children",
                "key.namelength" : 8,
                "key.nameoffset" : 1708,
                "key.offset" : 1704,
                "key.parsed_declaration" : "public var children: [Zipper]",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 54,
                "key.typename" : "[Tree<Branch, Leaf>.Zipper]",
                "key.typeusr" : "$SSay14DataStructures4TreeO6ZipperVyxq__GGD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV8childrenSayAEyxq__GGvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var siblings: [<Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type>] { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1954
                  }
                ],
                "key.bodylength" : 47,
                "key.bodyoffset" : 1985,
                "key.doc.column" : 20,
                "key.doc.comment" : "- returns: `Zipper` values for each sibling subtree of the wrapped `Tree`.",
                "key.doc.declaration" : "public var siblings: [Zipper] { get }",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"60\" column=\"20\"><Name>siblings<\/Name><USR>s:14DataStructures4TreeO6ZipperV8siblingsSayAEyxq__GGvp<\/USR><Declaration>public var siblings: [Zipper] { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>Zipper<\/codeVoice> values for each sibling subtree of the wrapped <codeVoice>Tree<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
                "key.doc.line" : 60,
                "key.doc.name" : "siblings",
                "key.doc.result_discussion" : [
                  {
                    "Para" : "`Zipper` values for each sibling subtree of the wrapped `Tree`."
                  }
                ],
                "key.doc.type" : "Other",
                "key.doclength" : 79,
                "key.docoffset" : 1867,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>siblings<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 72,
                "key.name" : "siblings",
                "key.namelength" : 8,
                "key.nameoffset" : 1965,
                "key.offset" : 1961,
                "key.parsed_declaration" : "public var siblings: [Zipper]",
                "key.parsed_scope.end" : 62,
                "key.parsed_scope.start" : 60,
                "key.typename" : "[Tree<Branch, Leaf>.Zipper]",
                "key.typeusr" : "$SSay14DataStructures4TreeO6ZipperVyxq__GGD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV8siblingsSayAEyxq__GGvp"
              },
              {
                "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
                "key.length" : 20,
                "key.name" : "MARK: - Initializers",
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2046
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(_ tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>, _ breadcrumbs: <Type usr=\"s:14DataStructures4TreeO6ZipperV11Breadcrumbsa\">Breadcrumbs<\/Type> = default)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 2210
                  }
                ],
                "key.bodylength" : 81,
                "key.bodyoffset" : 2281,
                "key.doc.column" : 16,
                "key.doc.comment" : "Create a `Zipper` with a `Tree` and a history of remaining parts of the tree that\nare not currently in focus.",
                "key.doc.declaration" : "public init(_ tree: Tree, _ breadcrumbs: Breadcrumbs = default)",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"68\" column=\"16\"><Name>init(_:_:)<\/Name><USR>s:14DataStructures4TreeO6ZipperVyAEyxq__GACyxq_G_AA5StackVyAE5CrumbVyxq___GGtcfc<\/USR><Declaration>public init(_ tree: Tree, _ breadcrumbs: Breadcrumbs = default)<\/Declaration><CommentParts><Abstract><Para>Create a <codeVoice>Zipper<\/codeVoice> with a <codeVoice>Tree<\/codeVoice> and a history of remaining parts of the tree that are not currently in focus.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 68,
                "key.doc.name" : "init(_:_:)",
                "key.doc.type" : "Function",
                "key.doclength" : 126,
                "key.docoffset" : 2076,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tree<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>breadcrumbs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:14DataStructures4TreeO6ZipperV11Breadcrumbsa\">Breadcrumbs<\/ref.typealias><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 146,
                "key.name" : "init(_:_:)",
                "key.namelength" : 62,
                "key.nameoffset" : 2217,
                "key.offset" : 2217,
                "key.parsed_declaration" : "public init(_ tree: Tree, _ breadcrumbs: Breadcrumbs = Breadcrumbs())",
                "key.parsed_scope.end" : 71,
                "key.parsed_scope.start" : 68,
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Zipper.Type) -> (Tree<Branch, Leaf>, Stack<Tree<Branch, Leaf>.Zipper.Crumb>) -> Tree<Branch, Leaf>.Zipper",
                "key.typeusr" : "$Sy14DataStructures4TreeO6ZipperVyxq__GACyxq_G_AA5StackVyAE5CrumbVyxq___GGtcD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperVyAEyxq__GACyxq_G_AA5StackVyAE5CrumbVyxq___GGtcfc"
              },
              {
                "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
                "key.length" : 24,
                "key.name" : "MARK: - Instance Methods",
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2376
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func move(to index: <Type usr=\"s:Si\">Int<\/Type>) throws -&gt; <Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 2546
                  }
                ],
                "key.bodylength" : 570,
                "key.bodyoffset" : 2596,
                "key.doc.column" : 21,
                "key.doc.comment" : "Move focus to the sub-tree with the given `index`.\n\n- throws: `TreeError` if index is out of bounds.",
                "key.doc.declaration" : "public func move(to index: Int) throws -> Zipper",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"78\" column=\"21\"><Name>move(to:)<\/Name><USR>s:14DataStructures4TreeO6ZipperV4move2toAEyxq__GSi_tKF<\/USR><Declaration>public func move(to index: Int) throws -&gt; Zipper<\/Declaration><CommentParts><Abstract><Para>Move focus to the sub-tree with the given <codeVoice>index<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>TreeError<\/codeVoice> if index is out of bounds.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
                "key.doc.line" : 78,
                "key.doc.name" : "move(to:)",
                "key.doc.type" : "Function",
                "key.doclength" : 128,
                "key.docoffset" : 2410,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>move<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 614,
                "key.name" : "move(to:)",
                "key.namelength" : 19,
                "key.nameoffset" : 2558,
                "key.offset" : 2553,
                "key.parsed_declaration" : "public func move(to index: Int) throws -> Zipper",
                "key.parsed_scope.end" : 95,
                "key.parsed_scope.start" : 78,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO6ZipperV4move7throughAEyxq__GSaySiG_tKF\">move(through:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Zipper) -> (Int) throws -> Tree<Branch, Leaf>.Zipper",
                "key.typeusr" : "$S2to14DataStructures4TreeO6ZipperVyxq__GSi_tKcD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV4move2toAEyxq__GSi_tKF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func move(through path: [<Type usr=\"s:Si\">Int<\/Type>]) throws -&gt; <Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 3320
                  }
                ],
                "key.bodylength" : 162,
                "key.bodyoffset" : 3376,
                "key.doc.column" : 21,
                "key.doc.comment" : "Move focus to the sub-tree through the given `path`.\n\n- throws: `TreeError` if the given `path` is no good.",
                "key.doc.declaration" : "public func move(through path: [Int]) throws -> Zipper",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"100\" column=\"21\"><Name>move(through:)<\/Name><USR>s:14DataStructures4TreeO6ZipperV4move7throughAEyxq__GSaySiG_tKF<\/USR><Declaration>public func move(through path: [Int]) throws -&gt; Zipper<\/Declaration><CommentParts><Abstract><Para>Move focus to the sub-tree through the given <codeVoice>path<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>TreeError<\/codeVoice> if the given <codeVoice>path<\/codeVoice> is no good.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
                "key.doc.line" : 100,
                "key.doc.name" : "move(through:)",
                "key.doc.type" : "Function",
                "key.doclength" : 135,
                "key.docoffset" : 3177,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>move<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>through<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 212,
                "key.name" : "move(through:)",
                "key.namelength" : 25,
                "key.nameoffset" : 3332,
                "key.offset" : 3327,
                "key.parsed_declaration" : "public func move(through path: [Int]) throws -> Zipper",
                "key.parsed_scope.end" : 103,
                "key.parsed_scope.start" : 100,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO6ZipperV4move2toAEyxq__GSi_tKF\">move(to:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Zipper) -> ([Int]) throws -> Tree<Branch, Leaf>.Zipper",
                "key.typeusr" : "$S7through14DataStructures4TreeO6ZipperVyxq__GSaySiG_tKcD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV4move7throughAEyxq__GSaySiG_tKF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func update(_ transform: <Type usr=\"s:14DataStructures4TreeO9TransformV\">Transform<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>, <Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>&gt;) -&gt; <Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 3604
                  }
                ],
                "key.bodylength" : 289,
                "key.bodyoffset" : 3671,
                "key.doc.column" : 21,
                "key.doc.comment" : "Transform the value of the wrapped `Tree`.",
                "key.doc.declaration" : "public func update(_ transform: Transform<Branch, Leaf>) -> Zipper",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"106\" column=\"21\"><Name>update(_:)<\/Name><USR>s:14DataStructures4TreeO6ZipperV6updateyAEyxq__GAC9TransformVyxq__xq_GF<\/USR><Declaration>public func update(_ transform: Transform&lt;Branch, Leaf&gt;) -&gt; Zipper<\/Declaration><CommentParts><Abstract><Para>Transform the value of the wrapped <codeVoice>Tree<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 106,
                "key.doc.name" : "update(_:)",
                "key.doc.type" : "Function",
                "key.doclength" : 47,
                "key.docoffset" : 3549,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>update<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>transform<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures4TreeO9TransformV\">Transform<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 350,
                "key.name" : "update(_:)",
                "key.namelength" : 43,
                "key.nameoffset" : 3616,
                "key.offset" : 3611,
                "key.parsed_declaration" : "public func update(_ transform: Transform<Branch,Leaf>) -> Zipper",
                "key.parsed_scope.end" : 113,
                "key.parsed_scope.start" : 106,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO6ZipperV6update5valueAEyxq__GAA6EitherOyxq_G_tF\">update(value:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Zipper) -> (Tree<Branch, Leaf>.Transform<Branch, Leaf>) -> Tree<Branch, Leaf>.Zipper",
                "key.typeusr" : "$Sy14DataStructures4TreeO6ZipperVyxq__GAC9TransformVyxq__xq_GcD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV6updateyAEyxq__GAC9TransformVyxq__xq_GF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func updateLeaf(_ transform: (<Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 4054
                  }
                ],
                "key.bodylength" : 140,
                "key.bodyoffset" : 4117,
                "key.doc.column" : 21,
                "key.doc.comment" : "Transform the leaf value of the wrapped `Tree` with the given `value`.",
                "key.doc.declaration" : "public func updateLeaf(_ transform: (Leaf) -> Leaf) -> Zipper",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"116\" column=\"21\"><Name>updateLeaf(_:)<\/Name><USR>s:14DataStructures4TreeO6ZipperV10updateLeafyAEyxq__Gq_q_XEF<\/USR><Declaration>public func updateLeaf(_ transform: (Leaf) -&gt; Leaf) -&gt; Zipper<\/Declaration><CommentParts><Abstract><Para>Transform the leaf value of the wrapped <codeVoice>Tree<\/codeVoice> with the given <codeVoice>value<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 116,
                "key.doc.name" : "updateLeaf(_:)",
                "key.doc.type" : "Function",
                "key.doclength" : 75,
                "key.docoffset" : 3971,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updateLeaf<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>transform<\/decl.var.parameter.name>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 197,
                "key.name" : "updateLeaf(_:)",
                "key.namelength" : 39,
                "key.nameoffset" : 4066,
                "key.offset" : 4061,
                "key.parsed_declaration" : "public func updateLeaf(_ transform: (Leaf) -> Leaf) -> Zipper",
                "key.parsed_scope.end" : 119,
                "key.parsed_scope.start" : 116,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO6ZipperV10updateLeafyAEyxq__Gq_F\">updateLeaf(_: Leaf) -&gt; Zipper<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Zipper) -> ((Leaf) -> Leaf) -> Tree<Branch, Leaf>.Zipper",
                "key.typeusr" : "$Sy14DataStructures4TreeO6ZipperVyxq__Gq_q_XEcD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV10updateLeafyAEyxq__Gq_q_XEF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func updateLeaf(_ value: <Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 4348
                  }
                ],
                "key.bodylength" : 54,
                "key.bodyoffset" : 4397,
                "key.doc.column" : 21,
                "key.doc.comment" : "Update the leaf value of the wrapped `Tree` with the given `value`.",
                "key.doc.declaration" : "public func updateLeaf(_ value: Leaf) -> Zipper",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"122\" column=\"21\"><Name>updateLeaf(_:)<\/Name><USR>s:14DataStructures4TreeO6ZipperV10updateLeafyAEyxq__Gq_F<\/USR><Declaration>public func updateLeaf(_ value: Leaf) -&gt; Zipper<\/Declaration><CommentParts><Abstract><Para>Update the leaf value of the wrapped <codeVoice>Tree<\/codeVoice> with the given <codeVoice>value<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 122,
                "key.doc.name" : "updateLeaf(_:)",
                "key.doc.type" : "Function",
                "key.doclength" : 72,
                "key.docoffset" : 4268,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updateLeaf<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 97,
                "key.name" : "updateLeaf(_:)",
                "key.namelength" : 25,
                "key.nameoffset" : 4360,
                "key.offset" : 4355,
                "key.parsed_declaration" : "public func updateLeaf(_ value: Leaf) -> Zipper",
                "key.parsed_scope.end" : 124,
                "key.parsed_scope.start" : 122,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO6ZipperV10updateLeafyAEyxq__Gq_q_XEF\">updateLeaf(_: (Leaf) -&gt; Leaf) -&gt; Zipper<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Zipper) -> (Leaf) -> Tree<Branch, Leaf>.Zipper",
                "key.typeusr" : "$Sy14DataStructures4TreeO6ZipperVyxq__Gq_cD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV10updateLeafyAEyxq__Gq_F"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func updateBranch(_ transform: (<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 4547
                  }
                ],
                "key.bodylength" : 160,
                "key.bodyoffset" : 4616,
                "key.doc.column" : 21,
                "key.doc.comment" : "Transform the branch value of the wrapped `Tree` with the given `value`.",
                "key.doc.declaration" : "public func updateBranch(_ transform: (Branch) -> Branch) -> Zipper",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"127\" column=\"21\"><Name>updateBranch(_:)<\/Name><USR>s:14DataStructures4TreeO6ZipperV12updateBranchyAEyxq__GxxXEF<\/USR><Declaration>public func updateBranch(_ transform: (Branch) -&gt; Branch) -&gt; Zipper<\/Declaration><CommentParts><Abstract><Para>Transform the branch value of the wrapped <codeVoice>Tree<\/codeVoice> with the given <codeVoice>value<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 127,
                "key.doc.name" : "updateBranch(_:)",
                "key.doc.type" : "Function",
                "key.doclength" : 77,
                "key.docoffset" : 4462,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updateBranch<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>transform<\/decl.var.parameter.name>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 223,
                "key.name" : "updateBranch(_:)",
                "key.namelength" : 45,
                "key.nameoffset" : 4559,
                "key.offset" : 4554,
                "key.parsed_declaration" : "public func updateBranch(_ transform: (Branch) -> Branch) -> Zipper",
                "key.parsed_scope.end" : 130,
                "key.parsed_scope.start" : 127,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO6ZipperV12updateBranchyAEyxq__GxF\">updateBranch(_: Branch) -&gt; Zipper<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Zipper) -> ((Branch) -> Branch) -> Tree<Branch, Leaf>.Zipper",
                "key.typeusr" : "$Sy14DataStructures4TreeO6ZipperVyxq__GxxXEcD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV12updateBranchyAEyxq__GxxXEF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func updateBranch(_ value: <Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 4870
                  }
                ],
                "key.bodylength" : 56,
                "key.bodyoffset" : 4923,
                "key.doc.column" : 21,
                "key.doc.comment" : "Replace the branch value of the wrapped `Tree` with the given `value`.",
                "key.doc.declaration" : "public func updateBranch(_ value: Branch) -> Zipper",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"133\" column=\"21\"><Name>updateBranch(_:)<\/Name><USR>s:14DataStructures4TreeO6ZipperV12updateBranchyAEyxq__GxF<\/USR><Declaration>public func updateBranch(_ value: Branch) -&gt; Zipper<\/Declaration><CommentParts><Abstract><Para>Replace the branch value of the wrapped <codeVoice>Tree<\/codeVoice> with the given <codeVoice>value<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 133,
                "key.doc.name" : "updateBranch(_:)",
                "key.doc.type" : "Function",
                "key.doclength" : 75,
                "key.docoffset" : 4787,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updateBranch<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 103,
                "key.name" : "updateBranch(_:)",
                "key.namelength" : 29,
                "key.nameoffset" : 4882,
                "key.offset" : 4877,
                "key.parsed_declaration" : "public func updateBranch(_ value: Branch) -> Zipper",
                "key.parsed_scope.end" : 135,
                "key.parsed_scope.start" : 133,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO6ZipperV12updateBranchyAEyxq__GxxXEF\">updateBranch(_: (Branch) -&gt; Branch) -&gt; Zipper<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Zipper) -> (Branch) -> Tree<Branch, Leaf>.Zipper",
                "key.typeusr" : "$Sy14DataStructures4TreeO6ZipperVyxq__GxcD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV12updateBranchyAEyxq__GxF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func update(value: <Type usr=\"s:14DataStructures6EitherO\">Either<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>, <Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>&gt;) -&gt; <Type usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 5066
                  }
                ],
                "key.bodylength" : 429,
                "key.bodyoffset" : 5124,
                "key.doc.column" : 21,
                "key.doc.comment" : "Replace the value of the wrapped `Tree` with the given `value`.",
                "key.doc.declaration" : "public func update(value: Either<Branch, Leaf>) -> Zipper",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift\" line=\"138\" column=\"21\"><Name>update(value:)<\/Name><USR>s:14DataStructures4TreeO6ZipperV6update5valueAEyxq__GAA6EitherOyxq_G_tF<\/USR><Declaration>public func update(value: Either&lt;Branch, Leaf&gt;) -&gt; Zipper<\/Declaration><CommentParts><Abstract><Para>Replace the value of the wrapped <codeVoice>Tree<\/codeVoice> with the given <codeVoice>value<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
                "key.doc.line" : 138,
                "key.doc.name" : "update(value:)",
                "key.doc.type" : "Function",
                "key.doclength" : 68,
                "key.docoffset" : 4990,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>update<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures6EitherO\">Either<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures4TreeO6ZipperV\">Zipper<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 481,
                "key.name" : "update(value:)",
                "key.namelength" : 34,
                "key.nameoffset" : 5078,
                "key.offset" : 5073,
                "key.parsed_declaration" : "public func update(value: Either<Branch,Leaf>) -> Zipper",
                "key.parsed_scope.end" : 150,
                "key.parsed_scope.start" : 138,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO6ZipperV6updateyAEyxq__GAC9TransformVyxq__xq_GF\">update(_:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let transform: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;Branch, Leaf&gt;.<Type usr=\"s:14DataStructures4TreeO9TransformV\">Transform<\/Type>&lt;Branch, Leaf&gt;<\/Declaration>",
                    "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.Zipper.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>transform<\/decl.name>: <decl.var.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;Branch, Leaf&gt;.<ref.struct usr=\"s:14DataStructures4TreeO9TransformV\">Transform<\/ref.struct>&lt;Branch, Leaf&gt;<\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 370,
                    "key.name" : "transform",
                    "key.namelength" : 9,
                    "key.nameoffset" : 5141,
                    "key.offset" : 5137,
                    "key.parsed_declaration" : "let transform = Transform(",
                    "key.parsed_scope.end" : 139,
                    "key.parsed_scope.start" : 139,
                    "key.typename" : "Tree<Branch, Leaf>.Transform<Branch, Leaf>",
                    "key.typeusr" : "$S14DataStructures4TreeO9TransformVyxq__xq_GD",
                    "key.usr" : "s:14DataStructures4TreeO6ZipperV6update5valueAEyxq__GAA6EitherOyxq_G_tF9transformL_AC9TransformVyxq__xq_Gvp"
                  }
                ],
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Zipper) -> (Either<Branch, Leaf>) -> Tree<Branch, Leaf>.Zipper",
                "key.typeusr" : "$S5value14DataStructures4TreeO6ZipperVyxq__GAB6EitherOyxq_G_tcD",
                "key.usr" : "s:14DataStructures4TreeO6ZipperV6update5valueAEyxq__GAA6EitherOyxq_G_tF"
              }
            ],
            "key.typename" : "Tree<Branch, Leaf>.Zipper.Type",
            "key.typeusr" : "$S14DataStructures4TreeO6ZipperVyxq__GmD",
            "key.usr" : "s:14DataStructures4TreeO6ZipperV"
          }
        ],
        "key.typename" : "Tree<Branch, Leaf>.Type",
        "key.typeusr" : "$S14DataStructures4TreeOyxq_GmD",
        "key.usr" : "s:14DataStructures4TreeO"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 11184,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 817
          }
        ],
        "key.bodylength" : 208,
        "key.bodyoffset" : 849,
        "key.doc.column" : 13,
        "key.doc.comment" : "A value-semantic, immutable Tree structure with two generic types for the branches and leaves.\n\n**Example Usage**\n\nA `Tree` can be used in pretty simple cases:\n\n    let justALeaf: Tree<(),Double> = .leaf(3.14159265359)\n\nOr more nested cases:\n\n    let happyTree = Tree.branch(\"alpha\", [\n        .leaf(1),\n        .branch(\"beta\", [\n            .leaf(2),\n            .leaf(3),\n            .leaf(4)\n        ]),\n        .leaf(5),\n        .branch(\"gamma\", [\n            .leaf(6),\n            .branch(\"delta\", [\n                .leaf(7),\n                .leaf(8)\n            ])\n        ])\n    ])",
        "key.doc.declaration" : "public enum Tree<Branch, Leaf>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "A `Tree` can be used in pretty simple cases:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Or more nested cases:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"39\" column=\"13\"><Name>Tree<\/Name><USR>s:14DataStructures4TreeO<\/USR><Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration><CommentParts><Abstract><Para>A value-semantic, immutable Tree structure with two generic types for the branches and leaves.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>A <codeVoice>Tree<\/codeVoice> can be used in pretty simple cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let justALeaf: Tree<(),Double> = .leaf(3.14159265359)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Or more nested cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let happyTree = Tree.branch(\"alpha\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(1),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"beta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(2),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(3),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(4)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(5),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"gamma\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(6),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .branch(\"delta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(7),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(8)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[])]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 39,
        "key.doc.name" : "Tree",
        "key.doc.type" : "Other",
        "key.doclength" : 692,
        "key.docoffset" : 125,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Tree<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\"><decl.generic_type_param.name>Branch<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\"><decl.generic_type_param.name>Leaf<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 234,
        "key.name" : "Tree",
        "key.namelength" : 4,
        "key.nameoffset" : 829,
        "key.offset" : 824,
        "key.parsed_declaration" : "public enum Tree <Branch,Leaf>",
        "key.parsed_scope.end" : 48,
        "key.parsed_scope.start" : 39,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Branch<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Branch<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 6,
            "key.name" : "Branch",
            "key.namelength" : 6,
            "key.nameoffset" : 835,
            "key.offset" : 835,
            "key.parsed_declaration" : "public enum Tree <Branch,Leaf>",
            "key.parsed_scope.end" : 39,
            "key.parsed_scope.start" : 39,
            "key.typename" : "Branch.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures4TreeO6Branchxmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Leaf<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Leaf<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 4,
            "key.name" : "Leaf",
            "key.namelength" : 4,
            "key.nameoffset" : 842,
            "key.offset" : 842,
            "key.parsed_declaration" : "public enum Tree <Branch,Leaf>",
            "key.parsed_scope.end" : 39,
            "key.parsed_scope.start" : 39,
            "key.typename" : "Leaf.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures4TreeO4Leafq_mfp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: - Cases",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 858
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 900,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case leaf(<Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>)<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "The leaf case.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"44\" column=\"10\"><Name>leaf(_:)<\/Name><USR>s:14DataStructures4TreeO4leafyACyxq_Gq_cAEmr0_lF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The leaf case.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 44,
                "key.doc.name" : "leaf(_:)",
                "key.doc.type" : "Other",
                "key.doclength" : 19,
                "key.docoffset" : 877,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>leaf<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.name" : "leaf(_:)",
                "key.namelength" : 10,
                "key.nameoffset" : 905,
                "key.offset" : 905,
                "key.parsed_declaration" : "case leaf(Leaf)",
                "key.parsed_scope.end" : 44,
                "key.parsed_scope.start" : 44,
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Type) -> (Leaf) -> Tree<Branch, Leaf>",
                "key.typeusr" : "$Sy14DataStructures4TreeOyxq_Gq_cADmcr0_luD",
                "key.usr" : "s:14DataStructures4TreeO4leafyACyxq_Gq_cAEmr0_lF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 27,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1029,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>indirect case branch(<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>, [<Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>])<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.indirect",
                    "key.length" : 8,
                    "key.offset" : 1020
                  }
                ],
                "key.doc.column" : 19,
                "key.doc.comment" : "The branch case, containing the value for this node, as well as all of its children nodes.",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"47\" column=\"19\"><Name>branch(_:_:)<\/Name><USR>s:14DataStructures4TreeO6branchyACyxq_Gx_SayAEGtcAEmr0_lF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>The branch case, containing the value for this node, as well as all of its children nodes.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 47,
                "key.doc.name" : "branch(_:_:)",
                "key.doc.type" : "Other",
                "key.doclength" : 95,
                "key.docoffset" : 921,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>indirect<\/syntaxtype.keyword> <syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>branch<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>[<ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 22,
                "key.name" : "branch(_:_:)",
                "key.namelength" : 22,
                "key.nameoffset" : 1034,
                "key.offset" : 1034,
                "key.parsed_declaration" : "indirect case branch(Branch, [Tree])",
                "key.parsed_scope.end" : 47,
                "key.parsed_scope.start" : 47,
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Type) -> (Branch, [Tree<Branch, Leaf>]) -> Tree<Branch, Leaf>",
                "key.typeusr" : "$Sy14DataStructures4TreeOyxq_Gx_SayADGtcADmcr0_luD",
                "key.usr" : "s:14DataStructures4TreeO6branchyACyxq_Gx_SayAEGtcAEmr0_lF"
              }
            ]
          }
        ],
        "key.typename" : "Tree<Branch, Leaf>.Type",
        "key.typeusr" : "$S14DataStructures4TreeOyxq_GmD",
        "key.usr" : "s:14DataStructures4TreeO"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration>",
        "key.bodylength" : 2061,
        "key.bodyoffset" : 1076,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum Tree<Branch, Leaf>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "A `Tree` can be used in pretty simple cases:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Or more nested cases:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"39\" column=\"13\"><Name>Tree<\/Name><USR>s:14DataStructures4TreeO<\/USR><Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration><CommentParts><Abstract><Para>A value-semantic, immutable Tree structure with two generic types for the branches and leaves.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>A <codeVoice>Tree<\/codeVoice> can be used in pretty simple cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let justALeaf: Tree<(),Double> = .leaf(3.14159265359)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Or more nested cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let happyTree = Tree.branch(\"alpha\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(1),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"beta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(2),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(3),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(4)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(5),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"gamma\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(6),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .branch(\"delta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(7),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(8)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[])]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 39,
        "key.doc.name" : "Tree",
        "key.doc.type" : "Other",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Tree<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\"><decl.generic_type_param.name>Branch<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\"><decl.generic_type_param.name>Leaf<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2078,
        "key.name" : "Tree",
        "key.namelength" : 4,
        "key.nameoffset" : 1070,
        "key.offset" : 1060,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1085
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var leaves: [<Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1440
              }
            ],
            "key.bodylength" : 333,
            "key.bodyoffset" : 1467,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: The values contained by the leaves of this `Tree`.\n\n    let tree = Tree.branch(\"root\", [\n        .leaf(0),\n        .branch(\"internal\", [\n            .leaf(1)\n        ]),\n        .leaf(2)\n    ])\n    tree.leaves \/\/ => [0,1,2]",
            "key.doc.declaration" : "public var leaves: [Leaf] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"65\" column=\"16\"><Name>leaves<\/Name><USR>s:14DataStructures4TreeO6leavesSayq_Gvp<\/USR><Declaration>public var leaves: [Leaf] { get }<\/Declaration><CommentParts><ResultDiscussion><Para>The values contained by the leaves of this <codeVoice>Tree<\/codeVoice>.<\/Para><Para>let tree = Tree.branch(“root”, [ .leaf(0), .branch(“internal”, [ .leaf(1) ]), .leaf(2) ]) tree.leaves \/\/ =&gt; [0,1,2]<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 65,
            "key.doc.name" : "leaves",
            "key.doc.result_discussion" : [
              {
                "Para" : "The values contained by the leaves of this `Tree`."
              },
              {
                "Para" : "let tree = Tree.branch(“root”, [ .leaf(0), .branch(“internal”, [ .leaf(1) ]), .leaf(2) ]) tree.leaves \/\/ => [0,1,2]"
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 318,
            "key.docoffset" : 1118,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>leaves<\/decl.name>: <decl.var.type>[<ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 354,
            "key.name" : "leaves",
            "key.namelength" : 6,
            "key.nameoffset" : 1451,
            "key.offset" : 1447,
            "key.parsed_declaration" : "public var leaves: [Leaf]",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 65,
            "key.typename" : "[Leaf]",
            "key.typeusr" : "$SSayq_GD",
            "key.usr" : "s:14DataStructures4TreeO6leavesSayq_Gvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func flattened(accum: [<Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>], tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>) -&gt; [<Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>]<\/Declaration>",
            "key.bodylength" : 217,
            "key.bodyoffset" : 1529,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>flattened<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>accum<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tree<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param>]<\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 271,
            "key.name" : "flattened(accum:tree:)",
            "key.namelength" : 36,
            "key.nameoffset" : 1481,
            "key.offset" : 1476,
            "key.parsed_declaration" : "func flattened(accum: [Leaf], tree: Tree) -> [Leaf]",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 66,
            "key.substructure" : [

            ],
            "key.typename" : "<Branch, Leaf> (accum: [Leaf], tree: Tree<Branch, Leaf>) -> [Leaf]",
            "key.typeusr" : "$S5accum4treeSayq_GAC_14DataStructures4TreeOyxq_Gtcr0_luD",
            "key.usr" : "s:14DataStructures4TreeO6leavesSayq_Gvg9flattenedL_5accum4treeA2E_ACyxq_Gtr0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var height: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2157
              }
            ],
            "key.bodylength" : 325,
            "key.bodyoffset" : 2181,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: The number of edges on the longest path between the root and a leaf.\n\n    let tree = Tree.branch(0, [\n        .leaf(1),\n        .branch(2, [\n            .leaf(1),\n            .leaf(2)\n        ]),\n        .leaf(3)\n    ])\n    tree.height \/\/ => 2",
            "key.doc.declaration" : "public var height: Int { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"89\" column=\"16\"><Name>height<\/Name><USR>s:14DataStructures4TreeO6heightSivp<\/USR><Declaration>public var height: Int { get }<\/Declaration><CommentParts><ResultDiscussion><Para>The number of edges on the longest path between the root and a leaf.<\/Para><Para>let tree = Tree.branch(0, [ .leaf(1), .branch(2, [ .leaf(1), .leaf(2) ]), .leaf(3) ]) tree.height \/\/ =&gt; 2<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 89,
            "key.doc.name" : "height",
            "key.doc.result_discussion" : [
              {
                "Para" : "The number of edges on the longest path between the root and a leaf."
              },
              {
                "Para" : "let tree = Tree.branch(0, [ .leaf(1), .branch(2, [ .leaf(1), .leaf(2) ]), .leaf(3) ]) tree.height \/\/ => 2"
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 346,
            "key.docoffset" : 1807,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>height<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 343,
            "key.name" : "height",
            "key.namelength" : 6,
            "key.nameoffset" : 2168,
            "key.offset" : 2164,
            "key.parsed_declaration" : "public var height: Int",
            "key.parsed_scope.end" : 99,
            "key.parsed_scope.start" : 89,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures4TreeO6heightSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func traverse(_ tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>, height: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.bodylength" : 220,
            "key.bodyoffset" : 2239,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>traverse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tree<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 270,
            "key.name" : "traverse(_:height:)",
            "key.namelength" : 35,
            "key.nameoffset" : 2195,
            "key.offset" : 2190,
            "key.parsed_declaration" : "func traverse(_ tree: Tree, height: Int) -> Int",
            "key.parsed_scope.end" : 97,
            "key.parsed_scope.start" : 90,
            "key.substructure" : [

            ],
            "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>, height: Int) -> Int",
            "key.typeusr" : "$S_6heightSi14DataStructures4TreeOyxq_G_Sitcr0_luD",
            "key.usr" : "s:14DataStructures4TreeO6heightSivg8traverseL__ADSiACyxq_G_Sitr0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var paths: [[<Type usr=\"s:14DataStructures6EitherO\">Either<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>, <Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>&gt;]] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2595
              }
            ],
            "key.bodylength" : 497,
            "key.bodyoffset" : 2638,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: All of the values along the paths from this node to each leaf.",
            "key.doc.declaration" : "public var paths: [[Either<Branch, Leaf>]] { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"102\" column=\"16\"><Name>paths<\/Name><USR>s:14DataStructures4TreeO5pathsSaySayAA6EitherOyxq_GGGvp<\/USR><Declaration>public var paths: [[Either&lt;Branch, Leaf&gt;]] { get }<\/Declaration><CommentParts><ResultDiscussion><Para>All of the values along the paths from this node to each leaf.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 102,
            "key.doc.name" : "paths",
            "key.doc.result_discussion" : [
              {
                "Para" : "All of the values along the paths from this node to each leaf."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 78,
            "key.docoffset" : 2513,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>paths<\/decl.name>: <decl.var.type>[[<ref.enum usr=\"s:14DataStructures6EitherO\">Either<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param>&gt;]]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 534,
            "key.name" : "paths",
            "key.namelength" : 5,
            "key.nameoffset" : 2606,
            "key.offset" : 2602,
            "key.parsed_declaration" : "public var paths: [[Either<Branch,Leaf>]]",
            "key.parsed_scope.end" : 114,
            "key.parsed_scope.start" : 102,
            "key.typename" : "[[Either<Branch, Leaf>]]",
            "key.typeusr" : "$SSaySay14DataStructures6EitherOyxq_GGGD",
            "key.usr" : "s:14DataStructures4TreeO5pathsSaySayAA6EitherOyxq_GGGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func traverse(_ tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>, accum: [[<Type usr=\"s:14DataStructures6EitherO\">Either<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>, <Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>&gt;]]) -&gt; [[<Type usr=\"s:14DataStructures6EitherO\">Either<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>, <Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>&gt;]]<\/Declaration>",
            "key.bodylength" : 353,
            "key.bodyoffset" : 2735,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>traverse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tree<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>accum<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[[<ref.enum usr=\"s:14DataStructures6EitherO\">Either<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param>&gt;]]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype>[[<ref.enum usr=\"s:14DataStructures6EitherO\">Either<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param>&gt;]]<\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 442,
            "key.name" : "traverse(_:accum:)",
            "key.namelength" : 54,
            "key.nameoffset" : 2652,
            "key.offset" : 2647,
            "key.parsed_declaration" : "func traverse(_ tree: Tree, accum: [[Either<Branch,Leaf>]]) -> [[Either<Branch,Leaf>]]",
            "key.parsed_scope.end" : 112,
            "key.parsed_scope.start" : 103,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var accum: [[<Type usr=\"s:14DataStructures6EitherO\">Either<\/Type>&lt;Branch, Leaf&gt;]]<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>accum<\/decl.name>: <decl.var.type>[[<ref.enum usr=\"s:14DataStructures6EitherO\">Either<\/ref.enum>&lt;Branch, Leaf&gt;]]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 17,
                "key.name" : "accum",
                "key.namelength" : 5,
                "key.nameoffset" : 2752,
                "key.offset" : 2748,
                "key.parsed_declaration" : "var accum = accum",
                "key.parsed_scope.end" : 104,
                "key.parsed_scope.start" : 104,
                "key.typename" : "[[Either<Branch, Leaf>]]",
                "key.typeusr" : "$SSaySay14DataStructures6EitherOyxq_GGGD",
                "key.usr" : "s:14DataStructures4TreeO5pathsSaySayAA6EitherOyxq_GGGvg8traverseL__5accumAiCyxq_G_AItr0_lFAKL0_AIvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let path: [<Type usr=\"s:14DataStructures6EitherO\">Either<\/Type>&lt;Branch, Leaf&gt;]<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>path<\/decl.name>: <decl.var.type>[<ref.enum usr=\"s:14DataStructures6EitherO\">Either<\/ref.enum>&lt;Branch, Leaf&gt;]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 32,
                "key.name" : "path",
                "key.namelength" : 4,
                "key.nameoffset" : 2782,
                "key.offset" : 2778,
                "key.parsed_declaration" : "let path = accum.popLast() ?? []",
                "key.parsed_scope.end" : 105,
                "key.parsed_scope.start" : 105,
                "key.typename" : "[Either<Branch, Leaf>]",
                "key.typeusr" : "$SSay14DataStructures6EitherOyxq_GGD",
                "key.usr" : "s:14DataStructures4TreeO5pathsSaySayAA6EitherOyxq_GGGvg8traverseL__5accumAiCyxq_G_AItr0_lF4pathL_AHvp"
              }
            ],
            "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>, accum: [[Either<Branch, Leaf>]]) -> [[Either<Branch, Leaf>]]",
            "key.typeusr" : "$S_5accumSaySay14DataStructures6EitherOyxq_GGGAB4TreeOyxq_G_AGtcr0_luD",
            "key.usr" : "s:14DataStructures4TreeO5pathsSaySayAA6EitherOyxq_GGGvg8traverseL__5accumAiCyxq_G_AItr0_lF"
          }
        ],
        "key.typename" : "Tree<Branch, Leaf>.Type",
        "key.typeusr" : "$S14DataStructures4TreeOyxq_GmD",
        "key.usr" : "s:14DataStructures4TreeO"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration>",
        "key.bodylength" : 5926,
        "key.bodyoffset" : 3156,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum Tree<Branch, Leaf>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "A `Tree` can be used in pretty simple cases:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Or more nested cases:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"39\" column=\"13\"><Name>Tree<\/Name><USR>s:14DataStructures4TreeO<\/USR><Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration><CommentParts><Abstract><Para>A value-semantic, immutable Tree structure with two generic types for the branches and leaves.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>A <codeVoice>Tree<\/codeVoice> can be used in pretty simple cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let justALeaf: Tree<(),Double> = .leaf(3.14159265359)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Or more nested cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let happyTree = Tree.branch(\"alpha\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(1),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"beta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(2),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(3),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(4)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(5),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"gamma\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(6),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .branch(\"delta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(7),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(8)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[])]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 39,
        "key.doc.name" : "Tree",
        "key.doc.type" : "Other",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Tree<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\"><decl.generic_type_param.name>Branch<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\"><decl.generic_type_param.name>Leaf<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 5943,
        "key.name" : "Tree",
        "key.namelength" : 4,
        "key.nameoffset" : 3150,
        "key.offset" : 3140,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Instance Methods",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3165
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func replacingTree(at index: <Type usr=\"s:Si\">Int<\/Type>, with tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>) throws -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3327
              }
            ],
            "key.bodylength" : 237,
            "key.bodyoffset" : 3401,
            "key.doc.column" : 17,
            "key.doc.comment" : "Replace the subtree at the given `index` for the given `tree`.\n\n- throws: `TreeError` if `self` is a `leaf`.",
            "key.doc.declaration" : "public func replacingTree(at index: Int, with tree: Tree) throws -> Tree",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"124\" column=\"17\"><Name>replacingTree(at:with:)<\/Name><USR>s:14DataStructures4TreeO09replacingC02at4withACyxq_GSi_AGtKF<\/USR><Declaration>public func replacingTree(at index: Int, with tree: Tree) throws -&gt; Tree<\/Declaration><CommentParts><Abstract><Para>Replace the subtree at the given <codeVoice>index<\/codeVoice> for the given <codeVoice>tree<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>TreeError<\/codeVoice> if <codeVoice>self<\/codeVoice> is a <codeVoice>leaf<\/codeVoice>.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 124,
            "key.doc.name" : "replacingTree(at:with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 128,
            "key.docoffset" : 3195,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>replacingTree<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tree<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 305,
            "key.name" : "replacingTree(at:with:)",
            "key.namelength" : 45,
            "key.nameoffset" : 3339,
            "key.offset" : 3334,
            "key.parsed_declaration" : "public func replacingTree(at index: Int, with tree: Tree) throws -> Tree",
            "key.parsed_scope.end" : 131,
            "key.parsed_scope.start" : 124,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO09replacingC07through4withACyxq_GSaySiG_AGtKF\">replacingTree(through:with:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>) -> (Int, Tree<Branch, Leaf>) throws -> Tree<Branch, Leaf>",
            "key.typeusr" : "$S2at4with14DataStructures4TreeOyxq_GSi_AFtKcD",
            "key.usr" : "s:14DataStructures4TreeO09replacingC02at4withACyxq_GSi_AGtKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func replacingTree(through path: [<Type usr=\"s:Si\">Int<\/Type>], with tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>) throws -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3762
              }
            ],
            "key.bodylength" : 1265,
            "key.bodyoffset" : 3842,
            "key.doc.column" : 17,
            "key.doc.comment" : "Replace the subtree at the given `path`.\n\n- throws: `TreeError` if the given `path` is valid.",
            "key.doc.declaration" : "public func replacingTree(through path: [Int], with tree: Tree) throws -> Tree",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"136\" column=\"17\"><Name>replacingTree(through:with:)<\/Name><USR>s:14DataStructures4TreeO09replacingC07through4withACyxq_GSaySiG_AGtKF<\/USR><Declaration>public func replacingTree(through path: [Int], with tree: Tree) throws -&gt; Tree<\/Declaration><CommentParts><Abstract><Para>Replace the subtree at the given <codeVoice>path<\/codeVoice>.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>TreeError<\/codeVoice> if the given <codeVoice>path<\/codeVoice> is valid.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 136,
            "key.doc.name" : "replacingTree(through:with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 113,
            "key.docoffset" : 3645,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>replacingTree<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>through<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tree<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1339,
            "key.name" : "replacingTree(through:with:)",
            "key.namelength" : 51,
            "key.nameoffset" : 3774,
            "key.offset" : 3769,
            "key.parsed_declaration" : "public func replacingTree(through path: [Int], with tree: Tree) throws -> Tree",
            "key.parsed_scope.end" : 171,
            "key.parsed_scope.start" : 136,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO09replacingC02at4withACyxq_GSi_AGtKF\">replacingTree(at:with:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>func traverse(_ tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>, inserting newTree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>, path: [<Type usr=\"s:Si\">Int<\/Type>]) throws -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type><\/Declaration>",
                "key.bodylength" : 1103,
                "key.bodyoffset" : 3934,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>traverse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tree<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inserting<\/decl.var.parameter.argument_label> <decl.var.parameter.name>newTree<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>path<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.function.returntype><\/decl.function.free>",
                "key.kind" : "source.lang.swift.decl.function.free",
                "key.length" : 1186,
                "key.name" : "traverse(_:inserting:path:)",
                "key.namelength" : 60,
                "key.nameoffset" : 3857,
                "key.offset" : 3852,
                "key.parsed_declaration" : "func traverse(_ tree: Tree, inserting newTree: Tree, path: [Int]) throws -> Tree",
                "key.parsed_scope.end" : 168,
                "key.parsed_scope.start" : 138,
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>, inserting: Tree<Branch, Leaf>, path: [Int]) throws -> Tree<Branch, Leaf>",
                "key.typeusr" : "$S_9inserting4path14DataStructures4TreeOyxq_GAF_AFSaySiGtKcr0_luD",
                "key.usr" : "s:14DataStructures4TreeO09replacingC07through4withACyxq_GSaySiG_AGtKF8traverseL__9inserting4pathA2G_AgHtKr0_lF"
              }
            ],
            "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>) -> ([Int], Tree<Branch, Leaf>) throws -> Tree<Branch, Leaf>",
            "key.typeusr" : "$S7through4with14DataStructures4TreeOyxq_GSaySiG_AFtKcD",
            "key.usr" : "s:14DataStructures4TreeO09replacingC07through4withACyxq_GSaySiG_AGtKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func inserting(_ tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>, through path: [<Type usr=\"s:Si\">Int<\/Type>] = default, at index: <Type usr=\"s:Si\">Int<\/Type>) throws -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5335
              }
            ],
            "key.bodylength" : 1169,
            "key.bodyoffset" : 5428,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns: A new `Tree` with the given `tree` inserted at the given `index`, through\nthe given `path`.\n\n- throws: `TreeError` in the case of ill-formed index paths and indexes out-of-range.",
            "key.doc.declaration" : "public func inserting(_ tree: Tree, through path: [Int] = default, at index: Int) throws -> Tree",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"177\" column=\"17\"><Name>inserting(_:through:at:)<\/Name><USR>s:14DataStructures4TreeO9inserting_7through2atACyxq_GAG_SaySiGSitKF<\/USR><Declaration>public func inserting(_ tree: Tree, through path: [Int] = default, at index: Int) throws -&gt; Tree<\/Declaration><CommentParts><ResultDiscussion><Para>A new <codeVoice>Tree<\/codeVoice> with the given <codeVoice>tree<\/codeVoice> inserted at the given <codeVoice>index<\/codeVoice>, through the given <codeVoice>path<\/codeVoice>.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para><codeVoice>TreeError<\/codeVoice> in the case of ill-formed index paths and indexes out-of-range.<\/Para><\/ThrowsDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 177,
            "key.doc.name" : "inserting(_:through:at:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A new `Tree` with the given `tree` inserted at the given `index`, through the given `path`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 217,
            "key.docoffset" : 5114,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>inserting<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tree<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>through<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int<\/ref.struct>]<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1256,
            "key.name" : "inserting(_:through:at:)",
            "key.namelength" : 64,
            "key.nameoffset" : 5347,
            "key.offset" : 5342,
            "key.parsed_declaration" : "public func inserting(_ tree: Tree, through path: [Int] = [], at index: Int) throws -> Tree",
            "key.parsed_scope.end" : 211,
            "key.parsed_scope.start" : 177,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>func traverse(_ tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>, inserting newTree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>, through path: [<Type usr=\"s:Si\">Int<\/Type>], at index: <Type usr=\"s:Si\">Int<\/Type>) throws -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type><\/Declaration>",
                "key.bodylength" : 962,
                "key.bodyoffset" : 5551,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>traverse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tree<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>inserting<\/decl.var.parameter.argument_label> <decl.var.parameter.name>newTree<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>through<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.function.returntype><\/decl.function.free>",
                "key.kind" : "source.lang.swift.decl.function.free",
                "key.length" : 1076,
                "key.name" : "traverse(_:inserting:through:at:)",
                "key.namelength" : 83,
                "key.nameoffset" : 5443,
                "key.offset" : 5438,
                "key.parsed_declaration" : "func traverse(_ tree: Tree, inserting newTree: Tree, through path: [Int], at index: Int) throws -> Tree",
                "key.parsed_scope.end" : 208,
                "key.parsed_scope.start" : 179,
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>, inserting: Tree<Branch, Leaf>, through: [Int], at: Int) throws -> Tree<Branch, Leaf>",
                "key.typeusr" : "$S_9inserting7through2at14DataStructures4TreeOyxq_GAG_AGSaySiGSitKcr0_luD",
                "key.usr" : "s:14DataStructures4TreeO9inserting_7through2atACyxq_GAG_SaySiGSitKF8traverseL__Adef2G_AgHSitKr0_lF"
              }
            ],
            "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>) -> (Tree<Branch, Leaf>, [Int], Int) throws -> Tree<Branch, Leaf>",
            "key.typeusr" : "$S_7through2at14DataStructures4TreeOyxq_GAF_SaySiGSitKcD",
            "key.usr" : "s:14DataStructures4TreeO9inserting_7through2atACyxq_GAG_SaySiGSitKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func mapLeaves&lt;T&gt;(_ transform: @escaping (<Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO9mapLeavesyACyxqd__Gqd__q_clF1TL_qd__mfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>, <Type usr=\"s:14DataStructures4TreeO9mapLeavesyACyxqd__Gqd__q_clF1TL_qd__mfp\">T<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6678
              }
            ],
            "key.bodylength" : 224,
            "key.bodyoffset" : 6760,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: A `Tree` with leaves updated by the given `transform`.",
            "key.doc.declaration" : "public func mapLeaves<T>(_ transform: @escaping (Leaf) -> T) -> Tree<Branch, T>",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"214\" column=\"17\"><Name>mapLeaves(_:)<\/Name><USR>s:14DataStructures4TreeO9mapLeavesyACyxqd__Gqd__q_clF<\/USR><Declaration>public func mapLeaves&lt;T&gt;(_ transform: @escaping (Leaf) -&gt; T) -&gt; Tree&lt;Branch, T&gt;<\/Declaration><CommentParts><ResultDiscussion><Para>A <codeVoice>Tree<\/codeVoice> with leaves updated by the given <codeVoice>transform<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 214,
            "key.doc.name" : "mapLeaves(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Tree` with leaves updated by the given `transform`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 70,
            "key.docoffset" : 6604,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>mapLeaves<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO9mapLeavesyACyxqd__Gqd__q_clF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>transform<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures4TreeO9mapLeavesyACyxqd__Gqd__q_clF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO9mapLeavesyACyxqd__Gqd__q_clF1TL_qd__mfp\">T<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 300,
            "key.name" : "mapLeaves(_:)",
            "key.namelength" : 50,
            "key.nameoffset" : 6690,
            "key.offset" : 6685,
            "key.parsed_declaration" : "public func mapLeaves <T> (_ transform: @escaping (Leaf) -> T) -> Tree<Branch,T>",
            "key.parsed_scope.end" : 221,
            "key.parsed_scope.start" : 214,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 6701,
                "key.offset" : 6701,
                "key.parsed_declaration" : "public func mapLeaves <T> (_ transform: @escaping (Leaf) -> T) -> Tree<Branch,T>",
                "key.parsed_scope.end" : 214,
                "key.parsed_scope.start" : 214,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures4TreeO9mapLeavesyACyxqd__Gqd__q_clF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Branch, Leaf, T> (Tree<Branch, Leaf>) -> (@escaping (Leaf) -> T) -> Tree<Branch, T>",
            "key.typeusr" : "$Sy14DataStructures4TreeOyxqd__Gqd__q_ccluD",
            "key.usr" : "s:14DataStructures4TreeO9mapLeavesyACyxqd__Gqd__q_clF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func zipLeaves&lt;C&gt;(_ collection: <Type usr=\"s:14DataStructures4TreeO9zipLeavesyACyx7ElementQyd__Gqd__SmRd__lF1CL_qd__mfp\">C<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>, <Type usr=\"s:14DataStructures4TreeO9zipLeavesyACyx7ElementQyd__Gqd__SmRd__lF1CL_qd__mfp\">C<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>&gt; where C : <Type usr=\"s:Sm\">RangeReplaceableCollection<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7087
              }
            ],
            "key.bodylength" : 64,
            "key.bodyoffset" : 7199,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: A `Tree` with its leaves replaced by the elements in the given `collection`.",
            "key.doc.declaration" : "public func zipLeaves<C>(_ collection: C) -> Tree<Branch, C.Element> where C : RangeReplaceableCollection",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"224\" column=\"17\"><Name>zipLeaves(_:)<\/Name><USR>s:14DataStructures4TreeO9zipLeavesyACyx7ElementQyd__Gqd__SmRd__lF<\/USR><Declaration>public func zipLeaves&lt;C&gt;(_ collection: C) -&gt; Tree&lt;Branch, C.Element&gt; where C : RangeReplaceableCollection<\/Declaration><CommentParts><ResultDiscussion><Para>A <codeVoice>Tree<\/codeVoice> with its leaves replaced by the elements in the given <codeVoice>collection<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 224,
            "key.doc.name" : "zipLeaves(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Tree` with its leaves replaced by the elements in the given `collection`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 92,
            "key.docoffset" : 6991,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>zipLeaves<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO9zipLeavesyACyx7ElementQyd__Gqd__SmRd__lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>collection<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO9zipLeavesyACyx7ElementQyd__Gqd__SmRd__lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO9zipLeavesyACyx7ElementQyd__Gqd__SmRd__lF1CL_qd__mfp\">C<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>C : <ref.protocol usr=\"s:Sm\">RangeReplaceableCollection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 170,
            "key.name" : "zipLeaves(_:)",
            "key.namelength" : 59,
            "key.nameoffset" : 7099,
            "key.offset" : 7094,
            "key.parsed_declaration" : "public func zipLeaves <C: RangeReplaceableCollection> (_ collection: C)\n    -> Tree<Branch, C.Element>",
            "key.parsed_scope.end" : 228,
            "key.parsed_scope.start" : 224,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF\">zipLeaves(_:_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C : <Type usr=\"s:Sm\">RangeReplaceableCollection<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 26,
                    "key.offset" : 7113
                  }
                ],
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Sm\">RangeReplaceableCollection<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "RangeReplaceableCollection"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 29,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 7110,
                "key.offset" : 7110,
                "key.parsed_declaration" : "public func zipLeaves <C: RangeReplaceableCollection> (_ collection: C)",
                "key.parsed_scope.end" : 224,
                "key.parsed_scope.start" : 224,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures4TreeO9zipLeavesyACyx7ElementQyd__Gqd__SmRd__lF1CL_qd__mfp"
              }
            ],
            "key.typename" : "<Branch, Leaf, C where C : RangeReplaceableCollection> (Tree<Branch, Leaf>) -> (C) -> Tree<Branch, C.Element>",
            "key.typeusr" : "$Sy14DataStructures4TreeOyx7ElementQyd__Gqd__cSmRd__luD",
            "key.usr" : "s:14DataStructures4TreeO9zipLeavesyACyx7ElementQyd__Gqd__SmRd__lF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 87,
            "key.name" : "FIXME: Instead of copying `collection`, increment an `index`, pointing to `collection`.",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 7273
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func zipLeaves&lt;C, T&gt;(_ collection: <Type usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1CL_qd__mfp\">C<\/Type>, _ transform: @escaping (<Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>, <Type usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1CL_qd__mfp\">C<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1TL_qd_0_mfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>, <Type usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1TL_qd_0_mfp\">T<\/Type>&gt; where C : <Type usr=\"s:Sm\">RangeReplaceableCollection<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7365
              }
            ],
            "key.bodylength" : 897,
            "key.bodyoffset" : 7532,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>zipLeaves<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1TL_qd_0_mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>collection<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>transform<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1CL_qd__mfp\">C<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1TL_qd_0_mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1TL_qd_0_mfp\">T<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>C : <ref.protocol usr=\"s:Sm\">RangeReplaceableCollection<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1058,
            "key.name" : "zipLeaves(_:_:)",
            "key.namelength" : 131,
            "key.nameoffset" : 7377,
            "key.offset" : 7372,
            "key.parsed_declaration" : "public func zipLeaves <C: RangeReplaceableCollection, T> (\n    _ collection: C,\n    _ transform: @escaping (Leaf, C.Element) -> T\n) -> Tree<Branch,T>",
            "key.parsed_scope.end" : 268,
            "key.parsed_scope.start" : 231,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeO9zipLeavesyACyx7ElementQyd__Gqd__SmRd__lF\">zipLeaves(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C : <Type usr=\"s:Sm\">RangeReplaceableCollection<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 26,
                    "key.offset" : 7391
                  }
                ],
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:Sm\">RangeReplaceableCollection<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "RangeReplaceableCollection"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 29,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 7388,
                "key.offset" : 7388,
                "key.parsed_declaration" : "public func zipLeaves <C: RangeReplaceableCollection, T> (",
                "key.parsed_scope.end" : 231,
                "key.parsed_scope.start" : 231,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1CL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 7419,
                "key.offset" : 7419,
                "key.parsed_declaration" : "public func zipLeaves <C: RangeReplaceableCollection, T> (",
                "key.parsed_scope.end" : 231,
                "key.parsed_scope.start" : 231,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd_0_mD",
                "key.usr" : "s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1TL_qd_0_mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>var newValues: C<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>newValues<\/decl.name>: <decl.var.type>C<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 26,
                "key.name" : "newValues",
                "key.namelength" : 9,
                "key.nameoffset" : 7545,
                "key.offset" : 7541,
                "key.parsed_declaration" : "var newValues = collection",
                "key.parsed_scope.end" : 236,
                "key.parsed_scope.start" : 236,
                "key.typename" : "C",
                "key.typeusr" : "$Sqd__D",
                "key.usr" : "s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF9newValuesL_qd__vp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>func traverse(_ tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>, <Type usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1TL_qd_0_mfp\">T<\/Type>&gt;<\/Declaration>",
                "key.bodylength" : 768,
                "key.bodyoffset" : 7624,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>traverse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>tree<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF1TL_qd_0_mfp\">T<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.free>",
                "key.kind" : "source.lang.swift.decl.function.free",
                "key.length" : 816,
                "key.name" : "traverse(_:)",
                "key.namelength" : 22,
                "key.nameoffset" : 7582,
                "key.offset" : 7577,
                "key.parsed_declaration" : "func traverse(_ tree: Tree) -> Tree<Branch,T>",
                "key.parsed_scope.end" : 265,
                "key.parsed_scope.start" : 238,
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf, C, T where C : RangeReplaceableCollection> (Tree<Branch, Leaf>) -> Tree<Branch, T>",
                "key.typeusr" : "$Sy14DataStructures4TreeOyxqd_0_GACyxq_GcSmRd__r0_0_luD",
                "key.usr" : "s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF8traverseL_yAeCyxq_GSmRd__r0_0_lF"
              }
            ],
            "key.typename" : "<Branch, Leaf, C, T where C : RangeReplaceableCollection> (Tree<Branch, Leaf>) -> (C, @escaping (Leaf, C.Element) -> T) -> Tree<Branch, T>",
            "key.typeusr" : "$Sy14DataStructures4TreeOyxqd_0_Gqd___qd_0_q__7ElementQyd__tctcSmRd__r0_luD",
            "key.usr" : "s:14DataStructures4TreeO9zipLeavesyACyxqd_0_Gqd___qd_0_q__7ElementQyd__tctSmRd__r0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func map&lt;B, L&gt;(_ transform: <Type usr=\"s:14DataStructures4TreeO9TransformV\">Transform<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1BL_qd__mfp\">B<\/Type>, <Type usr=\"s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1LL_qd_0_mfp\">L<\/Type>&gt;) -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;<Type usr=\"s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1BL_qd__mfp\">B<\/Type>, <Type usr=\"s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1LL_qd_0_mfp\">L<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8528
              }
            ],
            "key.bodylength" : 245,
            "key.bodyoffset" : 8594,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: A `Tree` with its branches and leaves modified by the given `transform`.",
            "key.doc.declaration" : "public func map<B, L>(_ transform: Transform<B, L>) -> Tree<B, L>",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"271\" column=\"17\"><Name>map(_:)<\/Name><USR>s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF<\/USR><Declaration>public func map&lt;B, L&gt;(_ transform: Transform&lt;B, L&gt;) -&gt; Tree&lt;B, L&gt;<\/Declaration><CommentParts><ResultDiscussion><Para>A <codeVoice>Tree<\/codeVoice> with its branches and leaves modified by the given <codeVoice>transform<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 271,
            "key.doc.name" : "map(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Tree` with its branches and leaves modified by the given `transform`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 88,
            "key.docoffset" : 8436,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>map<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1BL_qd__mfp\"><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1LL_qd_0_mfp\"><decl.generic_type_param.name>L<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>transform<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:14DataStructures4TreeO9TransformV\">Transform<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1BL_qd__mfp\">B<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1LL_qd_0_mfp\">L<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1BL_qd__mfp\">B<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1LL_qd_0_mfp\">L<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 305,
            "key.name" : "map(_:)",
            "key.namelength" : 39,
            "key.nameoffset" : 8540,
            "key.offset" : 8535,
            "key.parsed_declaration" : "public func map <B,L> (_ transform: Transform<B,L>) -> Tree<B,L>",
            "key.parsed_scope.end" : 278,
            "key.parsed_scope.start" : 271,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures4TreeOAAq_RszrlE3mapyACyqd__qd__Gqd__xXElF\">map&lt;Result&gt;(_: (Leaf) -&gt; Result) -&gt; Tree&lt;Result, Result&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>B<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "B",
                "key.namelength" : 1,
                "key.nameoffset" : 8545,
                "key.offset" : 8545,
                "key.parsed_declaration" : "public func map <B,L> (_ transform: Transform<B,L>) -> Tree<B,L>",
                "key.parsed_scope.end" : 271,
                "key.parsed_scope.start" : 271,
                "key.typename" : "B.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1BL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>L<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>L<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "L",
                "key.namelength" : 1,
                "key.nameoffset" : 8547,
                "key.offset" : 8547,
                "key.parsed_declaration" : "public func map <B,L> (_ transform: Transform<B,L>) -> Tree<B,L>",
                "key.parsed_scope.end" : 271,
                "key.parsed_scope.start" : 271,
                "key.typename" : "L.Type",
                "key.typeusr" : "$Sqd_0_mD",
                "key.usr" : "s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF1LL_qd_0_mfp"
              }
            ],
            "key.typename" : "<Branch, Leaf, B, L> (Tree<Branch, Leaf>) -> (Tree<Branch, Leaf>.Transform<B, L>) -> Tree<B, L>",
            "key.typeusr" : "$Sy14DataStructures4TreeOyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gcr0_luD",
            "key.usr" : "s:14DataStructures4TreeO3mapyACyqd__qd_0_GAC9TransformVyxq__qd__qd_0_Gr0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func insert&lt;A&gt;(_ element: <Type usr=\"s:14DataStructures4TreeO6insert33_07F8882EF9F222230B24D5B75429F5C9LL_4into2atSayqd__Gqd___AHSitKlF1AL_qd__mfp\">A<\/Type>, into elements: [<Type usr=\"s:14DataStructures4TreeO6insert33_07F8882EF9F222230B24D5B75429F5C9LL_4into2atSayqd__Gqd___AHSitKlF1AL_qd__mfp\">A<\/Type>], at index: <Type usr=\"s:Si\">Int<\/Type>) throws -&gt; [<Type usr=\"s:14DataStructures4TreeO6insert33_07F8882EF9F222230B24D5B75429F5C9LL_4into2atSayqd__Gqd___AHSitKlF1AL_qd__mfp\">A<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 8846
              }
            ],
            "key.bodylength" : 145,
            "key.bodyoffset" : 8935,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>insert<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO6insert33_07F8882EF9F222230B24D5B75429F5C9LL_4into2atSayqd__Gqd___AHSitKlF1AL_qd__mfp\"><decl.generic_type_param.name>A<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO6insert33_07F8882EF9F222230B24D5B75429F5C9LL_4into2atSayqd__Gqd___AHSitKlF1AL_qd__mfp\">A<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>into<\/decl.var.parameter.argument_label> <decl.var.parameter.name>elements<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:14DataStructures4TreeO6insert33_07F8882EF9F222230B24D5B75429F5C9LL_4into2atSayqd__Gqd___AHSitKlF1AL_qd__mfp\">A<\/ref.generic_type_param>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:14DataStructures4TreeO6insert33_07F8882EF9F222230B24D5B75429F5C9LL_4into2atSayqd__Gqd___AHSitKlF1AL_qd__mfp\">A<\/ref.generic_type_param>]<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 227,
            "key.name" : "insert(_:into:at:)",
            "key.namelength" : 60,
            "key.nameoffset" : 8859,
            "key.offset" : 8854,
            "key.parsed_declaration" : "private func insert <A> (_ element: A, into elements: [A], at index: Int) throws -> [A]",
            "key.parsed_scope.end" : 283,
            "key.parsed_scope.start" : 280,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>A<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>A<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "A",
                "key.namelength" : 1,
                "key.nameoffset" : 8867,
                "key.offset" : 8867,
                "key.parsed_declaration" : "private func insert <A> (_ element: A, into elements: [A], at index: Int) throws -> [A]",
                "key.parsed_scope.end" : 280,
                "key.parsed_scope.start" : 280,
                "key.typename" : "A.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures4TreeO6insert33_07F8882EF9F222230B24D5B75429F5C9LL_4into2atSayqd__Gqd___AHSitKlF1AL_qd__mfp"
              }
            ],
            "key.typename" : "<Branch, Leaf, A> (Tree<Branch, Leaf>) -> (A, [A], Int) throws -> [A]",
            "key.typeusr" : "$S_4into2atSayqd__Gqd___ACSitKcluD",
            "key.usr" : "s:14DataStructures4TreeO6insert33_07F8882EF9F222230B24D5B75429F5C9LL_4into2atSayqd__Gqd___AHSitKlF"
          }
        ],
        "key.typename" : "Tree<Branch, Leaf>.Type",
        "key.typeusr" : "$S14DataStructures4TreeOyxq_GmD",
        "key.usr" : "s:14DataStructures4TreeO"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration>",
        "key.bodylength" : 587,
        "key.bodyoffset" : 9101,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum Tree<Branch, Leaf>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "A `Tree` can be used in pretty simple cases:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Or more nested cases:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"39\" column=\"13\"><Name>Tree<\/Name><USR>s:14DataStructures4TreeO<\/USR><Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration><CommentParts><Abstract><Para>A value-semantic, immutable Tree structure with two generic types for the branches and leaves.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>A <codeVoice>Tree<\/codeVoice> can be used in pretty simple cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let justALeaf: Tree<(),Double> = .leaf(3.14159265359)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Or more nested cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let happyTree = Tree.branch(\"alpha\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(1),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"beta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(2),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(3),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(4)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(5),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"gamma\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(6),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .branch(\"delta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(7),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(8)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[])]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 39,
        "key.doc.name" : "Tree",
        "key.doc.type" : "Other",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Tree<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\"><decl.generic_type_param.name>Branch<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\"><decl.generic_type_param.name>Leaf<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 604,
        "key.name" : "Tree",
        "key.namelength" : 4,
        "key.nameoffset" : 9095,
        "key.offset" : 9085,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: - Errors",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 9110
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public enum Error : Swift.<Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9194
              }
            ],
            "key.bodylength" : 111,
            "key.bodyoffset" : 9226,
            "key.doc.column" : 17,
            "key.doc.comment" : "Things that can go wrong when doing things to a `Tree`.",
            "key.doc.declaration" : "public enum Error : Swift.Error",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"291\" column=\"17\"><Name>Error<\/Name><USR>s:14DataStructures4TreeO5ErrorO<\/USR><Declaration>public enum Error : Swift.Error<\/Declaration><CommentParts><Abstract><Para>Things that can go wrong when doing things to a <codeVoice>Tree<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 291,
            "key.doc.name" : "Error",
            "key.doc.type" : "Other",
            "key.doclength" : 60,
            "key.docoffset" : 9130,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 11,
                "key.offset" : 9213
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Error<\/decl.name> : Swift.<ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Swift.Error"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 137,
            "key.name" : "Error",
            "key.namelength" : 5,
            "key.nameoffset" : 9206,
            "key.offset" : 9201,
            "key.parsed_declaration" : "public enum Error: Swift.Error",
            "key.parsed_scope.end" : 295,
            "key.parsed_scope.start" : 291,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 21,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 9235,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case indexOutOfBounds<\/Declaration>",
                    "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>indexOutOfBounds<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 16,
                    "key.name" : "indexOutOfBounds",
                    "key.namelength" : 16,
                    "key.nameoffset" : 9240,
                    "key.offset" : 9240,
                    "key.parsed_declaration" : "case indexOutOfBounds",
                    "key.parsed_scope.end" : 292,
                    "key.parsed_scope.start" : 292,
                    "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Error.Type) -> Tree<Branch, Leaf>.Error",
                    "key.typeusr" : "$Sy14DataStructures4TreeO5ErrorOyxq__GAFmcr0_luD",
                    "key.usr" : "s:14DataStructures4TreeO5ErrorO16indexOutOfBoundsyAEyxq__GAGmr0_lF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 35,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 9265,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case branchOperationPerformedOnLeaf<\/Declaration>",
                    "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>branchOperationPerformedOnLeaf<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 30,
                    "key.name" : "branchOperationPerformedOnLeaf",
                    "key.namelength" : 30,
                    "key.nameoffset" : 9270,
                    "key.offset" : 9270,
                    "key.parsed_declaration" : "case branchOperationPerformedOnLeaf",
                    "key.parsed_scope.end" : 293,
                    "key.parsed_scope.start" : 293,
                    "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Error.Type) -> Tree<Branch, Leaf>.Error",
                    "key.typeusr" : "$Sy14DataStructures4TreeO5ErrorOyxq__GAFmcr0_luD",
                    "key.usr" : "s:14DataStructures4TreeO5ErrorO30branchOperationPerformedOnLeafyAEyxq__GAGmr0_lF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 23,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 9309,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case illFormedIndexPath<\/Declaration>",
                    "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>illFormedIndexPath<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 18,
                    "key.name" : "illFormedIndexPath",
                    "key.namelength" : 18,
                    "key.nameoffset" : 9314,
                    "key.offset" : 9314,
                    "key.parsed_declaration" : "case illFormedIndexPath",
                    "key.parsed_scope.end" : 294,
                    "key.parsed_scope.start" : 294,
                    "key.typename" : "<Branch, Leaf> (Tree<Branch, Leaf>.Error.Type) -> Tree<Branch, Leaf>.Error",
                    "key.typeusr" : "$Sy14DataStructures4TreeO5ErrorOyxq__GAFmcr0_luD",
                    "key.usr" : "s:14DataStructures4TreeO5ErrorO18illFormedIndexPathyAEyxq__GAGmr0_lF"
                  }
                ]
              }
            ],
            "key.typename" : "Tree<Branch, Leaf>.Error.Type",
            "key.typeusr" : "$S14DataStructures4TreeO5ErrorOyxq__GmD",
            "key.usr" : "s:14DataStructures4TreeO5ErrorO"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 25,
            "key.name" : "MARK: - Assosciated Types",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 9347
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct Transform&lt;B, L&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9428
              }
            ],
            "key.bodylength" : 227,
            "key.bodyoffset" : 9459,
            "key.doc.column" : 19,
            "key.doc.comment" : "Transforms for `branch` and `leaf` cases.",
            "key.doc.declaration" : "public struct Transform<B, L>",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"300\" column=\"19\"><Name>Transform<\/Name><USR>s:14DataStructures4TreeO9TransformV<\/USR><Declaration>public struct Transform&lt;B, L&gt;<\/Declaration><CommentParts><Abstract><Para>Transforms for <codeVoice>branch<\/codeVoice> and <codeVoice>leaf<\/codeVoice> cases.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 300,
            "key.doc.name" : "Transform",
            "key.doc.type" : "Class",
            "key.doclength" : 46,
            "key.docoffset" : 9378,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Transform<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO9TransformV1Bqd__mfp\"><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures4TreeO9TransformV1Lqd_0_mfp\"><decl.generic_type_param.name>L<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 252,
            "key.name" : "Transform",
            "key.namelength" : 9,
            "key.nameoffset" : 9442,
            "key.offset" : 9435,
            "key.parsed_declaration" : "public struct Transform <B,L>",
            "key.parsed_scope.end" : 309,
            "key.parsed_scope.start" : 300,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>B<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "B",
                "key.namelength" : 1,
                "key.nameoffset" : 9453,
                "key.offset" : 9453,
                "key.parsed_declaration" : "public struct Transform <B,L>",
                "key.parsed_scope.end" : 300,
                "key.parsed_scope.start" : 300,
                "key.typename" : "B.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures4TreeO9TransformV1Bqd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>L<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>L<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "L",
                "key.namelength" : 1,
                "key.nameoffset" : 9455,
                "key.offset" : 9455,
                "key.parsed_declaration" : "public struct Transform <B,L>",
                "key.parsed_scope.end" : 300,
                "key.parsed_scope.start" : 300,
                "key.typename" : "L.Type",
                "key.typeusr" : "$Sqd_0_mD",
                "key.usr" : "s:14DataStructures4TreeO9TransformV1Lqd_0_mfp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let branch: (<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO9TransformV1Bqd__mfp\">B<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>branch<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures4TreeO9TransformV1Bqd__mfp\">B<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 25,
                "key.name" : "branch",
                "key.namelength" : 6,
                "key.nameoffset" : 9473,
                "key.offset" : 9469,
                "key.parsed_declaration" : "let branch: (Branch) -> B",
                "key.parsed_scope.end" : 302,
                "key.parsed_scope.start" : 302,
                "key.typename" : "(Branch) -> B",
                "key.typeusr" : "$Syqd__xcD",
                "key.usr" : "s:14DataStructures4TreeO9TransformV6branchyqd__xcvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let leaf: (<Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO9TransformV1Lqd_0_mfp\">L<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>leaf<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures4TreeO9TransformV1Lqd_0_mfp\">L<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 21,
                "key.name" : "leaf",
                "key.namelength" : 4,
                "key.nameoffset" : 9507,
                "key.offset" : 9503,
                "key.parsed_declaration" : "let leaf: (Leaf) -> L",
                "key.parsed_scope.end" : 303,
                "key.parsed_scope.start" : 303,
                "key.typename" : "(Leaf) -> L",
                "key.typeusr" : "$Syqd_0_q_cD",
                "key.usr" : "s:14DataStructures4TreeO9TransformV4leafyqd_0_q_cvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(branch: @escaping (<Type usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO9TransformV1Bqd__mfp\">B<\/Type>, leaf: @escaping (<Type usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO9TransformV1Lqd_0_mfp\">L<\/Type>)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 9534
                  }
                ],
                "key.bodylength" : 71,
                "key.bodyoffset" : 9609,
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>branch<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\">Branch<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures4TreeO9TransformV1Bqd__mfp\">B<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>leaf<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\">Leaf<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures4TreeO9TransformV1Lqd_0_mfp\">L<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 140,
                "key.name" : "init(branch:leaf:)",
                "key.namelength" : 66,
                "key.nameoffset" : 9541,
                "key.offset" : 9541,
                "key.parsed_declaration" : "public init(branch: @escaping (Branch) -> B, leaf: @escaping (Leaf) -> L)",
                "key.parsed_scope.end" : 308,
                "key.parsed_scope.start" : 305,
                "key.substructure" : [

                ],
                "key.typename" : "<Branch, Leaf, B, L> (Tree<Branch, Leaf>.Transform<B, L>.Type) -> (@escaping (Branch) -> B, @escaping (Leaf) -> L) -> Tree<Branch, Leaf>.Transform<B, L>",
                "key.typeusr" : "$S6branch4leaf14DataStructures4TreeO9TransformVyxq__qd__qd_0_Gqd__xc_qd_0_q_ctcD",
                "key.usr" : "s:14DataStructures4TreeO9TransformV6branch4leafAEyxq__qd__qd_0_Gqd__xc_qd_0_q_ctcfc"
              }
            ],
            "key.typename" : "Tree<Branch, Leaf>.Transform<B, L>.Type",
            "key.typeusr" : "$S14DataStructures4TreeO9TransformVyxq__qd__qd_0_GmD",
            "key.usr" : "s:14DataStructures4TreeO9TransformV"
          }
        ],
        "key.typename" : "Tree<Branch, Leaf>.Type",
        "key.typeusr" : "$S14DataStructures4TreeOyxq_GmD",
        "key.usr" : "s:14DataStructures4TreeO"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration>",
        "key.bodylength" : 803,
        "key.bodyoffset" : 9732,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum Tree<Branch, Leaf>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "A `Tree` can be used in pretty simple cases:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Or more nested cases:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"39\" column=\"13\"><Name>Tree<\/Name><USR>s:14DataStructures4TreeO<\/USR><Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration><CommentParts><Abstract><Para>A value-semantic, immutable Tree structure with two generic types for the branches and leaves.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>A <codeVoice>Tree<\/codeVoice> can be used in pretty simple cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let justALeaf: Tree<(),Double> = .leaf(3.14159265359)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Or more nested cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let happyTree = Tree.branch(\"alpha\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(1),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"beta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(2),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(3),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(4)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(5),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"gamma\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(6),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .branch(\"delta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(7),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(8)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[])]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 39,
        "key.doc.name" : "Tree",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 9707
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Tree<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\"><decl.generic_type_param.name>Branch<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\"><decl.generic_type_param.name>Leaf<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "CustomStringConvertible"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 845,
        "key.name" : "Tree",
        "key.namelength" : 4,
        "key.nameoffset" : 9701,
        "key.offset" : 9691,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 31,
            "key.name" : "MARK: - CustomStringConvertible",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 9741
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9807
              }
            ],
            "key.bodylength" : 694,
            "key.bodyoffset" : 9839,
            "key.doc.column" : 16,
            "key.doc.comment" : "Printed description.",
            "key.doc.declaration" : "public var description: String { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"317\" column=\"16\"><Name>description<\/Name><USR>s:14DataStructures4TreeO11descriptionSSvp<\/USR><Declaration>public var description: String { get }<\/Declaration><CommentParts><Abstract><Para>Printed description.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 317,
            "key.doc.name" : "description",
            "key.doc.type" : "Other",
            "key.doclength" : 25,
            "key.docoffset" : 9778,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 720,
            "key.name" : "description",
            "key.namelength" : 11,
            "key.nameoffset" : 9818,
            "key.offset" : 9814,
            "key.overrides" : [
              {
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "public var description: String",
            "key.parsed_scope.end" : 338,
            "key.parsed_scope.start" : 317,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:14DataStructures4TreeO11descriptionSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func indents(_ amount: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.bodylength" : 85,
            "key.bodyoffset" : 9888,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>indents<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>amount<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 125,
            "key.name" : "indents(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 9854,
            "key.offset" : 9849,
            "key.parsed_declaration" : "func indents(_ amount: Int) -> String",
            "key.parsed_scope.end" : 321,
            "key.parsed_scope.start" : 319,
            "key.substructure" : [

            ],
            "key.typename" : "<Branch, Leaf> (Int) -> String",
            "key.typeusr" : "$SySSSicr0_luD",
            "key.usr" : "s:14DataStructures4TreeO11descriptionSSvg7indentsL_ySSSir0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func traverse(tree: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>, indentation: <Type usr=\"s:Si\">Int<\/Type> = default) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.bodylength" : 447,
            "key.bodyoffset" : 10043,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>traverse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>tree<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>indentation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.free>",
            "key.kind" : "source.lang.swift.decl.function.free",
            "key.length" : 507,
            "key.name" : "traverse(tree:indentation:)",
            "key.namelength" : 42,
            "key.nameoffset" : 9989,
            "key.offset" : 9984,
            "key.parsed_declaration" : "func traverse(tree: Tree, indentation: Int = 0) -> String",
            "key.parsed_scope.end" : 335,
            "key.parsed_scope.start" : 323,
            "key.substructure" : [

            ],
            "key.typename" : "<Branch, Leaf> (tree: Tree<Branch, Leaf>, indentation: Int) -> String",
            "key.typeusr" : "$S4tree11indentationSS14DataStructures4TreeOyxq_G_Sitcr0_luD",
            "key.usr" : "s:14DataStructures4TreeO11descriptionSSvg8traverseL_4tree11indentationSSACyxq_G_Sitr0_lF"
          }
        ],
        "key.typename" : "Tree<Branch, Leaf>.Type",
        "key.typeusr" : "$S14DataStructures4TreeOyxq_GmD",
        "key.usr" : "s:14DataStructures4TreeO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func zip&lt;T, U, V&gt;(_ a: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;<Type usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1TL_xmfp\">T<\/Type>, <Type usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1TL_xmfp\">T<\/Type>&gt;, _ b: <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;<Type usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1UL_q_mfp\">U<\/Type>, <Type usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1UL_q_mfp\">U<\/Type>&gt;, _ f: (<Type usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1TL_xmfp\">T<\/Type>, <Type usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1UL_q_mfp\">U<\/Type>) -&gt; <Type usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1VL_q0_mfp\">V<\/Type>) -&gt; <Type usr=\"s:14DataStructures4TreeO\">Tree<\/Type>&lt;<Type usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1VL_q0_mfp\">V<\/Type>, <Type usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1VL_q0_mfp\">V<\/Type>&gt;<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 10729
          }
        ],
        "key.bodylength" : 292,
        "key.bodyoffset" : 10818,
        "key.doc.column" : 13,
        "key.doc.comment" : "- Returns: A new `Tree` resulting from applying the given function `f` to each\ncorresponding node in the given trees `a` and `b`.\n\n- Invariant: `a` and `b` are the same shape.",
        "key.doc.declaration" : "public func zip<T, U, V>(_ a: Tree<T, T>, _ b: Tree<U, U>, _ f: (T, U) -> V) -> Tree<V, V>",
        "key.doc.discussion" : [
          {
            "Invariant" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"345\" column=\"13\"><Name>zip(_:_:_:)<\/Name><USR>s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF<\/USR><Declaration>public func zip&lt;T, U, V&gt;(_ a: Tree&lt;T, T&gt;, _ b: Tree&lt;U, U&gt;, _ f: (T, U) -&gt; V) -&gt; Tree&lt;V, V&gt;<\/Declaration><CommentParts><ResultDiscussion><Para>A new <codeVoice>Tree<\/codeVoice> resulting from applying the given function <codeVoice>f<\/codeVoice> to each corresponding node in the given trees <codeVoice>a<\/codeVoice> and <codeVoice>b<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Invariant><Para><codeVoice>a<\/codeVoice> and <codeVoice>b<\/codeVoice> are the same shape.<\/Para><\/Invariant><\/Discussion><\/CommentParts><\/Function>",
        "key.doc.line" : 345,
        "key.doc.name" : "zip(_:_:_:)",
        "key.doc.result_discussion" : [
          {
            "Para" : "A new `Tree` resulting from applying the given function `f` to each corresponding node in the given trees `a` and `b`."
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 191,
        "key.docoffset" : 10538,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>zip<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1UL_q_mfp\"><decl.generic_type_param.name>U<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1VL_q0_mfp\"><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>a<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1TL_xmfp\">T<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1TL_xmfp\">T<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>b<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1UL_q_mfp\">U<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1UL_q_mfp\">U<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>f<\/decl.var.parameter.name>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1UL_q_mfp\">U<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1VL_q0_mfp\">V<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:14DataStructures4TreeO\">Tree<\/ref.enum>&lt;<ref.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1VL_q0_mfp\">V<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1VL_q0_mfp\">V<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 375,
        "key.name" : "zip(_:_:_:)",
        "key.namelength" : 62,
        "key.nameoffset" : 10741,
        "key.offset" : 10736,
        "key.parsed_declaration" : "public func zip <T,U,V> (_ a: Tree<T,T>, _ b: Tree<U,U>, _ f: (T, U) -> V) -> Tree<V,V>",
        "key.parsed_scope.end" : 354,
        "key.parsed_scope.start" : 345,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF\">zip&lt;Sequence1, Sequence2, Sequence3&gt;(_: Sequence1, _: Sequence2, _: Sequence3) -&gt; Zip3Sequence&lt;Sequence1, Sequence2, Sequence3&gt; where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF\">zip(_:_:fill1:fill2:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF\">zip(_:_:fill:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF\">zip(_:_:_:fill1:fill2:fill3:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF\">zip(_:_:_:fill:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s3zipys12Zip2SequenceVyxq_Gx_q_tSTRzSTR_r0_lF\">zip(_:_:)<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 10746,
            "key.offset" : 10746,
            "key.parsed_declaration" : "public func zip <T,U,V> (_ a: Tree<T,T>, _ b: Tree<U,U>, _ f: (T, U) -> V) -> Tree<V,V>",
            "key.parsed_scope.end" : 345,
            "key.parsed_scope.start" : 345,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1TL_xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>U<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>U<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.name" : "U",
            "key.namelength" : 1,
            "key.nameoffset" : 10748,
            "key.offset" : 10748,
            "key.parsed_declaration" : "public func zip <T,U,V> (_ a: Tree<T,T>, _ b: Tree<U,U>, _ f: (T, U) -> V) -> Tree<V,V>",
            "key.parsed_scope.end" : 345,
            "key.parsed_scope.start" : 345,
            "key.typename" : "U.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1UL_q_mfp"
          },
          {
            "key.annotated_decl" : "<Declaration>V<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>V<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.name" : "V",
            "key.namelength" : 1,
            "key.nameoffset" : 10750,
            "key.offset" : 10750,
            "key.parsed_declaration" : "public func zip <T,U,V> (_ a: Tree<T,T>, _ b: Tree<U,U>, _ f: (T, U) -> V) -> Tree<V,V>",
            "key.parsed_scope.end" : 345,
            "key.parsed_scope.start" : 345,
            "key.typename" : "V.Type",
            "key.typeusr" : "$Sq0_mD",
            "key.usr" : "s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF1VL_q0_mfp"
          }
        ],
        "key.typename" : "<T, U, V> (Tree<T, T>, Tree<U, U>, (T, U) -> V) -> Tree<V, V>",
        "key.typeusr" : "$Sy14DataStructures4TreeOyq0_q0_GACyxxG_ACyq_q_Gq0_x_q_tXEtcr1_luD",
        "key.usr" : "s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF"
      },
      {
        "key.annotated_decl" : "<Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 11181,
        "key.doc.column" : 13,
        "key.doc.declaration" : "public enum Tree<Branch, Leaf>",
        "key.doc.discussion" : [
          {
            "Para" : ""
          },
          {
            "Para" : "A `Tree` can be used in pretty simple cases:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Or more nested cases:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift\" line=\"39\" column=\"13\"><Name>Tree<\/Name><USR>s:14DataStructures4TreeO<\/USR><Declaration>public enum Tree&lt;Branch, Leaf&gt;<\/Declaration><CommentParts><Abstract><Para>A value-semantic, immutable Tree structure with two generic types for the branches and leaves.<\/Para><\/Abstract><Discussion><Para><bold>Example Usage<\/bold><\/Para><Para>A <codeVoice>Tree<\/codeVoice> can be used in pretty simple cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let justALeaf: Tree<(),Double> = .leaf(3.14159265359)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Or more nested cases:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let happyTree = Tree.branch(\"alpha\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(1),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"beta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(2),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(3),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(4)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .leaf(5),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    .branch(\"gamma\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .leaf(6),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .branch(\"delta\", []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(7),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .leaf(8)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[])]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 39,
        "key.doc.name" : "Tree",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 11129
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Tree.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Tree<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures4TreeO6Branchxmfp\"><decl.generic_type_param.name>Branch<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures4TreeO4Leafq_mfp\"><decl.generic_type_param.name>Leaf<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;<\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Equatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 70,
        "key.name" : "Tree",
        "key.namelength" : 4,
        "key.nameoffset" : 11123,
        "key.offset" : 11113,
        "key.typename" : "Tree<Branch, Leaf>.Type",
        "key.typeusr" : "$S14DataStructures4TreeOyxq_GmD",
        "key.usr" : "s:14DataStructures4TreeO"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1140,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol CollectionWrapping : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 327
          }
        ],
        "key.bodylength" : 227,
        "key.bodyoffset" : 375,
        "key.doc.column" : 17,
        "key.doc.comment" : "`CollectionWrapping` is a type-erasing protocol that allows a `Collection`-conforming\nstructure to wrap any underlying `Collection` implementation.\n\nAs a result, all of the `Collection` boilerplate is done for free.",
        "key.doc.declaration" : "public protocol CollectionWrapping : Collection",
        "key.doc.discussion" : [
          {
            "Para" : "As a result, all of the `Collection` boilerplate is done for free."
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift\" line=\"13\" column=\"17\"><Name>CollectionWrapping<\/Name><USR>s:14DataStructures18CollectionWrappingP<\/USR><Declaration>public protocol CollectionWrapping : Collection<\/Declaration><CommentParts><Abstract><Para><codeVoice>CollectionWrapping<\/codeVoice> is a type-erasing protocol that allows a <codeVoice>Collection<\/codeVoice>-conforming structure to wrap any underlying <codeVoice>Collection<\/codeVoice> implementation.<\/Para><\/Abstract><Discussion><Para>As a result, all of the <codeVoice>Collection<\/codeVoice> boilerplate is done for free.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 13,
        "key.doc.name" : "CollectionWrapping",
        "key.doc.type" : "Class",
        "key.doclength" : 231,
        "key.docoffset" : 96,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 363
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>CollectionWrapping<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Collection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 269,
        "key.name" : "CollectionWrapping",
        "key.namelength" : 18,
        "key.nameoffset" : 343,
        "key.offset" : 334,
        "key.parsed_declaration" : "public protocol CollectionWrapping: Collection",
        "key.parsed_scope.end" : 24,
        "key.parsed_scope.start" : 13,
        "key.runtime_name" : "_TtP18CollectionWrapping18CollectionWrapping_",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Associated Types",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 384
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype Base : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.comment" : "Wrapped `Collection`-conforming type.",
            "key.doc.declaration" : "associatedtype Base : Collection",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift\" line=\"18\" column=\"20\"><Name>Base<\/Name><USR>s:14DataStructures18CollectionWrappingP4BaseQa<\/USR><Declaration>associatedtype Base : Collection<\/Declaration><CommentParts><Abstract><Para>Wrapped <codeVoice>Collection<\/codeVoice>-conforming type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 18,
            "key.doc.name" : "Base",
            "key.doc.type" : "Other",
            "key.doclength" : 42,
            "key.docoffset" : 414,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>Base<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 31,
            "key.name" : "Base",
            "key.namelength" : 4,
            "key.nameoffset" : 475,
            "key.offset" : 460,
            "key.parsed_declaration" : "associatedtype Base: Collection",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.typename" : "Self.Base.Type",
            "key.typeusr" : "$S4Base14DataStructures18CollectionWrappingPQzmD",
            "key.usr" : "s:14DataStructures18CollectionWrappingP4BaseQa"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 500
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var base: <Type usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 595,
            "key.doc.column" : 9,
            "key.doc.comment" : "Wrapped `Collection`-conforming type.",
            "key.doc.declaration" : "var base: Base { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift\" line=\"23\" column=\"9\"><Name>base<\/Name><USR>s:14DataStructures18CollectionWrappingP4base4BaseQzvp<\/USR><Declaration>var base: Base { get }<\/Declaration><CommentParts><Abstract><Para>Wrapped <codeVoice>Collection<\/codeVoice>-conforming type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 23,
            "key.doc.name" : "base",
            "key.doc.type" : "Other",
            "key.doclength" : 42,
            "key.docoffset" : 533,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>base<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "base",
            "key.namelength" : 4,
            "key.nameoffset" : 583,
            "key.offset" : 579,
            "key.parsed_declaration" : "var base: Base",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.typename" : "Self.Base",
            "key.typeusr" : "$S4Base14DataStructures18CollectionWrappingPQzD",
            "key.usr" : "s:14DataStructures18CollectionWrappingP4base4BaseQzvp"
          }
        ],
        "key.typename" : "CollectionWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures18CollectionWrapping_pmD",
        "key.usr" : "s:14DataStructures18CollectionWrappingP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol CollectionWrapping : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.bodylength" : 503,
        "key.bodyoffset" : 635,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol CollectionWrapping : Collection",
        "key.doc.discussion" : [
          {
            "Para" : "As a result, all of the `Collection` boilerplate is done for free."
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift\" line=\"13\" column=\"17\"><Name>CollectionWrapping<\/Name><USR>s:14DataStructures18CollectionWrappingP<\/USR><Declaration>public protocol CollectionWrapping : Collection<\/Declaration><CommentParts><Abstract><Para><codeVoice>CollectionWrapping<\/codeVoice> is a type-erasing protocol that allows a <codeVoice>Collection<\/codeVoice>-conforming structure to wrap any underlying <codeVoice>Collection<\/codeVoice> implementation.<\/Para><\/Abstract><Discussion><Para>As a result, all of the <codeVoice>Collection<\/codeVoice> boilerplate is done for free.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 13,
        "key.doc.name" : "CollectionWrapping",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>CollectionWrapping<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 534,
        "key.name" : "CollectionWrapping",
        "key.namelength" : 18,
        "key.nameoffset" : 615,
        "key.offset" : 605,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - `Collection`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 644
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var startIndex: <Type usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sl5IndexQa\">Index<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 691
              }
            ],
            "key.bodylength" : 36,
            "key.bodyoffset" : 726,
            "key.doc.column" : 16,
            "key.doc.comment" : "Start index.",
            "key.doc.declaration" : "public var startIndex: Base.Index { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift\" line=\"31\" column=\"16\"><Name>startIndex<\/Name><USR>s:14DataStructures18CollectionWrappingPAAE10startIndex4Base_0F0QZvp<\/USR><Declaration>public var startIndex: Base.Index { get }<\/Declaration><CommentParts><Abstract><Para>Start index.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 31,
            "key.doc.name" : "startIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 17,
            "key.docoffset" : 670,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>startIndex<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 65,
            "key.name" : "startIndex",
            "key.namelength" : 10,
            "key.nameoffset" : 702,
            "key.offset" : 698,
            "key.parsed_declaration" : "public var startIndex: Base.Index",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 31,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl10startIndex0B0Qzvp\">startIndex<\/RelatedName>"
              }
            ],
            "key.typename" : "Self.Base.Index",
            "key.typeusr" : "$S4Base14DataStructures18CollectionWrappingP_5IndexSlQZD",
            "key.usr" : "s:14DataStructures18CollectionWrappingPAAE10startIndex4Base_0F0QZvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var endIndex: <Type usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sl5IndexQa\">Index<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 788
              }
            ],
            "key.bodylength" : 34,
            "key.bodyoffset" : 821,
            "key.doc.column" : 16,
            "key.doc.comment" : "End index.",
            "key.doc.declaration" : "public var endIndex: Base.Index { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift\" line=\"36\" column=\"16\"><Name>endIndex<\/Name><USR>s:14DataStructures18CollectionWrappingPAAE8endIndex4Base_0F0QZvp<\/USR><Declaration>public var endIndex: Base.Index { get }<\/Declaration><CommentParts><Abstract><Para>End index.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 36,
            "key.doc.name" : "endIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 15,
            "key.docoffset" : 769,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>endIndex<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 61,
            "key.name" : "endIndex",
            "key.namelength" : 8,
            "key.nameoffset" : 799,
            "key.offset" : 795,
            "key.parsed_declaration" : "public var endIndex: Base.Index",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 36,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl8endIndex0B0Qzvp\">endIndex<\/RelatedName>"
              }
            ],
            "key.typename" : "Self.Base.Index",
            "key.typeusr" : "$S4Base14DataStructures18CollectionWrappingP_5IndexSlQZD",
            "key.usr" : "s:14DataStructures18CollectionWrappingPAAE8endIndex4Base_0F0QZvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(after i: <Type usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sl5IndexQa\">Index<\/Type>) -&gt; <Type usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sl5IndexQa\">Index<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 899
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 953,
            "key.doc.column" : 17,
            "key.doc.comment" : "Index after given index `i`.",
            "key.doc.declaration" : "public func index(after i: Base.Index) -> Base.Index",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift\" line=\"41\" column=\"17\"><Name>index(after:)<\/Name><USR>s:14DataStructures18CollectionWrappingPAAE5index5after4Base_5IndexQZAH_tF<\/USR><Declaration>public func index(after i: Base.Index) -&gt; Base.Index<\/Declaration><CommentParts><Abstract><Para>Index after given index <codeVoice>i<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 41,
            "key.doc.name" : "index(after:)",
            "key.doc.type" : "Function",
            "key.doclength" : 33,
            "key.docoffset" : 862,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>after<\/decl.var.parameter.argument_label> <decl.var.parameter.name>i<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 89,
            "key.name" : "index(after:)",
            "key.namelength" : 26,
            "key.nameoffset" : 911,
            "key.offset" : 906,
            "key.parsed_declaration" : "public func index(after i: Base.Index) -> Base.Index",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 41,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl5index_8offsetBy5IndexQzAD_SitF\">index(_: Self.Index, offsetBy: Int) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF\">index(_: Self.Index, offsetBy: Int, limitedBy: Self.Index) -&gt; Self.Index?<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl5index5after5IndexQzAD_tF\">index(after: Self.Index) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy5IndexQzAD_SitF\">index(_: Self.Index, offsetBy: Int) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF\">index(_: Self.Index, offsetBy: Int, limitedBy: Self.Index) -&gt; Self.Index?<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy5IndexQzAD_qd__tSzRd__lF\">index&lt;T&gt;(_: Self.Index, offsetBy: T) -&gt; Self.Index where T : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy07limitedC05IndexQzSgAE_qd__AEtSzRd__lF\">index&lt;T&gt;(_: Self.Index, offsetBy: T, limitedBy: Self.Index) -&gt; Self.Index? where T : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsSQ7ElementRpzrlE5index2of5IndexQzSgAB_tF\">index(of:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index5where5IndexQzSgSb7ElementQzKXE_tKF\">index(where:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : CollectionWrapping> (Self) -> (Self.Base.Index) -> Self.Base.Index",
            "key.typeusr" : "$S5after4Base_5IndexQZAD_tcD",
            "key.usr" : "s:14DataStructures18CollectionWrappingPAAE5index5after4Base_5IndexQZAH_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(index: <Type usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sl5IndexQa\">Index<\/Type>) -&gt; <Type usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1050
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 1104,
            "key.doc.column" : 12,
            "key.doc.comment" : "- returns: Element at the given `index`.",
            "key.doc.declaration" : "public subscript(index: Base.Index) -> Base.Element { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift\" line=\"46\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:14DataStructures18CollectionWrappingPAAEy4Base_7ElementQZAD_5IndexQZcip<\/USR><Declaration>public subscript(index: Base.Index) -&gt; Base.Element { get }<\/Declaration><CommentParts><ResultDiscussion><Para>Element at the given <codeVoice>index<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Other>",
            "key.doc.line" : 46,
            "key.doc.name" : "subscript(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Element at the given `index`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 45,
            "key.docoffset" : 1001,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/CollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:14DataStructures18CollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 80,
            "key.name" : "subscript(_:)",
            "key.namelength" : 29,
            "key.nameoffset" : 1057,
            "key.offset" : 1057,
            "key.parsed_declaration" : "public subscript (index: Base.Index) -> Base.Element",
            "key.parsed_scope.end" : 48,
            "key.parsed_scope.start" : 46,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sly7ElementQz5IndexQzcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sly11SubSequenceQzSny5IndexQzGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl14DataStructuresE4safe7ElementQzSg5IndexQz_tcip\">subscript(safe:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsEy11SubSequenceQzqd__cSXRd__5BoundQyd__5IndexRtzluip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsEy11SubSequenceQzys15UnboundedRange_OXEcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Slss5SliceVyxG11SubSequenceRtzrlEyACSny5IndexQzGcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : CollectionWrapping> (Self.Base.Index) -> Self.Base.Element",
            "key.typeusr" : "$Sy4Base_7ElementQZAA_5IndexQZcD",
            "key.usr" : "s:14DataStructures18CollectionWrappingPAAEy4Base_7ElementQZAD_5IndexQZcip"
          }
        ],
        "key.typename" : "CollectionWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures18CollectionWrapping_pmD",
        "key.usr" : "s:14DataStructures18CollectionWrappingP"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3081,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 23,
        "key.name" : "TODO: Add doc comments.",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 140
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol DoubleWrapping : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/Type>, <Type usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 240
          }
        ],
        "key.bodylength" : 123,
        "key.bodyoffset" : 366,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 25,
            "key.offset" : 276
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 27,
            "key.offset" : 307
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 340
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 354
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DoubleWrapping<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/ref.protocol>, <ref.protocol usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ExpressibleByFloatLiteral"
          },
          {
            "key.name" : "ExpressibleByIntegerLiteral"
          },
          {
            "key.name" : "Hashable"
          },
          {
            "key.name" : "Comparable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 243,
        "key.name" : "DoubleWrapping",
        "key.namelength" : 14,
        "key.nameoffset" : 256,
        "key.offset" : 247,
        "key.parsed_declaration" : "public protocol DoubleWrapping:\n    ExpressibleByFloatLiteral,\n    ExpressibleByIntegerLiteral,\n    Hashable,\n    Comparable",
        "key.parsed_scope.end" : 21,
        "key.parsed_scope.start" : 11,
        "key.runtime_name" : "_TtP14DoubleWrapping14DoubleWrapping_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(floatLiteral: <Type usr=\"s:Sd\">Double<\/Type>)<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>floatLiteral<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 26,
            "key.name" : "init(floatLiteral:)",
            "key.namelength" : 26,
            "key.nameoffset" : 371,
            "key.offset" : 371,
            "key.parsed_declaration" : "init(floatLiteral: Double)",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingP14integerLiteralxSi_tcfc\">init(integerLiteral: Int)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingPyxSdcfc\">init(_: Double)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingPAAEyxSdcfc\">convenience init(_: Double)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc\">init(integerLiteral: Self.IntegerLiteralType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc\">convenience init(integerLiteral: Self)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc\">init(floatLiteral: Self.FloatLiteralType)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DoubleWrapping> (Self.Type) -> (Double) -> Self",
            "key.typeusr" : "$S12floatLiteralxSd_tcD",
            "key.usr" : "s:14DataStructures14DoubleWrappingP12floatLiteralxSd_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(integerLiteral: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>integerLiteral<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 25,
            "key.name" : "init(integerLiteral:)",
            "key.namelength" : 25,
            "key.nameoffset" : 402,
            "key.offset" : 402,
            "key.parsed_declaration" : "init(integerLiteral: Int)",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingP12floatLiteralxSd_tcfc\">init(floatLiteral: Double)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingPyxSdcfc\">init(_: Double)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingPAAEyxSdcfc\">convenience init(_: Double)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc\">init(integerLiteral: Self.IntegerLiteralType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc\">convenience init(integerLiteral: Self)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc\">init(floatLiteral: Self.FloatLiteralType)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DoubleWrapping> (Self.Type) -> (Int) -> Self",
            "key.typeusr" : "$S14integerLiteralxSi_tcD",
            "key.usr" : "s:14DataStructures14DoubleWrappingP14integerLiteralxSi_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var value: <Type usr=\"s:Sd\">Double<\/Type> { get set }<\/Declaration>",
            "key.bodylength" : 9,
            "key.bodyoffset" : 451,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "value",
            "key.namelength" : 5,
            "key.nameoffset" : 436,
            "key.offset" : 432,
            "key.parsed_declaration" : "var value: Double",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 19,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Double",
            "key.typeusr" : "$SSdD",
            "key.usr" : "s:14DataStructures14DoubleWrappingP5valueSdvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(_ double: <Type usr=\"s:Sd\">Double<\/Type>)<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>double<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 22,
            "key.name" : "init(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 466,
            "key.offset" : 466,
            "key.parsed_declaration" : "init(_ double: Double)",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingP12floatLiteralxSd_tcfc\">init(floatLiteral: Double)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingP14integerLiteralxSi_tcfc\">init(integerLiteral: Int)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingPAAEyxSdcfc\">convenience init(_: Double)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc\">init(integerLiteral: Self.IntegerLiteralType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc\">convenience init(integerLiteral: Self)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc\">init(floatLiteral: Self.FloatLiteralType)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DoubleWrapping> (Self.Type) -> (Double) -> Self",
            "key.typeusr" : "$SyxSdcD",
            "key.usr" : "s:14DataStructures14DoubleWrappingPyxSdcfc"
          }
        ],
        "key.typename" : "DoubleWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures14DoubleWrapping_pmD",
        "key.usr" : "s:14DataStructures14DoubleWrappingP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol DoubleWrapping : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/Type>, <Type usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 84,
        "key.bodyoffset" : 518,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DoubleWrapping<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/ref.protocol>, <ref.protocol usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 111,
        "key.name" : "DoubleWrapping",
        "key.namelength" : 14,
        "key.nameoffset" : 502,
        "key.offset" : 492,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public convenience init(_ double: <Type usr=\"s:Sd\">Double<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 524
              }
            ],
            "key.bodylength" : 45,
            "key.bodyoffset" : 555,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>double<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 70,
            "key.name" : "init(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 531,
            "key.offset" : 531,
            "key.parsed_declaration" : "public init(_ double: Double)",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 25,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingP12floatLiteralxSd_tcfc\">init(floatLiteral: Double)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingP14integerLiteralxSi_tcfc\">init(integerLiteral: Int)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures14DoubleWrappingPyxSdcfc\">init(_: Double)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc\">init(integerLiteral: Self.IntegerLiteralType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc\">convenience init(integerLiteral: Self)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc\">init(floatLiteral: Self.FloatLiteralType)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : DoubleWrapping> (Self.Type) -> (Double) -> Self",
            "key.typeusr" : "$SyxSdcD",
            "key.usr" : "s:14DataStructures14DoubleWrappingPAAEyxSdcfc"
          }
        ],
        "key.typename" : "DoubleWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures14DoubleWrapping_pmD",
        "key.usr" : "s:14DataStructures14DoubleWrappingP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol DoubleWrapping : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/Type>, <Type usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 86,
        "key.bodyoffset" : 631,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DoubleWrapping<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/ref.protocol>, <ref.protocol usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 113,
        "key.name" : "DoubleWrapping",
        "key.namelength" : 14,
        "key.nameoffset" : 615,
        "key.offset" : 605,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: - `Hashable`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 640
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var hashValue: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 664
              }
            ],
            "key.bodylength" : 24,
            "key.bodyoffset" : 691,
            "key.doc.declaration" : "var hashValue: Int { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Hash values are not guaranteed to be equal across different executions of your program. Do not save hash values to use during a future execution."
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>hashValue<\/Name><USR>s:SH9hashValueSivp<\/USR><Declaration>var hashValue: Int { get }<\/Declaration><CommentParts><Abstract><Para>The hash value.<\/Para><\/Abstract><Discussion><Para>Hash values are not guaranteed to be equal across different executions of your program. Do not save hash values to use during a future execution.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "hashValue",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hashValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 45,
            "key.name" : "hashValue",
            "key.namelength" : 9,
            "key.nameoffset" : 675,
            "key.offset" : 671,
            "key.parsed_declaration" : "public var hashValue: Int",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 34,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SH9hashValueSivp\">hashValue<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:SH9hashValueSivp"
          }
        ],
        "key.typename" : "DoubleWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures14DoubleWrapping_pmD",
        "key.usr" : "s:14DataStructures14DoubleWrappingP"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 18,
        "key.name" : "MARK: - Comparable",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 723
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func == &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 742
          }
        ],
        "key.bodylength" : 35,
        "key.bodyoffset" : 802,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 89,
        "key.name" : "==(_:_:)",
        "key.namelength" : 38,
        "key.nameoffset" : 754,
        "key.offset" : 749,
        "key.parsed_declaration" : "public func == <T: DoubleWrapping>(lhs: T, rhs: T) -> Bool",
        "key.parsed_scope.end" : 40,
        "key.parsed_scope.start" : 38,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 761
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 758,
            "key.offset" : 758,
            "key.parsed_declaration" : "public func == <T: DoubleWrapping>(lhs: T, rhs: T) -> Bool",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 38,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, T) -> Bool",
        "key.typeusr" : "$SySbx_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func == &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sd\">Double<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 840
          }
        ],
        "key.bodylength" : 29,
        "key.bodyoffset" : 905,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.name" : "==(_:_:)",
        "key.namelength" : 43,
        "key.nameoffset" : 852,
        "key.offset" : 847,
        "key.parsed_declaration" : "public func == <T: DoubleWrapping>(lhs: T, rhs: Double) -> Bool",
        "key.parsed_scope.end" : 44,
        "key.parsed_scope.start" : 42,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 859
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 856,
            "key.offset" : 856,
            "key.parsed_declaration" : "public func == <T: DoubleWrapping>(lhs: T, rhs: Double) -> Bool",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 42,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, Double) -> Bool",
        "key.typeusr" : "$SySbx_Sdtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func == &lt;T&gt;(lhs: <Type usr=\"s:Sd\">Double<\/Type>, rhs: <Type usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 937
          }
        ],
        "key.bodylength" : 29,
        "key.bodyoffset" : 1002,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.name" : "==(_:_:)",
        "key.namelength" : 43,
        "key.nameoffset" : 949,
        "key.offset" : 944,
        "key.parsed_declaration" : "public func == <T: DoubleWrapping>(lhs: Double, rhs: T) -> Bool",
        "key.parsed_scope.end" : 48,
        "key.parsed_scope.start" : 46,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 956
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 953,
            "key.offset" : 953,
            "key.parsed_declaration" : "public func == <T: DoubleWrapping>(lhs: Double, rhs: T) -> Bool",
            "key.parsed_scope.end" : 46,
            "key.parsed_scope.start" : 46,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (Double, T) -> Bool",
        "key.typeusr" : "$SySbSd_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &lt; &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1034
          }
        ],
        "key.bodylength" : 34,
        "key.bodyoffset" : 1093,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 87,
        "key.name" : "<(_:_:)",
        "key.namelength" : 37,
        "key.nameoffset" : 1046,
        "key.offset" : 1041,
        "key.parsed_declaration" : "public func < <T: DoubleWrapping>(lhs: T, rhs: T) -> Bool",
        "key.parsed_scope.end" : 52,
        "key.parsed_scope.start" : 50,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV1loiySbAD_ADtFZ\">&lt; (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;R&gt;(_: Self, _: R) -&gt; Bool where R : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyxq__G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp1loiySbSpyxG_ABtFZ\">&lt; (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP1loiySbSPyxG_ABtFZ\">&lt; (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv1loiySbSv_SvtFZ\">&lt; (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV1loiySbSV_SVtFZ\">&lt; (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE1loiySbAB_ABtFZ\">&lt; (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 1052
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1049,
            "key.offset" : 1049,
            "key.parsed_declaration" : "public func < <T: DoubleWrapping>(lhs: T, rhs: T) -> Bool",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 50,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, T) -> Bool",
        "key.typeusr" : "$SySbx_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &lt; &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sd\">Double<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1130
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1194,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 86,
        "key.name" : "<(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 1142,
        "key.offset" : 1137,
        "key.parsed_declaration" : "public func < <T: DoubleWrapping>(lhs: T, rhs: Double) -> Bool",
        "key.parsed_scope.end" : 56,
        "key.parsed_scope.start" : 54,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV1loiySbAD_ADtFZ\">&lt; (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;R&gt;(_: Self, _: R) -&gt; Bool where R : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyxq__G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp1loiySbSpyxG_ABtFZ\">&lt; (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP1loiySbSPyxG_ABtFZ\">&lt; (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv1loiySbSv_SvtFZ\">&lt; (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV1loiySbSV_SVtFZ\">&lt; (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE1loiySbAB_ABtFZ\">&lt; (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 1148
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1145,
            "key.offset" : 1145,
            "key.parsed_declaration" : "public func < <T: DoubleWrapping>(lhs: T, rhs: Double) -> Bool",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 54,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, Double) -> Bool",
        "key.typeusr" : "$SySbx_Sdtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &lt; &lt;T&gt;(lhs: <Type usr=\"s:Sd\">Double<\/Type>, rhs: <Type usr=\"s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1225
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1289,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 86,
        "key.name" : "<(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 1237,
        "key.offset" : 1232,
        "key.parsed_declaration" : "public func < <T: DoubleWrapping>(lhs: Double, rhs: T) -> Bool",
        "key.parsed_scope.end" : 60,
        "key.parsed_scope.start" : 58,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV1loiySbAD_ADtFZ\">&lt; (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;R&gt;(_: Self, _: R) -&gt; Bool where R : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyxq__G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp1loiySbSpyxG_ABtFZ\">&lt; (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP1loiySbSPyxG_ABtFZ\">&lt; (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv1loiySbSv_SvtFZ\">&lt; (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV1loiySbSV_SVtFZ\">&lt; (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE1loiySbAB_ABtFZ\">&lt; (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 1243
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1240,
            "key.offset" : 1240,
            "key.parsed_declaration" : "public func < <T: DoubleWrapping>(lhs: Double, rhs: T) -> Bool",
            "key.parsed_scope.end" : 58,
            "key.parsed_scope.start" : 58,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (Double, T) -> Bool",
        "key.typeusr" : "$SySbSd_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 12,
        "key.name" : "MARK: - Math",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1323
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1336
          }
        ],
        "key.bodylength" : 57,
        "key.bodyoffset" : 1398,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 113,
        "key.name" : "+(_:_:)",
        "key.namelength" : 43,
        "key.nameoffset" : 1348,
        "key.offset" : 1343,
        "key.parsed_declaration" : "public func + <T: DoubleWrapping>(augend: T, addend: T) -> T",
        "key.parsed_scope.end" : 65,
        "key.parsed_scope.start" : 63,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 1354
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1351,
            "key.offset" : 1351,
            "key.parsed_declaration" : "public func + <T: DoubleWrapping>(augend: T, addend: T) -> T",
            "key.parsed_scope.end" : 63,
            "key.parsed_scope.start" : 63,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1458
          }
        ],
        "key.bodylength" : 40,
        "key.bodyoffset" : 1525,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 101,
        "key.name" : "+(_:_:)",
        "key.namelength" : 43,
        "key.nameoffset" : 1470,
        "key.offset" : 1465,
        "key.parsed_declaration" : "public func + <T: DoubleWrapping>(augend: T, addend: T) -> Double",
        "key.parsed_scope.end" : 69,
        "key.parsed_scope.start" : 67,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 1476
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1473,
            "key.offset" : 1473,
            "key.parsed_declaration" : "public func + <T: DoubleWrapping>(augend: T, addend: T) -> Double",
            "key.parsed_scope.end" : 67,
            "key.parsed_scope.start" : 67,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, T) -> Double",
        "key.typeusr" : "$SySdx_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sd\">Double<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1568
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1634,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.name" : "+(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 1580,
        "key.offset" : 1575,
        "key.parsed_declaration" : "public func + <T: DoubleWrapping>(lhs: T, rhs: Double) -> Double",
        "key.parsed_scope.end" : 73,
        "key.parsed_scope.start" : 71,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 1586
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1583,
            "key.offset" : 1583,
            "key.parsed_declaration" : "public func + <T: DoubleWrapping>(lhs: T, rhs: Double) -> Double",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 71,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, Double) -> Double",
        "key.typeusr" : "$SySdx_Sdtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(lhs: <Type usr=\"s:Sd\">Double<\/Type>, rhs: <Type usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1665
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1731,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.name" : "+(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 1677,
        "key.offset" : 1672,
        "key.parsed_declaration" : "public func + <T: DoubleWrapping>(lhs: Double, rhs: T) -> Double",
        "key.parsed_scope.end" : 77,
        "key.parsed_scope.start" : 75,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 1683
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1680,
            "key.offset" : 1680,
            "key.parsed_declaration" : "public func + <T: DoubleWrapping>(lhs: Double, rhs: T) -> Double",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 75,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (Double, T) -> Double",
        "key.typeusr" : "$SyS2d_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1762
          }
        ],
        "key.bodylength" : 57,
        "key.bodyoffset" : 1824,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 113,
        "key.name" : "-(_:_:)",
        "key.namelength" : 43,
        "key.nameoffset" : 1774,
        "key.offset" : 1769,
        "key.parsed_declaration" : "public func - <T: DoubleWrapping>(augend: T, addend: T) -> T",
        "key.parsed_scope.end" : 81,
        "key.parsed_scope.start" : 79,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 1780
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1777,
            "key.offset" : 1777,
            "key.parsed_declaration" : "public func - <T: DoubleWrapping>(augend: T, addend: T) -> T",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 79,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(minuend: <Type usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, subtrahend: <Type usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1884
          }
        ],
        "key.bodylength" : 45,
        "key.bodyoffset" : 1956,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>minuend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>subtrahend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 111,
        "key.name" : "-(_:_:)",
        "key.namelength" : 48,
        "key.nameoffset" : 1896,
        "key.offset" : 1891,
        "key.parsed_declaration" : "public func - <T: DoubleWrapping>(minuend: T, subtrahend: T) -> Double",
        "key.parsed_scope.end" : 85,
        "key.parsed_scope.start" : 83,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 1902
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1899,
            "key.offset" : 1899,
            "key.parsed_declaration" : "public func - <T: DoubleWrapping>(minuend: T, subtrahend: T) -> Double",
            "key.parsed_scope.end" : 83,
            "key.parsed_scope.start" : 83,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, T) -> Double",
        "key.typeusr" : "$SySdx_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sd\">Double<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2004
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2070,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.name" : "-(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 2016,
        "key.offset" : 2011,
        "key.parsed_declaration" : "public func - <T: DoubleWrapping>(lhs: T, rhs: Double) -> Double",
        "key.parsed_scope.end" : 89,
        "key.parsed_scope.start" : 87,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 2022
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2019,
            "key.offset" : 2019,
            "key.parsed_declaration" : "public func - <T: DoubleWrapping>(lhs: T, rhs: Double) -> Double",
            "key.parsed_scope.end" : 87,
            "key.parsed_scope.start" : 87,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, Double) -> Double",
        "key.typeusr" : "$SySdx_Sdtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(lhs: <Type usr=\"s:Sd\">Double<\/Type>, rhs: <Type usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2101
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2167,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.name" : "-(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 2113,
        "key.offset" : 2108,
        "key.parsed_declaration" : "public func - <T: DoubleWrapping>(lhs: Double, rhs: T) -> Double",
        "key.parsed_scope.end" : 93,
        "key.parsed_scope.start" : 91,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 2119
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2116,
            "key.offset" : 2116,
            "key.parsed_declaration" : "public func - <T: DoubleWrapping>(lhs: Double, rhs: T) -> Double",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 91,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (Double, T) -> Double",
        "key.typeusr" : "$SyS2d_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2198
          }
        ],
        "key.bodylength" : 57,
        "key.bodyoffset" : 2260,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 113,
        "key.name" : "*(_:_:)",
        "key.namelength" : 43,
        "key.nameoffset" : 2210,
        "key.offset" : 2205,
        "key.parsed_declaration" : "public func * <T: DoubleWrapping>(augend: T, addend: T) -> T",
        "key.parsed_scope.end" : 97,
        "key.parsed_scope.start" : 95,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 2216
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2213,
            "key.offset" : 2213,
            "key.parsed_declaration" : "public func * <T: DoubleWrapping>(augend: T, addend: T) -> T",
            "key.parsed_scope.end" : 95,
            "key.parsed_scope.start" : 95,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(multiplicand: <Type usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, multiplier: <Type usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2320
          }
        ],
        "key.bodylength" : 50,
        "key.bodyoffset" : 2397,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>multiplicand<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>multiplier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 121,
        "key.name" : "*(_:_:)",
        "key.namelength" : 53,
        "key.nameoffset" : 2332,
        "key.offset" : 2327,
        "key.parsed_declaration" : "public func * <T: DoubleWrapping>(multiplicand: T, multiplier: T) -> Double",
        "key.parsed_scope.end" : 101,
        "key.parsed_scope.start" : 99,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 2338
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2335,
            "key.offset" : 2335,
            "key.parsed_declaration" : "public func * <T: DoubleWrapping>(multiplicand: T, multiplier: T) -> Double",
            "key.parsed_scope.end" : 99,
            "key.parsed_scope.start" : 99,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, T) -> Double",
        "key.typeusr" : "$SySdx_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sd\">Double<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2450
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2516,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.name" : "*(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 2462,
        "key.offset" : 2457,
        "key.parsed_declaration" : "public func * <T: DoubleWrapping>(lhs: T, rhs: Double) -> Double",
        "key.parsed_scope.end" : 105,
        "key.parsed_scope.start" : 103,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 2468
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2465,
            "key.offset" : 2465,
            "key.parsed_declaration" : "public func * <T: DoubleWrapping>(lhs: T, rhs: Double) -> Double",
            "key.parsed_scope.end" : 103,
            "key.parsed_scope.start" : 103,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, Double) -> Double",
        "key.typeusr" : "$SySdx_Sdtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(lhs: <Type usr=\"s:Sd\">Double<\/Type>, rhs: <Type usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2547
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2613,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.name" : "*(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 2559,
        "key.offset" : 2554,
        "key.parsed_declaration" : "public func * <T: DoubleWrapping>(lhs: Double, rhs: T) -> Double",
        "key.parsed_scope.end" : 109,
        "key.parsed_scope.start" : 107,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 2565
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2562,
            "key.offset" : 2562,
            "key.parsed_declaration" : "public func * <T: DoubleWrapping>(lhs: Double, rhs: T) -> Double",
            "key.parsed_scope.end" : 107,
            "key.parsed_scope.start" : 107,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (Double, T) -> Double",
        "key.typeusr" : "$SyS2d_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(dividend: <Type usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, divisor: <Type usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2644
          }
        ],
        "key.bodylength" : 60,
        "key.bodyoffset" : 2709,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>dividend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>divisor<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 119,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 46,
        "key.nameoffset" : 2656,
        "key.offset" : 2651,
        "key.parsed_declaration" : "public func \/ <T: DoubleWrapping>(dividend: T, divisor: T) -> T",
        "key.parsed_scope.end" : 113,
        "key.parsed_scope.start" : 111,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 2662
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2659,
            "key.offset" : 2659,
            "key.parsed_declaration" : "public func \/ <T: DoubleWrapping>(dividend: T, divisor: T) -> T",
            "key.parsed_scope.end" : 111,
            "key.parsed_scope.start" : 111,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(dividend: <Type usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, divisor: <Type usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2772
          }
        ],
        "key.bodylength" : 43,
        "key.bodyoffset" : 2842,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>dividend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>divisor<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 107,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 46,
        "key.nameoffset" : 2784,
        "key.offset" : 2779,
        "key.parsed_declaration" : "public func \/ <T: DoubleWrapping>(dividend: T, divisor: T) -> Double",
        "key.parsed_scope.end" : 117,
        "key.parsed_scope.start" : 115,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 2790
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2787,
            "key.offset" : 2787,
            "key.parsed_declaration" : "public func \/ <T: DoubleWrapping>(dividend: T, divisor: T) -> Double",
            "key.parsed_scope.end" : 115,
            "key.parsed_scope.start" : 115,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, T) -> Double",
        "key.typeusr" : "$SySdx_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sd\">Double<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2888
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2954,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 2900,
        "key.offset" : 2895,
        "key.parsed_declaration" : "public func \/ <T: DoubleWrapping>(lhs: T, rhs: Double) -> Double",
        "key.parsed_scope.end" : 121,
        "key.parsed_scope.start" : 119,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 2906
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2903,
            "key.offset" : 2903,
            "key.parsed_declaration" : "public func \/ <T: DoubleWrapping>(lhs: T, rhs: Double) -> Double",
            "key.parsed_scope.end" : 119,
            "key.parsed_scope.start" : 119,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (T, Double) -> Double",
        "key.typeusr" : "$SySdx_Sdtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(lhs: <Type usr=\"s:Sd\">Double<\/Type>, rhs: <Type usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sd\">Double<\/Type> where T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2985
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 3051,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 2997,
        "key.offset" : 2992,
        "key.parsed_declaration" : "public func \/ <T: DoubleWrapping>(lhs: Double, rhs: T) -> Double",
        "key.parsed_scope.end" : 125,
        "key.parsed_scope.start" : 123,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 14,
                "key.offset" : 3003
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/DoubleWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures14DoubleWrappingP\">DoubleWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "DoubleWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 17,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 3000,
            "key.offset" : 3000,
            "key.parsed_declaration" : "public func \/ <T: DoubleWrapping>(lhs: Double, rhs: T) -> Double",
            "key.parsed_scope.end" : 123,
            "key.parsed_scope.start" : 123,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : DoubleWrapping> (Double, T) -> Double",
        "key.typeusr" : "$SyS2d_xtc14DataStructures14DoubleWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3044,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 23,
        "key.name" : "TODO: Add doc comments.",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 158
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol FloatWrapping : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/Type>, <Type usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 258
          }
        ],
        "key.bodylength" : 119,
        "key.bodyoffset" : 383,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 25,
            "key.offset" : 293
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 27,
            "key.offset" : 324
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 357
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 371
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FloatWrapping<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/ref.protocol>, <ref.protocol usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ExpressibleByFloatLiteral"
          },
          {
            "key.name" : "ExpressibleByIntegerLiteral"
          },
          {
            "key.name" : "Hashable"
          },
          {
            "key.name" : "Comparable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 238,
        "key.name" : "FloatWrapping",
        "key.namelength" : 13,
        "key.nameoffset" : 274,
        "key.offset" : 265,
        "key.parsed_declaration" : "public protocol FloatWrapping:\n    ExpressibleByFloatLiteral,\n    ExpressibleByIntegerLiteral,\n    Hashable,\n    Comparable",
        "key.parsed_scope.end" : 23,
        "key.parsed_scope.start" : 13,
        "key.runtime_name" : "_TtP13FloatWrapping13FloatWrapping_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(floatLiteral: <Type usr=\"s:Sf\">Float<\/Type>)<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>floatLiteral<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 25,
            "key.name" : "init(floatLiteral:)",
            "key.namelength" : 25,
            "key.nameoffset" : 388,
            "key.offset" : 388,
            "key.parsed_declaration" : "init(floatLiteral: Float)",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 19,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingP14integerLiteralxSi_tcfc\">init(integerLiteral: Int)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingPyxSfcfc\">init(_: Float)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingPAAEyxSfcfc\">convenience init(_: Float)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc\">init(integerLiteral: Self.IntegerLiteralType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc\">convenience init(integerLiteral: Self)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc\">init(floatLiteral: Self.FloatLiteralType)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : FloatWrapping> (Self.Type) -> (Float) -> Self",
            "key.typeusr" : "$S12floatLiteralxSf_tcD",
            "key.usr" : "s:14DataStructures13FloatWrappingP12floatLiteralxSf_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(integerLiteral: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>integerLiteral<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 25,
            "key.name" : "init(integerLiteral:)",
            "key.namelength" : 25,
            "key.nameoffset" : 418,
            "key.offset" : 418,
            "key.parsed_declaration" : "init(integerLiteral: Int)",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingP12floatLiteralxSf_tcfc\">init(floatLiteral: Float)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingPyxSfcfc\">init(_: Float)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingPAAEyxSfcfc\">convenience init(_: Float)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc\">init(integerLiteral: Self.IntegerLiteralType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc\">convenience init(integerLiteral: Self)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc\">init(floatLiteral: Self.FloatLiteralType)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : FloatWrapping> (Self.Type) -> (Int) -> Self",
            "key.typeusr" : "$S14integerLiteralxSi_tcD",
            "key.usr" : "s:14DataStructures13FloatWrappingP14integerLiteralxSi_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var value: <Type usr=\"s:Sf\">Float<\/Type> { get set }<\/Declaration>",
            "key.bodylength" : 9,
            "key.bodyoffset" : 466,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "value",
            "key.namelength" : 5,
            "key.nameoffset" : 452,
            "key.offset" : 448,
            "key.parsed_declaration" : "var value: Float",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 21,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Float",
            "key.typeusr" : "$SSfD",
            "key.usr" : "s:14DataStructures13FloatWrappingP5valueSfvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(_ float: <Type usr=\"s:Sf\">Float<\/Type>)<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>float<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 20,
            "key.name" : "init(_:)",
            "key.namelength" : 20,
            "key.nameoffset" : 481,
            "key.offset" : 481,
            "key.parsed_declaration" : "init(_ float: Float)",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingP12floatLiteralxSf_tcfc\">init(floatLiteral: Float)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingP14integerLiteralxSi_tcfc\">init(integerLiteral: Int)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingPAAEyxSfcfc\">convenience init(_: Float)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc\">init(integerLiteral: Self.IntegerLiteralType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc\">convenience init(integerLiteral: Self)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc\">init(floatLiteral: Self.FloatLiteralType)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : FloatWrapping> (Self.Type) -> (Float) -> Self",
            "key.typeusr" : "$SyxSfcD",
            "key.usr" : "s:14DataStructures13FloatWrappingPyxSfcfc"
          }
        ],
        "key.typename" : "FloatWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures13FloatWrapping_pmD",
        "key.usr" : "s:14DataStructures13FloatWrappingP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol FloatWrapping : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/Type>, <Type usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 81,
        "key.bodyoffset" : 530,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FloatWrapping<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/ref.protocol>, <ref.protocol usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 107,
        "key.name" : "FloatWrapping",
        "key.namelength" : 13,
        "key.nameoffset" : 515,
        "key.offset" : 505,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public convenience init(_ float: <Type usr=\"s:Sf\">Float<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 536
              }
            ],
            "key.bodylength" : 44,
            "key.bodyoffset" : 565,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>float<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 67,
            "key.name" : "init(_:)",
            "key.namelength" : 20,
            "key.nameoffset" : 543,
            "key.offset" : 543,
            "key.parsed_declaration" : "public init(_ float: Float)",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 27,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingP12floatLiteralxSf_tcfc\">init(floatLiteral: Float)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingP14integerLiteralxSi_tcfc\">init(integerLiteral: Int)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures13FloatWrappingPyxSfcfc\">init(_: Float)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc\">init(integerLiteral: Self.IntegerLiteralType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc\">convenience init(integerLiteral: Self)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc\">init(floatLiteral: Self.FloatLiteralType)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : FloatWrapping> (Self.Type) -> (Float) -> Self",
            "key.typeusr" : "$SyxSfcD",
            "key.usr" : "s:14DataStructures13FloatWrappingPAAEyxSfcfc"
          }
        ],
        "key.typename" : "FloatWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures13FloatWrapping_pmD",
        "key.usr" : "s:14DataStructures13FloatWrappingP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol FloatWrapping : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/Type>, <Type usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 86,
        "key.bodyoffset" : 640,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>FloatWrapping<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:s25ExpressibleByFloatLiteralP\">ExpressibleByFloatLiteral<\/ref.protocol>, <ref.protocol usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 112,
        "key.name" : "FloatWrapping",
        "key.namelength" : 13,
        "key.nameoffset" : 625,
        "key.offset" : 615,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: - `Hashable`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 649
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var hashValue: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 673
              }
            ],
            "key.bodylength" : 24,
            "key.bodyoffset" : 700,
            "key.doc.declaration" : "var hashValue: Int { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Hash values are not guaranteed to be equal across different executions of your program. Do not save hash values to use during a future execution."
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>hashValue<\/Name><USR>s:SH9hashValueSivp<\/USR><Declaration>var hashValue: Int { get }<\/Declaration><CommentParts><Abstract><Para>The hash value.<\/Para><\/Abstract><Discussion><Para>Hash values are not guaranteed to be equal across different executions of your program. Do not save hash values to use during a future execution.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "hashValue",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hashValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 45,
            "key.name" : "hashValue",
            "key.namelength" : 9,
            "key.nameoffset" : 684,
            "key.offset" : 680,
            "key.parsed_declaration" : "public var hashValue: Int",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 37,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SH9hashValueSivp\">hashValue<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:SH9hashValueSivp"
          }
        ],
        "key.typename" : "FloatWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures13FloatWrapping_pmD",
        "key.usr" : "s:14DataStructures13FloatWrappingP"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 18,
        "key.name" : "MARK: - Comparable",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 732
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func == &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 751
          }
        ],
        "key.bodylength" : 35,
        "key.bodyoffset" : 810,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 88,
        "key.name" : "==(_:_:)",
        "key.namelength" : 37,
        "key.nameoffset" : 763,
        "key.offset" : 758,
        "key.parsed_declaration" : "public func == <T: FloatWrapping>(lhs: T, rhs: T) -> Bool",
        "key.parsed_scope.end" : 43,
        "key.parsed_scope.start" : 41,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15AffineTransformV2eeoiySbAC_ACtFZ\">== (_: AffineTransform, _: AffineTransform) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 770
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 767,
            "key.offset" : 767,
            "key.parsed_declaration" : "public func == <T: FloatWrapping>(lhs: T, rhs: T) -> Bool",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 41,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, T) -> Bool",
        "key.typeusr" : "$SySbx_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func == &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sf\">Float<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 848
          }
        ],
        "key.bodylength" : 29,
        "key.bodyoffset" : 911,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 86,
        "key.name" : "==(_:_:)",
        "key.namelength" : 41,
        "key.nameoffset" : 860,
        "key.offset" : 855,
        "key.parsed_declaration" : "public func == <T: FloatWrapping>(lhs: T, rhs: Float) -> Bool",
        "key.parsed_scope.end" : 47,
        "key.parsed_scope.start" : 45,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15AffineTransformV2eeoiySbAC_ACtFZ\">== (_: AffineTransform, _: AffineTransform) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 867
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 864,
            "key.offset" : 864,
            "key.parsed_declaration" : "public func == <T: FloatWrapping>(lhs: T, rhs: Float) -> Bool",
            "key.parsed_scope.end" : 45,
            "key.parsed_scope.start" : 45,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, Float) -> Bool",
        "key.typeusr" : "$SySbx_Sftc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func == &lt;T&gt;(lhs: <Type usr=\"s:Sf\">Float<\/Type>, rhs: <Type usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 943
          }
        ],
        "key.bodylength" : 29,
        "key.bodyoffset" : 1006,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 86,
        "key.name" : "==(_:_:)",
        "key.namelength" : 41,
        "key.nameoffset" : 955,
        "key.offset" : 950,
        "key.parsed_declaration" : "public func == <T: FloatWrapping>(lhs: Float, rhs: T) -> Bool",
        "key.parsed_scope.end" : 51,
        "key.parsed_scope.start" : 49,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation15AffineTransformV2eeoiySbAC_ACtFZ\">== (_: AffineTransform, _: AffineTransform) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 962
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 959,
            "key.offset" : 959,
            "key.parsed_declaration" : "public func == <T: FloatWrapping>(lhs: Float, rhs: T) -> Bool",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 49,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (Float, T) -> Bool",
        "key.typeusr" : "$SySbSf_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &lt; &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1038
          }
        ],
        "key.bodylength" : 34,
        "key.bodyoffset" : 1096,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 86,
        "key.name" : "<(_:_:)",
        "key.namelength" : 36,
        "key.nameoffset" : 1050,
        "key.offset" : 1045,
        "key.parsed_declaration" : "public func < <T: FloatWrapping>(lhs: T, rhs: T) -> Bool",
        "key.parsed_scope.end" : 55,
        "key.parsed_scope.start" : 53,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV1loiySbAD_ADtFZ\">&lt; (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;R&gt;(_: Self, _: R) -&gt; Bool where R : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyxq__G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp1loiySbSpyxG_ABtFZ\">&lt; (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP1loiySbSPyxG_ABtFZ\">&lt; (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv1loiySbSv_SvtFZ\">&lt; (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV1loiySbSV_SVtFZ\">&lt; (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE1loiySbAB_ABtFZ\">&lt; (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1loiySbAC_ACtFZ\">&lt; (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV1loiySbAC_ACtFZ\">&lt; (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1loiySbAB_ABtFZ\">&lt; (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1loiySbAC_ACtFZ\">&lt; (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V1loiySbAE_AEtFZ\">&lt; (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1loiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">&lt; &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 1056
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1053,
            "key.offset" : 1053,
            "key.parsed_declaration" : "public func < <T: FloatWrapping>(lhs: T, rhs: T) -> Bool",
            "key.parsed_scope.end" : 53,
            "key.parsed_scope.start" : 53,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, T) -> Bool",
        "key.typeusr" : "$SySbx_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &lt; &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sf\">Float<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1133
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1195,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 84,
        "key.name" : "<(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 1145,
        "key.offset" : 1140,
        "key.parsed_declaration" : "public func < <T: FloatWrapping>(lhs: T, rhs: Float) -> Bool",
        "key.parsed_scope.end" : 59,
        "key.parsed_scope.start" : 57,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV1loiySbAD_ADtFZ\">&lt; (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;R&gt;(_: Self, _: R) -&gt; Bool where R : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyxq__G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp1loiySbSpyxG_ABtFZ\">&lt; (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP1loiySbSPyxG_ABtFZ\">&lt; (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv1loiySbSv_SvtFZ\">&lt; (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV1loiySbSV_SVtFZ\">&lt; (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE1loiySbAB_ABtFZ\">&lt; (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1loiySbAC_ACtFZ\">&lt; (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV1loiySbAC_ACtFZ\">&lt; (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1loiySbAB_ABtFZ\">&lt; (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1loiySbAC_ACtFZ\">&lt; (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V1loiySbAE_AEtFZ\">&lt; (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1loiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">&lt; &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 1151
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1148,
            "key.offset" : 1148,
            "key.parsed_declaration" : "public func < <T: FloatWrapping>(lhs: T, rhs: Float) -> Bool",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 57,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, Float) -> Bool",
        "key.typeusr" : "$SySbx_Sftc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &lt; &lt;T&gt;(lhs: <Type usr=\"s:Sf\">Float<\/Type>, rhs: <Type usr=\"s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1226
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1288,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 84,
        "key.name" : "<(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 1238,
        "key.offset" : 1233,
        "key.parsed_declaration" : "public func < <T: FloatWrapping>(lhs: Float, rhs: T) -> Bool",
        "key.parsed_scope.end" : 63,
        "key.parsed_scope.start" : 61,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV1loiySbAD_ADtFZ\">&lt; (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;R&gt;(_: Self, _: R) -&gt; Bool where R : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyxq__G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp1loiySbSpyxG_ABtFZ\">&lt; (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP1loiySbSPyxG_ABtFZ\">&lt; (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv1loiySbSv_SvtFZ\">&lt; (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV1loiySbSV_SVtFZ\">&lt; (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE1loiySbAB_ABtFZ\">&lt; (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1loiySbAC_ACtFZ\">&lt; (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV1loiySbAC_ACtFZ\">&lt; (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1loiySbAB_ABtFZ\">&lt; (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1loiySbAC_ACtFZ\">&lt; (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V1loiySbAE_AEtFZ\">&lt; (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1loiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">&lt; &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 1244
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1241,
            "key.offset" : 1241,
            "key.parsed_declaration" : "public func < <T: FloatWrapping>(lhs: Float, rhs: T) -> Bool",
            "key.parsed_scope.end" : 61,
            "key.parsed_scope.start" : 61,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (Float, T) -> Bool",
        "key.typeusr" : "$SySbSf_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 12,
        "key.name" : "MARK: - Math",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1322
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1335
          }
        ],
        "key.bodylength" : 57,
        "key.bodyoffset" : 1396,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 112,
        "key.name" : "+(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 1347,
        "key.offset" : 1342,
        "key.parsed_declaration" : "public func + <T: FloatWrapping>(augend: T, addend: T) -> T",
        "key.parsed_scope.end" : 68,
        "key.parsed_scope.start" : 66,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1poiyA2C_SdtFZ\">+ (_: Date, _: TimeInterval) -&gt; Date<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1poiyA2B_ABtFZ\">+ (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1poiyA2C_ACtFZ\">+ (_: IndexPath, _: IndexPath) -&gt; IndexPath<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1poiyACyxGAG_AGtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1poiyACyxGAE_AEtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_AA0aB8IntervalOtF\">+ (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_SdtF\">+ (_: DispatchTime, _: Double) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">+ (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_SdtF\">+ (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1poiyA2C_ACtFZ\">+ (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 1353
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1350,
            "key.offset" : 1350,
            "key.parsed_declaration" : "public func + <T: FloatWrapping>(augend: T, addend: T) -> T",
            "key.parsed_scope.end" : 66,
            "key.parsed_scope.start" : 66,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1456
          }
        ],
        "key.bodylength" : 40,
        "key.bodyoffset" : 1521,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 99,
        "key.name" : "+(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 1468,
        "key.offset" : 1463,
        "key.parsed_declaration" : "public func + <T: FloatWrapping>(augend: T, addend: T) -> Float",
        "key.parsed_scope.end" : 72,
        "key.parsed_scope.start" : 70,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1poiyA2C_SdtFZ\">+ (_: Date, _: TimeInterval) -&gt; Date<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1poiyA2B_ABtFZ\">+ (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1poiyA2C_ACtFZ\">+ (_: IndexPath, _: IndexPath) -&gt; IndexPath<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1poiyACyxGAG_AGtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1poiyACyxGAE_AEtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_AA0aB8IntervalOtF\">+ (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_SdtF\">+ (_: DispatchTime, _: Double) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">+ (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_SdtF\">+ (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1poiyA2C_ACtFZ\">+ (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 1474
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1471,
            "key.offset" : 1471,
            "key.parsed_declaration" : "public func + <T: FloatWrapping>(augend: T, addend: T) -> Float",
            "key.parsed_scope.end" : 70,
            "key.parsed_scope.start" : 70,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, T) -> Float",
        "key.typeusr" : "$SySfx_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sf\">Float<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1564
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1627,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 85,
        "key.name" : "+(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 1576,
        "key.offset" : 1571,
        "key.parsed_declaration" : "public func + <T: FloatWrapping>(lhs: T, rhs: Float) -> Float",
        "key.parsed_scope.end" : 76,
        "key.parsed_scope.start" : 74,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1poiyA2C_SdtFZ\">+ (_: Date, _: TimeInterval) -&gt; Date<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1poiyA2B_ABtFZ\">+ (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1poiyA2C_ACtFZ\">+ (_: IndexPath, _: IndexPath) -&gt; IndexPath<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1poiyACyxGAG_AGtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1poiyACyxGAE_AEtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_AA0aB8IntervalOtF\">+ (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_SdtF\">+ (_: DispatchTime, _: Double) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">+ (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_SdtF\">+ (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1poiyA2C_ACtFZ\">+ (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 1582
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1579,
            "key.offset" : 1579,
            "key.parsed_declaration" : "public func + <T: FloatWrapping>(lhs: T, rhs: Float) -> Float",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 74,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, Float) -> Float",
        "key.typeusr" : "$SySfx_Sftc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(lhs: <Type usr=\"s:Sf\">Float<\/Type>, rhs: <Type usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1658
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1721,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 85,
        "key.name" : "+(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 1670,
        "key.offset" : 1665,
        "key.parsed_declaration" : "public func + <T: FloatWrapping>(lhs: Float, rhs: T) -> Float",
        "key.parsed_scope.end" : 80,
        "key.parsed_scope.start" : 78,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1poiyA2C_SdtFZ\">+ (_: Date, _: TimeInterval) -&gt; Date<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1poiyA2B_ABtFZ\">+ (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1poiyA2C_ACtFZ\">+ (_: IndexPath, _: IndexPath) -&gt; IndexPath<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1poiyACyxGAG_AGtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1poiyACyxGAE_AEtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_AA0aB8IntervalOtF\">+ (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_SdtF\">+ (_: DispatchTime, _: Double) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">+ (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_SdtF\">+ (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1poiyA2C_ACtFZ\">+ (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 1676
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1673,
            "key.offset" : 1673,
            "key.parsed_declaration" : "public func + <T: FloatWrapping>(lhs: Float, rhs: T) -> Float",
            "key.parsed_scope.end" : 78,
            "key.parsed_scope.start" : 78,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (Float, T) -> Float",
        "key.typeusr" : "$SyS2f_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1752
          }
        ],
        "key.bodylength" : 57,
        "key.bodyoffset" : 1813,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 112,
        "key.name" : "-(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 1764,
        "key.offset" : 1759,
        "key.parsed_declaration" : "public func - <T: FloatWrapping>(augend: T, addend: T) -> T",
        "key.parsed_scope.end" : 84,
        "key.parsed_scope.start" : 82,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1soiyA2C_SdtFZ\">- (_: Date, _: TimeInterval) -&gt; Date<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1soiyA2B_ABtFZ\">- (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1soiyACyxGAG_AGtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1soiyACyxGAE_AEtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_AA0aB8IntervalOtF\">- (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_SdtF\">- (_: DispatchTime, _: Double) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">- (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_SdtF\">- (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1soiyA2C_ACtFZ\">- (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 1770
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1767,
            "key.offset" : 1767,
            "key.parsed_declaration" : "public func - <T: FloatWrapping>(augend: T, addend: T) -> T",
            "key.parsed_scope.end" : 82,
            "key.parsed_scope.start" : 82,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(minuend: <Type usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, subtrahend: <Type usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1873
          }
        ],
        "key.bodylength" : 45,
        "key.bodyoffset" : 1943,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>minuend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>subtrahend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 109,
        "key.name" : "-(_:_:)",
        "key.namelength" : 47,
        "key.nameoffset" : 1885,
        "key.offset" : 1880,
        "key.parsed_declaration" : "public func - <T: FloatWrapping>(minuend: T, subtrahend: T) -> Float",
        "key.parsed_scope.end" : 88,
        "key.parsed_scope.start" : 86,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1soiyA2C_SdtFZ\">- (_: Date, _: TimeInterval) -&gt; Date<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1soiyA2B_ABtFZ\">- (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1soiyACyxGAG_AGtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1soiyACyxGAE_AEtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_AA0aB8IntervalOtF\">- (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_SdtF\">- (_: DispatchTime, _: Double) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">- (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_SdtF\">- (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1soiyA2C_ACtFZ\">- (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 1891
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1888,
            "key.offset" : 1888,
            "key.parsed_declaration" : "public func - <T: FloatWrapping>(minuend: T, subtrahend: T) -> Float",
            "key.parsed_scope.end" : 86,
            "key.parsed_scope.start" : 86,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, T) -> Float",
        "key.typeusr" : "$SySfx_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sf\">Float<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1991
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2054,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 85,
        "key.name" : "-(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 2003,
        "key.offset" : 1998,
        "key.parsed_declaration" : "public func - <T: FloatWrapping>(lhs: T, rhs: Float) -> Float",
        "key.parsed_scope.end" : 92,
        "key.parsed_scope.start" : 90,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1soiyA2C_SdtFZ\">- (_: Date, _: TimeInterval) -&gt; Date<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1soiyA2B_ABtFZ\">- (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1soiyACyxGAG_AGtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1soiyACyxGAE_AEtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_AA0aB8IntervalOtF\">- (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_SdtF\">- (_: DispatchTime, _: Double) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">- (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_SdtF\">- (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1soiyA2C_ACtFZ\">- (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 2009
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2006,
            "key.offset" : 2006,
            "key.parsed_declaration" : "public func - <T: FloatWrapping>(lhs: T, rhs: Float) -> Float",
            "key.parsed_scope.end" : 90,
            "key.parsed_scope.start" : 90,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, Float) -> Float",
        "key.typeusr" : "$SySfx_Sftc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(lhs: <Type usr=\"s:Sf\">Float<\/Type>, rhs: <Type usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2085
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2148,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 85,
        "key.name" : "-(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 2097,
        "key.offset" : 2092,
        "key.parsed_declaration" : "public func - <T: FloatWrapping>(lhs: Float, rhs: T) -> Float",
        "key.parsed_scope.end" : 96,
        "key.parsed_scope.start" : 94,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1soiyA2C_SdtFZ\">- (_: Date, _: TimeInterval) -&gt; Date<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1soiyA2B_ABtFZ\">- (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1soiyACyxGAG_AGtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1soiyACyxGAE_AEtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_AA0aB8IntervalOtF\">- (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_SdtF\">- (_: DispatchTime, _: Double) -&gt; DispatchTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">- (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_SdtF\">- (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1soiyA2C_ACtFZ\">- (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 2103
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2100,
            "key.offset" : 2100,
            "key.parsed_declaration" : "public func - <T: FloatWrapping>(lhs: Float, rhs: T) -> Float",
            "key.parsed_scope.end" : 94,
            "key.parsed_scope.start" : 94,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (Float, T) -> Float",
        "key.typeusr" : "$SyS2f_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2179
          }
        ],
        "key.bodylength" : 57,
        "key.bodyoffset" : 2240,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 112,
        "key.name" : "*(_:_:)",
        "key.namelength" : 42,
        "key.nameoffset" : 2191,
        "key.offset" : 2186,
        "key.parsed_declaration" : "public func * <T: FloatWrapping>(augend: T, addend: T) -> T",
        "key.parsed_scope.end" : 100,
        "key.parsed_scope.start" : 98,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1moiyA2B_ABtFZ\">* (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGAE_SdtFZ\">* (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGSd_AEtFZ\">* (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1moiyA2C_ACtFZ\">* (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 2197
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2194,
            "key.offset" : 2194,
            "key.parsed_declaration" : "public func * <T: FloatWrapping>(augend: T, addend: T) -> T",
            "key.parsed_scope.end" : 98,
            "key.parsed_scope.start" : 98,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(multiplicand: <Type usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, multiplier: <Type usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2300
          }
        ],
        "key.bodylength" : 50,
        "key.bodyoffset" : 2375,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>multiplicand<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>multiplier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 119,
        "key.name" : "*(_:_:)",
        "key.namelength" : 52,
        "key.nameoffset" : 2312,
        "key.offset" : 2307,
        "key.parsed_declaration" : "public func * <T: FloatWrapping>(multiplicand: T, multiplier: T) -> Float",
        "key.parsed_scope.end" : 104,
        "key.parsed_scope.start" : 102,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1moiyA2B_ABtFZ\">* (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGAE_SdtFZ\">* (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGSd_AEtFZ\">* (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1moiyA2C_ACtFZ\">* (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 2318
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2315,
            "key.offset" : 2315,
            "key.parsed_declaration" : "public func * <T: FloatWrapping>(multiplicand: T, multiplier: T) -> Float",
            "key.parsed_scope.end" : 102,
            "key.parsed_scope.start" : 102,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, T) -> Float",
        "key.typeusr" : "$SySfx_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sf\">Float<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2428
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2491,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 85,
        "key.name" : "*(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 2440,
        "key.offset" : 2435,
        "key.parsed_declaration" : "public func * <T: FloatWrapping>(lhs: T, rhs: Float) -> Float",
        "key.parsed_scope.end" : 108,
        "key.parsed_scope.start" : 106,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1moiyA2B_ABtFZ\">* (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGAE_SdtFZ\">* (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGSd_AEtFZ\">* (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1moiyA2C_ACtFZ\">* (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 2446
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2443,
            "key.offset" : 2443,
            "key.parsed_declaration" : "public func * <T: FloatWrapping>(lhs: T, rhs: Float) -> Float",
            "key.parsed_scope.end" : 106,
            "key.parsed_scope.start" : 106,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, Float) -> Float",
        "key.typeusr" : "$SySfx_Sftc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(lhs: <Type usr=\"s:Sf\">Float<\/Type>, rhs: <Type usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2522
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2585,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 85,
        "key.name" : "*(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 2534,
        "key.offset" : 2529,
        "key.parsed_declaration" : "public func * <T: FloatWrapping>(lhs: Float, rhs: T) -> Float",
        "key.parsed_scope.end" : 112,
        "key.parsed_scope.start" : 110,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1moiyA2B_ABtFZ\">* (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGAE_SdtFZ\">* (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGSd_AEtFZ\">* (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1moiyA2C_ACtFZ\">* (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 2540
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2537,
            "key.offset" : 2537,
            "key.parsed_declaration" : "public func * <T: FloatWrapping>(lhs: Float, rhs: T) -> Float",
            "key.parsed_scope.end" : 110,
            "key.parsed_scope.start" : 110,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (Float, T) -> Float",
        "key.typeusr" : "$SyS2f_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(dividend: <Type usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, divisor: <Type usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2616
          }
        ],
        "key.bodylength" : 60,
        "key.bodyoffset" : 2680,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>dividend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>divisor<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 118,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 45,
        "key.nameoffset" : 2628,
        "key.offset" : 2623,
        "key.parsed_declaration" : "public func \/ <T: FloatWrapping>(dividend: T, divisor: T) -> T",
        "key.parsed_scope.end" : 116,
        "key.parsed_scope.start" : 114,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1doiyA2B_ABtFZ\">\/ (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGAE_SdtFZ\">\/ (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGSd_AEtFZ\">\/ (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1doiyA2C_ACtFZ\">\/ (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 2634
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2631,
            "key.offset" : 2631,
            "key.parsed_declaration" : "public func \/ <T: FloatWrapping>(dividend: T, divisor: T) -> T",
            "key.parsed_scope.end" : 114,
            "key.parsed_scope.start" : 114,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(dividend: <Type usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, divisor: <Type usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2743
          }
        ],
        "key.bodylength" : 43,
        "key.bodyoffset" : 2811,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>dividend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>divisor<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 105,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 45,
        "key.nameoffset" : 2755,
        "key.offset" : 2750,
        "key.parsed_declaration" : "public func \/ <T: FloatWrapping>(dividend: T, divisor: T) -> Float",
        "key.parsed_scope.end" : 120,
        "key.parsed_scope.start" : 118,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1doiyA2B_ABtFZ\">\/ (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGAE_SdtFZ\">\/ (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGSd_AEtFZ\">\/ (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1doiyA2C_ACtFZ\">\/ (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 2761
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2758,
            "key.offset" : 2758,
            "key.parsed_declaration" : "public func \/ <T: FloatWrapping>(dividend: T, divisor: T) -> Float",
            "key.parsed_scope.end" : 118,
            "key.parsed_scope.start" : 118,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, T) -> Float",
        "key.typeusr" : "$SySfx_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Sf\">Float<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2857
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2920,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 85,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 2869,
        "key.offset" : 2864,
        "key.parsed_declaration" : "public func \/ <T: FloatWrapping>(lhs: T, rhs: Float) -> Float",
        "key.parsed_scope.end" : 124,
        "key.parsed_scope.start" : 122,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1doiyA2B_ABtFZ\">\/ (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGAE_SdtFZ\">\/ (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGSd_AEtFZ\">\/ (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1doiyA2C_ACtFZ\">\/ (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 2875
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2872,
            "key.offset" : 2872,
            "key.parsed_declaration" : "public func \/ <T: FloatWrapping>(lhs: T, rhs: Float) -> Float",
            "key.parsed_scope.end" : 122,
            "key.parsed_scope.start" : 122,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (T, Float) -> Float",
        "key.typeusr" : "$SySfx_Sftc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(lhs: <Type usr=\"s:Sf\">Float<\/Type>, rhs: <Type usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sf\">Float<\/Type> where T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2951
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 3014,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 85,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 2963,
        "key.offset" : 2958,
        "key.parsed_declaration" : "public func \/ <T: FloatWrapping>(lhs: Float, rhs: T) -> Float",
        "key.parsed_scope.end" : 128,
        "key.parsed_scope.start" : 126,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1doiyA2B_ABtFZ\">\/ (_: Decimal, _: Decimal) -&gt; Decimal<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGAE_SdtFZ\">\/ (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGSd_AEtFZ\">\/ (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1doiyA2C_ACtFZ\">\/ (_: CGFloat, _: CGFloat) -&gt; CGFloat<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 13,
                "key.offset" : 2969
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/FloatWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures13FloatWrappingP\">FloatWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "FloatWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 16,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2966,
            "key.offset" : 2966,
            "key.parsed_declaration" : "public func \/ <T: FloatWrapping>(lhs: Float, rhs: T) -> Float",
            "key.parsed_scope.end" : 126,
            "key.parsed_scope.start" : 126,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : FloatWrapping> (Float, T) -> Float",
        "key.typeusr" : "$SyS2f_xtc14DataStructures13FloatWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2832,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol IntegerWrapping : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 137
          }
        ],
        "key.bodylength" : 60,
        "key.bodyoffset" : 221,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 27,
            "key.offset" : 170
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 199
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 209
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>IntegerWrapping<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ExpressibleByIntegerLiteral"
          },
          {
            "key.name" : "Hashable"
          },
          {
            "key.name" : "Comparable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 138,
        "key.name" : "IntegerWrapping",
        "key.namelength" : 15,
        "key.nameoffset" : 153,
        "key.offset" : 144,
        "key.parsed_declaration" : "public protocol IntegerWrapping: ExpressibleByIntegerLiteral, Hashable, Comparable",
        "key.parsed_scope.end" : 14,
        "key.parsed_scope.start" : 9,
        "key.runtime_name" : "_TtP15IntegerWrapping15IntegerWrapping_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var value: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 243,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "value",
            "key.namelength" : 5,
            "key.nameoffset" : 231,
            "key.offset" : 227,
            "key.parsed_declaration" : "var value: Int",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures15IntegerWrappingP5valueSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init(integerLiteral: <Type usr=\"s:Si\">Int<\/Type>)<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>integerLiteral<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 25,
            "key.name" : "init(integerLiteral:)",
            "key.namelength" : 25,
            "key.nameoffset" : 255,
            "key.offset" : 255,
            "key.parsed_declaration" : "init(integerLiteral: Int)",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc\">init(integerLiteral: Self.IntegerLiteralType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc\">convenience init(integerLiteral: Self)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : IntegerWrapping> (Self.Type) -> (Int) -> Self",
            "key.typeusr" : "$S14integerLiteralxSi_tcD",
            "key.usr" : "s:14DataStructures15IntegerWrappingP14integerLiteralxSi_tcfc"
          }
        ],
        "key.typename" : "IntegerWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures15IntegerWrapping_pmD",
        "key.usr" : "s:14DataStructures15IntegerWrappingP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol IntegerWrapping : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 133,
        "key.bodyoffset" : 311,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>IntegerWrapping<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 161,
        "key.name" : "IntegerWrapping",
        "key.namelength" : 15,
        "key.nameoffset" : 294,
        "key.offset" : 284,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 19,
            "key.name" : "MARK: - `Equatable`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 320
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func == (lhs: <Type usr=\"s:14DataStructures15IntegerWrappingPAAE4Selfxmfp\">Self<\/Type>, rhs: <Type usr=\"s:14DataStructures15IntegerWrappingPAAE4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 345
              }
            ],
            "key.bodylength" : 43,
            "key.bodyoffset" : 399,
            "key.doc.declaration" : "static func == (lhs: Self, rhs: Self) -> Bool",
            "key.doc.discussion" : [
              {
                "Para" : "Equality is the inverse of inequality. For any values `a` and `b`, `a == b` implies that `a != b` is `false`."
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>==(_:_:)<\/Name><USR>s:SQ2eeoiySbx_xtFZ<\/USR><Declaration>static func == (lhs: Self, rhs: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are equal.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A value to compare.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another value to compare.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Equality is the inverse of inequality. For any values <codeVoice>a<\/codeVoice> and <codeVoice>b<\/codeVoice>, <codeVoice>a == b<\/codeVoice> implies that <codeVoice>a != b<\/codeVoice> is <codeVoice>false<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "==(_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A value to compare."
                  }
                ],
                "name" : "lhs"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Another value to compare."
                  }
                ],
                "name" : "rhs"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures15IntegerWrappingPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures15IntegerWrappingPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 91,
            "key.name" : "==(_:_:)",
            "key.namelength" : 25,
            "key.nameoffset" : 364,
            "key.offset" : 352,
            "key.parsed_declaration" : "public static func == (lhs: Self, rhs: Self) -> Bool",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 20,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : IntegerWrapping> (Self.Type) -> (Self, Self) -> Bool",
            "key.typeusr" : "$SySbx_xtcD",
            "key.usr" : "s:SQ2eeoiySbx_xtFZ"
          }
        ],
        "key.typename" : "IntegerWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures15IntegerWrapping_pmD",
        "key.usr" : "s:14DataStructures15IntegerWrappingP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol IntegerWrapping : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 132,
        "key.bodyoffset" : 474,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>IntegerWrapping<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 160,
        "key.name" : "IntegerWrapping",
        "key.namelength" : 15,
        "key.nameoffset" : 457,
        "key.offset" : 447,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - `Comparable`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 483
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func &lt; (lhs: <Type usr=\"s:14DataStructures15IntegerWrappingPAAE4Selfxmfp\">Self<\/Type>, rhs: <Type usr=\"s:14DataStructures15IntegerWrappingPAAE4Selfxmfp\">Self<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 509
              }
            ],
            "key.bodylength" : 42,
            "key.bodyoffset" : 562,
            "key.doc.declaration" : "static func < (lhs: Self, rhs: Self) -> Bool",
            "key.doc.discussion" : [
              {
                "Para" : "This function is the only requirement of the `Comparable` protocol. The remainder of the relational operator functions are implemented by the standard library for any type that conforms to `Comparable`."
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>&lt;(_:_:)<\/Name><USR>s:SL1loiySbx_xtFZ<\/USR><Declaration>static func &lt; (lhs: Self, rhs: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether the value of the first argument is less than that of the second argument.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A value to compare.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another value to compare.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This function is the only requirement of the <codeVoice>Comparable<\/codeVoice> protocol. The remainder of the relational operator functions are implemented by the standard library for any type that conforms to <codeVoice>Comparable<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "<(_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A value to compare."
                  }
                ],
                "name" : "lhs"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Another value to compare."
                  }
                ],
                "name" : "rhs"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures15IntegerWrappingPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures15IntegerWrappingPAAE4Selfxmfp\">Self<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 89,
            "key.name" : "<(_:_:)",
            "key.namelength" : 24,
            "key.nameoffset" : 528,
            "key.offset" : 516,
            "key.parsed_declaration" : "public static func < (lhs: Self, rhs: Self) -> Bool",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 29,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV1loiySbAD_ADtFZ\">&lt; (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;R&gt;(_: Self, _: R) -&gt; Bool where R : StringProtocol<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyxq__G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sp1loiySbSpyxG_ABtFZ\">&lt; (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SP1loiySbSPyxG_ABtFZ\">&lt; (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sv1loiySbSv_SvtFZ\">&lt; (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SV1loiySbSV_SVtFZ\">&lt; (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE1loiySbAB_ABtFZ\">&lt; (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : IntegerWrapping> (Self.Type) -> (Self, Self) -> Bool",
            "key.typeusr" : "$SySbx_xtcD",
            "key.usr" : "s:SL1loiySbx_xtFZ"
          }
        ],
        "key.typename" : "IntegerWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures15IntegerWrapping_pmD",
        "key.usr" : "s:14DataStructures15IntegerWrappingP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol IntegerWrapping : <Type usr=\"s:SL\">Comparable<\/Type>, <Type usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 98,
        "key.bodyoffset" : 636,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>IntegerWrapping<\/decl.name> : <ref.protocol usr=\"s:SL\">Comparable<\/ref.protocol>, <ref.protocol usr=\"s:s27ExpressibleByIntegerLiteralP\">ExpressibleByIntegerLiteral<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 126,
        "key.name" : "IntegerWrapping",
        "key.namelength" : 15,
        "key.nameoffset" : 619,
        "key.offset" : 609,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: - `Hashable`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 645
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var hashValue: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 669
              }
            ],
            "key.bodylength" : 36,
            "key.bodyoffset" : 696,
            "key.doc.declaration" : "var hashValue: Int { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Hash values are not guaranteed to be equal across different executions of your program. Do not save hash values to use during a future execution."
              }
            ],
            "key.doc.full_as_xml" : "<Other><Name>hashValue<\/Name><USR>s:SH9hashValueSivp<\/USR><Declaration>var hashValue: Int { get }<\/Declaration><CommentParts><Abstract><Para>The hash value.<\/Para><\/Abstract><Discussion><Para>Hash values are not guaranteed to be equal across different executions of your program. Do not save hash values to use during a future execution.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.name" : "hashValue",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hashValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 57,
            "key.name" : "hashValue",
            "key.namelength" : 9,
            "key.nameoffset" : 680,
            "key.offset" : 676,
            "key.parsed_declaration" : "public var hashValue: Int",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 38,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SH9hashValueSivp\">hashValue<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:SH9hashValueSivp"
          }
        ],
        "key.typename" : "IntegerWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures15IntegerWrapping_pmD",
        "key.usr" : "s:14DataStructures15IntegerWrappingP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func == &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 737
          }
        ],
        "key.bodylength" : 29,
        "key.bodyoffset" : 800,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 86,
        "key.name" : "==(_:_:)",
        "key.namelength" : 41,
        "key.nameoffset" : 749,
        "key.offset" : 744,
        "key.parsed_declaration" : "public func == <T: IntegerWrapping>(lhs: T, rhs: Int) -> Bool",
        "key.parsed_scope.end" : 45,
        "key.parsed_scope.start" : 43,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 756
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 753,
            "key.offset" : 753,
            "key.parsed_declaration" : "public func == <T: IntegerWrapping>(lhs: T, rhs: Int) -> Bool",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 43,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, Int) -> Bool",
        "key.typeusr" : "$SySbx_Sitc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func == &lt;T&gt;(lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 832
          }
        ],
        "key.bodylength" : 29,
        "key.bodyoffset" : 895,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>== <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 86,
        "key.name" : "==(_:_:)",
        "key.namelength" : 41,
        "key.nameoffset" : 844,
        "key.offset" : 839,
        "key.parsed_declaration" : "public func == <T: IntegerWrapping>(lhs: Int, rhs: T) -> Bool",
        "key.parsed_scope.end" : 49,
        "key.parsed_scope.start" : 47,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures17OrderedDictionaryVAASQR_rlE2eeoiySbACyxq_G_AEtFZ\">== (_: OrderedDictionary, _: OrderedDictionary) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV2eeoiySbACyqd__G_AEtSLRd__lFZ\">== &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; Bool where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbAA16SortedDictionaryVyxq_G_AEtSLRzSHRzSQR_r0_lF\">== &lt;K, V&gt;(_: SortedDictionary&lt;K, V&gt;, _: SortedDictionary&lt;K, V&gt;) -&gt; Bool where K : Comparable, K : Hashable, V : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackVAASQRzlE2eeoiySbACyxG_AEtFZ\">== (_: Stack, _: Stack) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SdtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSd_xtAA14DoubleWrappingRzlF\">== &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SftAA13FloatWrappingRzlF\">== &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbSf_xtAA13FloatWrappingRzlF\">== &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures2eeoiySbx_SitAA15IntegerWrappingRzlF\">== &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;, _: ContiguousArray&lt;ContiguousArray&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;, _: ArraySlice&lt;ArraySlice&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Array&lt;Element&gt;.Element&gt;, _: Array&lt;Array&lt;Element&gt;.Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SA2eeoiySbSAyxG_ABtFZ\">== (_: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;, _: AutoreleasingUnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV2eeoiySbAD_ADtFZ\">== (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Range&lt;Bound&gt;.Bound&gt;, _: Range&lt;Range&lt;Bound&gt;.Bound&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;S&gt;(_: Self, _: S) -&gt; Bool where S : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyxq__G_AFtFZ\">== (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp2eeoiySbSpyxG_ABtFZ\">== (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP2eeoiySbSPyxG_ABtFZ\">== (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv2eeoiySbSv_SvtFZ\">== (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV2eeoiySbSV_SVtFZ\">== (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE2eeoiySbAB_ABtFZ\">== (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 851
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 848,
            "key.offset" : 848,
            "key.parsed_declaration" : "public func == <T: IntegerWrapping>(lhs: Int, rhs: T) -> Bool",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 47,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (Int, T) -> Bool",
        "key.typeusr" : "$SySbSi_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures2eeoiySbSi_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &lt; &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 927
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 989,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 84,
        "key.name" : "<(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 939,
        "key.offset" : 934,
        "key.parsed_declaration" : "public func < <T: IntegerWrapping>(lhs: T, rhs: Int) -> Bool",
        "key.parsed_scope.end" : 53,
        "key.parsed_scope.start" : 51,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: Int, _: T) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV1loiySbAD_ADtFZ\">&lt; (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;R&gt;(_: Self, _: R) -&gt; Bool where R : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyxq__G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp1loiySbSpyxG_ABtFZ\">&lt; (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP1loiySbSPyxG_ABtFZ\">&lt; (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv1loiySbSv_SvtFZ\">&lt; (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV1loiySbSV_SVtFZ\">&lt; (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE1loiySbAB_ABtFZ\">&lt; (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 945
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 942,
            "key.offset" : 942,
            "key.parsed_declaration" : "public func < <T: IntegerWrapping>(lhs: T, rhs: Int) -> Bool",
            "key.parsed_scope.end" : 51,
            "key.parsed_scope.start" : 51,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, Int) -> Bool",
        "key.typeusr" : "$SySbx_Sitc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func &lt; &lt;T&gt;(lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1020
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1082,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 84,
        "key.name" : "<(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 1032,
        "key.offset" : 1027,
        "key.parsed_declaration" : "public func < <T: IntegerWrapping>(lhs: Int, rhs: T) -> Bool",
        "key.parsed_scope.end" : 57,
        "key.parsed_scope.start" : 55,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SdtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Double) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSd_xtAA14DoubleWrappingRzlF\">&lt; &lt;T&gt;(_: Double, _: T) -&gt; Bool where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SftAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Float) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbSf_xtAA13FloatWrappingRzlF\">&lt; &lt;T&gt;(_: Float, _: T) -&gt; Bool where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures15IntegerWrappingPAAE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1loiySbx_SitAA15IntegerWrappingRzlF\">&lt; &lt;T&gt;(_: T, _: Int) -&gt; Bool where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SJ17UnicodeScalarViewV5IndexV1loiySbAD_ADtFZ\">&lt; (_: Character.UnicodeScalarView.Index, _: Character.UnicodeScalarView.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyDropWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyDropWhileCollection&lt;Base&gt;.Index, _: LazyDropWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s17FlattenCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s25LazyPrefixWhileCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;R&gt;(_: Self, _: R) -&gt; Bool where R : StringProtocol<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyxq__G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Storage, Element&gt;.Index, _: _UIntBuffer&lt;Storage, Element&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sp1loiySbSpyxG_ABtFZ\">&lt; (_: UnsafeMutablePointer&lt;Pointee&gt;, _: UnsafeMutablePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SP1loiySbSPyxG_ABtFZ\">&lt; (_: UnsafePointer&lt;Pointee&gt;, _: UnsafePointer&lt;Pointee&gt;) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sv1loiySbSv_SvtFZ\">&lt; (_: UnsafeMutableRawPointer, _: UnsafeMutableRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SV1loiySbSV_SVtFZ\">&lt; (_: UnsafeRawPointer, _: UnsafeRawPointer) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _ValidUTF8Buffer&lt;Storage&gt;.Index, _: _ValidUTF8Buffer&lt;Storage&gt;.Index) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:So30_SwiftNSOperatingSystemVersionasE1loiySbAB_ABtFZ\">&lt; (_: _SwiftNSOperatingSystemVersion, _: _SwiftNSOperatingSystemVersion) -&gt; Bool<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 1038
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1035,
            "key.offset" : 1035,
            "key.parsed_declaration" : "public func < <T: IntegerWrapping>(lhs: Int, rhs: T) -> Bool",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 55,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (Int, T) -> Bool",
        "key.typeusr" : "$SySbSi_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1loiySbSi_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 12,
        "key.name" : "MARK: - Math",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1116
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1129
          }
        ],
        "key.bodylength" : 59,
        "key.bodyoffset" : 1192,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 116,
        "key.name" : "+(_:_:)",
        "key.namelength" : 44,
        "key.nameoffset" : 1141,
        "key.offset" : 1136,
        "key.parsed_declaration" : "public func + <T: IntegerWrapping>(augend: T, addend: T) -> T",
        "key.parsed_scope.end" : 62,
        "key.parsed_scope.start" : 60,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 1147
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1144,
            "key.offset" : 1144,
            "key.parsed_declaration" : "public func + <T: IntegerWrapping>(augend: T, addend: T) -> T",
            "key.parsed_scope.end" : 60,
            "key.parsed_scope.start" : 60,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1254
          }
        ],
        "key.bodylength" : 40,
        "key.bodyoffset" : 1319,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 99,
        "key.name" : "+(_:_:)",
        "key.namelength" : 44,
        "key.nameoffset" : 1266,
        "key.offset" : 1261,
        "key.parsed_declaration" : "public func + <T: IntegerWrapping>(augend: T, addend: T) -> Int",
        "key.parsed_scope.end" : 66,
        "key.parsed_scope.start" : 64,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 1272
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1269,
            "key.offset" : 1269,
            "key.parsed_declaration" : "public func + <T: IntegerWrapping>(augend: T, addend: T) -> Int",
            "key.parsed_scope.end" : 64,
            "key.parsed_scope.start" : 64,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, T) -> Int",
        "key.typeusr" : "$SySix_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1362
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1423,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 83,
        "key.name" : "+(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 1374,
        "key.offset" : 1369,
        "key.parsed_declaration" : "public func + <T: IntegerWrapping>(lhs: T, rhs: Int) -> Int",
        "key.parsed_scope.end" : 70,
        "key.parsed_scope.start" : 68,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 1380
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1377,
            "key.offset" : 1377,
            "key.parsed_declaration" : "public func + <T: IntegerWrapping>(lhs: T, rhs: Int) -> Int",
            "key.parsed_scope.end" : 68,
            "key.parsed_scope.start" : 68,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, Int) -> Int",
        "key.typeusr" : "$SySix_Sitc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func + &lt;T&gt;(lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1454
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1515,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>+ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 83,
        "key.name" : "+(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 1466,
        "key.offset" : 1461,
        "key.parsed_declaration" : "public func + <T: IntegerWrapping>(lhs: Int, rhs: T) -> Int",
        "key.parsed_scope.end" : 74,
        "key.parsed_scope.start" : 72,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGAC_xSgtFZ\">+ (_: Array, _: Element?) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sa14DataStructuresE1poiySayxGx_ACtFZ\">+ (_: Element, _: Array) -&gt; Array<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SN14DataStructuresE1poiySNyxGAC_ACtFZ\">+ (_: ClosedRange, _: ClosedRange) -&gt; ClosedRange<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGAC_xSgtFZ\">+ (_: Set, _: Element?) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sh14DataStructuresE1poiyShyxGxSg_ACtFZ\">+ (_: Element?, _: Set) -&gt; Set<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures11SortedArrayV1poiyACyqd__GAE_AEtSLRd__lFZ\">+ &lt;T&gt;(_: SortedArray&lt;T&gt;, _: SortedArray&lt;T&gt;) -&gt; SortedArray&lt;T&gt; where T : Comparable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyAA16SortedDictionaryVyxq_GAE_AEtSLRzSHRzSLR_SHR_r0_lF\">+ &lt;Value, Key&gt;(_: SortedDictionary&lt;Value, Key&gt;, _: SortedDictionary&lt;Value, Key&gt;) -&gt; SortedDictionary&lt;Value, Key&gt; where Value : Comparable, Value : Hashable, Key : Comparable, Key : Hashable<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures5StackV1poiyACyxGAE_AEtFZ\">+ (_: Stack, _: Stack) -&gt; Stack<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySdx_SdtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2d_xtAA14DoubleWrappingRzlF\">+ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySfx_SftAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyS2f_xtAA13FloatWrappingRzlF\">+ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiyxx_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_xtAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1poiySix_SitAA15IntegerWrappingRzlF\">+ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1poiyA2B_ABtFZ\">+ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 1472
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1469,
            "key.offset" : 1469,
            "key.parsed_declaration" : "public func + <T: IntegerWrapping>(lhs: Int, rhs: T) -> Int",
            "key.parsed_scope.end" : 72,
            "key.parsed_scope.start" : 72,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (Int, T) -> Int",
        "key.typeusr" : "$SyS2i_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1poiyS2i_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1546
          }
        ],
        "key.bodylength" : 59,
        "key.bodyoffset" : 1609,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 116,
        "key.name" : "-(_:_:)",
        "key.namelength" : 44,
        "key.nameoffset" : 1558,
        "key.offset" : 1553,
        "key.parsed_declaration" : "public func - <T: IntegerWrapping>(augend: T, addend: T) -> T",
        "key.parsed_scope.end" : 78,
        "key.parsed_scope.start" : 76,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 1564
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1561,
            "key.offset" : 1561,
            "key.parsed_declaration" : "public func - <T: IntegerWrapping>(augend: T, addend: T) -> T",
            "key.parsed_scope.end" : 76,
            "key.parsed_scope.start" : 76,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(minuend: <Type usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, subtrahend: <Type usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1671
          }
        ],
        "key.bodylength" : 45,
        "key.bodyoffset" : 1741,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>minuend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>subtrahend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 109,
        "key.name" : "-(_:_:)",
        "key.namelength" : 49,
        "key.nameoffset" : 1683,
        "key.offset" : 1678,
        "key.parsed_declaration" : "public func - <T: IntegerWrapping>(minuend: T, subtrahend: T) -> Int",
        "key.parsed_scope.end" : 82,
        "key.parsed_scope.start" : 80,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 1689
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1686,
            "key.offset" : 1686,
            "key.parsed_declaration" : "public func - <T: IntegerWrapping>(minuend: T, subtrahend: T) -> Int",
            "key.parsed_scope.end" : 80,
            "key.parsed_scope.start" : 80,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, T) -> Int",
        "key.typeusr" : "$SySix_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1789
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1850,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 83,
        "key.name" : "-(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 1801,
        "key.offset" : 1796,
        "key.parsed_declaration" : "public func - <T: IntegerWrapping>(lhs: T, rhs: Int) -> Int",
        "key.parsed_scope.end" : 86,
        "key.parsed_scope.start" : 84,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 1807
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1804,
            "key.offset" : 1804,
            "key.parsed_declaration" : "public func - <T: IntegerWrapping>(lhs: T, rhs: Int) -> Int",
            "key.parsed_scope.end" : 84,
            "key.parsed_scope.start" : 84,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, Int) -> Int",
        "key.typeusr" : "$SySix_Sitc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func - &lt;T&gt;(lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1881
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 1942,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>- <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 83,
        "key.name" : "-(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 1893,
        "key.offset" : 1888,
        "key.parsed_declaration" : "public func - <T: IntegerWrapping>(lhs: Int, rhs: T) -> Int",
        "key.parsed_scope.end" : 90,
        "key.parsed_scope.start" : 88,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySdx_SdtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2d_xtAA14DoubleWrappingRzlF\">- &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySfx_SftAA13FloatWrappingRzlF\">- &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyS2f_xtAA13FloatWrappingRzlF\">- &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiyxx_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_xtAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1soiySix_SitAA15IntegerWrappingRzlF\">- &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1sopyA2BFZ\">- (_: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1soiyA2B_ABtFZ\">- (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideSxQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideSxQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 1899
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1896,
            "key.offset" : 1896,
            "key.parsed_declaration" : "public func - <T: IntegerWrapping>(lhs: Int, rhs: T) -> Int",
            "key.parsed_scope.end" : 88,
            "key.parsed_scope.start" : 88,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (Int, T) -> Int",
        "key.typeusr" : "$SyS2i_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1soiyS2i_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1973
          }
        ],
        "key.bodylength" : 59,
        "key.bodyoffset" : 2036,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 116,
        "key.name" : "*(_:_:)",
        "key.namelength" : 44,
        "key.nameoffset" : 1985,
        "key.offset" : 1980,
        "key.parsed_declaration" : "public func * <T: IntegerWrapping>(augend: T, addend: T) -> T",
        "key.parsed_scope.end" : 94,
        "key.parsed_scope.start" : 92,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 1991
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 1988,
            "key.offset" : 1988,
            "key.parsed_declaration" : "public func * <T: IntegerWrapping>(augend: T, addend: T) -> T",
            "key.parsed_scope.end" : 92,
            "key.parsed_scope.start" : 92,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(multiplicand: <Type usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, multiplier: <Type usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2098
          }
        ],
        "key.bodylength" : 50,
        "key.bodyoffset" : 2173,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>multiplicand<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>multiplier<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 119,
        "key.name" : "*(_:_:)",
        "key.namelength" : 54,
        "key.nameoffset" : 2110,
        "key.offset" : 2105,
        "key.parsed_declaration" : "public func * <T: IntegerWrapping>(multiplicand: T, multiplier: T) -> Int",
        "key.parsed_scope.end" : 98,
        "key.parsed_scope.start" : 96,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 2116
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2113,
            "key.offset" : 2113,
            "key.parsed_declaration" : "public func * <T: IntegerWrapping>(multiplicand: T, multiplier: T) -> Int",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 96,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, T) -> Int",
        "key.typeusr" : "$SySix_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2226
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2287,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 83,
        "key.name" : "*(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 2238,
        "key.offset" : 2233,
        "key.parsed_declaration" : "public func * <T: IntegerWrapping>(lhs: T, rhs: Int) -> Int",
        "key.parsed_scope.end" : 102,
        "key.parsed_scope.start" : 100,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 2244
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2241,
            "key.offset" : 2241,
            "key.parsed_declaration" : "public func * <T: IntegerWrapping>(lhs: T, rhs: Int) -> Int",
            "key.parsed_scope.end" : 100,
            "key.parsed_scope.start" : 100,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, Int) -> Int",
        "key.typeusr" : "$SySix_Sitc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func * &lt;T&gt;(lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2318
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2379,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>* <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 83,
        "key.name" : "*(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 2330,
        "key.offset" : 2325,
        "key.parsed_declaration" : "public func * <T: IntegerWrapping>(lhs: Int, rhs: T) -> Int",
        "key.parsed_scope.end" : 106,
        "key.parsed_scope.start" : 104,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySdx_SdtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2d_xtAA14DoubleWrappingRzlF\">* &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySfx_SftAA13FloatWrappingRzlF\">* &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyS2f_xtAA13FloatWrappingRzlF\">* &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiyxx_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_xtAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1moiySix_SitAA15IntegerWrappingRzlF\">* &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1moiyA2B_ABtFZ\">* (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 2336
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2333,
            "key.offset" : 2333,
            "key.parsed_declaration" : "public func * <T: IntegerWrapping>(lhs: Int, rhs: T) -> Int",
            "key.parsed_scope.end" : 104,
            "key.parsed_scope.start" : 104,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (Int, T) -> Int",
        "key.typeusr" : "$SyS2i_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1moiyS2i_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(augend: <Type usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, addend: <Type usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2410
          }
        ],
        "key.bodylength" : 59,
        "key.bodyoffset" : 2473,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>augend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>addend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 116,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 44,
        "key.nameoffset" : 2422,
        "key.offset" : 2417,
        "key.parsed_declaration" : "public func \/ <T: IntegerWrapping>(augend: T, addend: T) -> T",
        "key.parsed_scope.end" : 110,
        "key.parsed_scope.start" : 108,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 2428
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2425,
            "key.offset" : 2425,
            "key.parsed_declaration" : "public func \/ <T: IntegerWrapping>(augend: T, addend: T) -> T",
            "key.parsed_scope.end" : 108,
            "key.parsed_scope.start" : 108,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, T) -> T",
        "key.typeusr" : "$Syxx_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(dividend: <Type usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, divisor: <Type usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2535
          }
        ],
        "key.bodylength" : 43,
        "key.bodyoffset" : 2603,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>dividend<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>divisor<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 105,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 47,
        "key.nameoffset" : 2547,
        "key.offset" : 2542,
        "key.parsed_declaration" : "public func \/ <T: IntegerWrapping>(dividend: T, divisor: T) -> Int",
        "key.parsed_scope.end" : 114,
        "key.parsed_scope.start" : 112,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 2553
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2550,
            "key.offset" : 2550,
            "key.parsed_declaration" : "public func \/ <T: IntegerWrapping>(dividend: T, divisor: T) -> Int",
            "key.parsed_scope.end" : 112,
            "key.parsed_scope.start" : 112,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, T) -> Int",
        "key.typeusr" : "$SySix_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(lhs: <Type usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>, rhs: <Type usr=\"s:Si\">Int<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2649
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2710,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 83,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 2661,
        "key.offset" : 2656,
        "key.parsed_declaration" : "public func \/ <T: IntegerWrapping>(lhs: T, rhs: Int) -> Int",
        "key.parsed_scope.end" : 118,
        "key.parsed_scope.start" : 116,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: Int, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 2667
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2664,
            "key.offset" : 2664,
            "key.parsed_declaration" : "public func \/ <T: IntegerWrapping>(lhs: T, rhs: Int) -> Int",
            "key.parsed_scope.end" : 116,
            "key.parsed_scope.start" : 116,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (T, Int) -> Int",
        "key.typeusr" : "$SySix_Sitc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func \/ &lt;T&gt;(lhs: <Type usr=\"s:Si\">Int<\/Type>, rhs: <Type usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/Type>) -&gt; <Type usr=\"s:Si\">Int<\/Type> where T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2741
          }
        ],
        "key.bodylength" : 28,
        "key.bodyoffset" : 2802,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
        "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>\/ <\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.operator.infix>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 83,
        "key.name" : "\/(_:_:)",
        "key.namelength" : 40,
        "key.nameoffset" : 2753,
        "key.offset" : 2748,
        "key.parsed_declaration" : "public func \/ <T: IntegerWrapping>(lhs: Int, rhs: T) -> Int",
        "key.parsed_scope.end" : 122,
        "key.parsed_scope.start" : 120,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySdx_SdtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Double) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2d_xtAA14DoubleWrappingRzlF\">\/ &lt;T&gt;(_: Double, _: T) -&gt; Double where T : DoubleWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySfx_SftAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Float) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyS2f_xtAA13FloatWrappingRzlF\">\/ &lt;T&gt;(_: Float, _: T) -&gt; Float where T : FloatWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiyxx_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; T where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_xtAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: T) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures1doiySix_SitAA15IntegerWrappingRzlF\">\/ &lt;T&gt;(_: T, _: Int) -&gt; Int where T : IntegerWrapping<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">\/ (_: Float, _: Float) -&gt; Float<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">\/ (_: Double, _: Double) -&gt; Double<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s7Float80V1doiyA2B_ABtFZ\">\/ (_: Float80, _: Float80) -&gt; Float80<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">\/ (_: Self, _: Self) -&gt; Self<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">\/ (_: UInt8, _: UInt8) -&gt; UInt8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">\/ (_: Int8, _: Int8) -&gt; Int8<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">\/ (_: UInt16, _: UInt16) -&gt; UInt16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">\/ (_: Int16, _: Int16) -&gt; Int16<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">\/ (_: UInt32, _: UInt32) -&gt; UInt32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">\/ (_: Int32, _: Int32) -&gt; Int32<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">\/ (_: UInt64, _: UInt64) -&gt; UInt64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">\/ (_: Int64, _: Int64) -&gt; Int64<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">\/ (_: UInt, _: UInt) -&gt; UInt<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">\/ (_: Int, _: Int) -&gt; Int<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 15,
                "key.offset" : 2759
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/IntegerWrapping.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14DataStructures15IntegerWrappingP\">IntegerWrapping<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "IntegerWrapping"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 18,
            "key.name" : "T",
            "key.namelength" : 1,
            "key.nameoffset" : 2756,
            "key.offset" : 2756,
            "key.parsed_declaration" : "public func \/ <T: IntegerWrapping>(lhs: Int, rhs: T) -> Int",
            "key.parsed_scope.end" : 120,
            "key.parsed_scope.start" : 120,
            "key.typename" : "T.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF1TL_xmfp"
          }
        ],
        "key.typename" : "<T where T : IntegerWrapping> (Int, T) -> Int",
        "key.typeusr" : "$SyS2i_xtc14DataStructures15IntegerWrappingRzluD",
        "key.usr" : "s:14DataStructures1doiyS2i_xtAA15IntegerWrappingRzlF"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2375,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol RandomAccessCollectionWrapping : <Type usr=\"s:Sk\">RandomAccessCollection<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 375
          }
        ],
        "key.bodylength" : 263,
        "key.bodyoffset" : 447,
        "key.doc.column" : 17,
        "key.doc.comment" : "Interface for wrapping any `RandomAccessCollection` type. The `RandomAccessCollection` interface\nis exposed, regardless of the concrete implementation of the wrapped type.\n\nThe performance guarantees made by the `RandomAccessCollection` are sustained.",
        "key.doc.declaration" : "public protocol RandomAccessCollectionWrapping : RandomAccessCollection",
        "key.doc.discussion" : [
          {
            "Para" : "The performance guarantees made by the `RandomAccessCollection` are sustained."
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"13\" column=\"17\"><Name>RandomAccessCollectionWrapping<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingP<\/USR><Declaration>public protocol RandomAccessCollectionWrapping : RandomAccessCollection<\/Declaration><CommentParts><Abstract><Para>Interface for wrapping any <codeVoice>RandomAccessCollection<\/codeVoice> type. The <codeVoice>RandomAccessCollection<\/codeVoice> interface is exposed, regardless of the concrete implementation of the wrapped type.<\/Para><\/Abstract><Discussion><Para>The performance guarantees made by the <codeVoice>RandomAccessCollection<\/codeVoice> are sustained.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 13,
        "key.doc.name" : "RandomAccessCollectionWrapping",
        "key.doc.type" : "Class",
        "key.doclength" : 267,
        "key.docoffset" : 108,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 22,
            "key.offset" : 423
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>RandomAccessCollectionWrapping<\/decl.name> : <ref.protocol usr=\"s:Sk\">RandomAccessCollection<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "RandomAccessCollection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 329,
        "key.name" : "RandomAccessCollectionWrapping",
        "key.namelength" : 30,
        "key.nameoffset" : 391,
        "key.offset" : 382,
        "key.parsed_declaration" : "public protocol RandomAccessCollectionWrapping: RandomAccessCollection",
        "key.parsed_scope.end" : 24,
        "key.parsed_scope.start" : 13,
        "key.runtime_name" : "_TtP30RandomAccessCollectionWrapping30RandomAccessCollectionWrapping_",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 24,
            "key.name" : "MARK: - Associated Types",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 456
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype Base : <Type usr=\"s:Sk\">RandomAccessCollection<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.comment" : "Wrapped `RandomAccessCollection`-conforming type.",
            "key.doc.declaration" : "associatedtype Base : RandomAccessCollection",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"18\" column=\"20\"><Name>Base<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa<\/USR><Declaration>associatedtype Base : RandomAccessCollection<\/Declaration><CommentParts><Abstract><Para>Wrapped <codeVoice>RandomAccessCollection<\/codeVoice>-conforming type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 18,
            "key.doc.name" : "Base",
            "key.doc.type" : "Other",
            "key.doclength" : 54,
            "key.docoffset" : 486,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>Base<\/decl.name> : <ref.protocol usr=\"s:Sk\">RandomAccessCollection<\/ref.protocol><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 43,
            "key.name" : "Base",
            "key.namelength" : 4,
            "key.nameoffset" : 559,
            "key.offset" : 544,
            "key.parsed_declaration" : "associatedtype Base: RandomAccessCollection",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.typename" : "Self.Base.Type",
            "key.typeusr" : "$S4Base14DataStructures30RandomAccessCollectionWrappingPQzmD",
            "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 596
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var base: <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 703,
            "key.doc.column" : 9,
            "key.doc.comment" : "Wrapped `RandomAccessCollection`-conforming type.",
            "key.doc.declaration" : "var base: Base { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"23\" column=\"9\"><Name>base<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingP4base4BaseQzvp<\/USR><Declaration>var base: Base { get }<\/Declaration><CommentParts><Abstract><Para>Wrapped <codeVoice>RandomAccessCollection<\/codeVoice>-conforming type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 23,
            "key.doc.name" : "base",
            "key.doc.type" : "Other",
            "key.doclength" : 54,
            "key.docoffset" : 629,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>base<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "base",
            "key.namelength" : 4,
            "key.nameoffset" : 691,
            "key.offset" : 687,
            "key.parsed_declaration" : "var base: Base",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.typename" : "Self.Base",
            "key.typeusr" : "$S4Base14DataStructures30RandomAccessCollectionWrappingPQzD",
            "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingP4base4BaseQzvp"
          }
        ],
        "key.typename" : "RandomAccessCollectionWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures30RandomAccessCollectionWrapping_pmD",
        "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol RandomAccessCollectionWrapping : <Type usr=\"s:Sk\">RandomAccessCollection<\/Type><\/Declaration>",
        "key.bodylength" : 1618,
        "key.bodyoffset" : 755,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol RandomAccessCollectionWrapping : RandomAccessCollection",
        "key.doc.discussion" : [
          {
            "Para" : "The performance guarantees made by the `RandomAccessCollection` are sustained."
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"13\" column=\"17\"><Name>RandomAccessCollectionWrapping<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingP<\/USR><Declaration>public protocol RandomAccessCollectionWrapping : RandomAccessCollection<\/Declaration><CommentParts><Abstract><Para>Interface for wrapping any <codeVoice>RandomAccessCollection<\/codeVoice> type. The <codeVoice>RandomAccessCollection<\/codeVoice> interface is exposed, regardless of the concrete implementation of the wrapped type.<\/Para><\/Abstract><Discussion><Para>The performance guarantees made by the <codeVoice>RandomAccessCollection<\/codeVoice> are sustained.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 13,
        "key.doc.name" : "RandomAccessCollectionWrapping",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>RandomAccessCollectionWrapping<\/decl.name> : <ref.protocol usr=\"s:Sk\">RandomAccessCollection<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1661,
        "key.name" : "RandomAccessCollectionWrapping",
        "key.namelength" : 30,
        "key.nameoffset" : 723,
        "key.offset" : 713,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 30,
            "key.name" : "MARK: - RandomAccessCollection",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 764
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var startIndex: <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sk5IndexQa\">Index<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 864
              }
            ],
            "key.bodylength" : 36,
            "key.bodyoffset" : 899,
            "key.doc.column" : 16,
            "key.doc.comment" : "Start index.\n\n- Complexity: O(1)",
            "key.doc.declaration" : "public var startIndex: Base.Index { get }",
            "key.doc.discussion" : [
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"34\" column=\"16\"><Name>startIndex<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingPAAE10startIndex4Base_0H0QZvp<\/USR><Declaration>public var startIndex: Base.Index { get }<\/Declaration><CommentParts><Abstract><Para>Start index.<\/Para><\/Abstract><Discussion><Complexity><Para>O(1)<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 34,
            "key.doc.name" : "startIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 60,
            "key.docoffset" : 800,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>startIndex<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sk5IndexQa\">Index<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 65,
            "key.name" : "startIndex",
            "key.namelength" : 10,
            "key.nameoffset" : 875,
            "key.offset" : 871,
            "key.parsed_declaration" : "public var startIndex: Base.Index",
            "key.parsed_scope.end" : 36,
            "key.parsed_scope.start" : 34,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl10startIndex0B0Qzvp\">startIndex<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SK10startIndex0B0Qzvp\">startIndex<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sk10startIndex0B0Qzvp\">startIndex<\/RelatedName>"
              }
            ],
            "key.typename" : "Self.Base.Index",
            "key.typeusr" : "$S4Base14DataStructures30RandomAccessCollectionWrappingP_5IndexSlQZD",
            "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingPAAE10startIndex4Base_0H0QZvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var endIndex: <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sk5IndexQa\">Index<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1004
              }
            ],
            "key.bodylength" : 34,
            "key.bodyoffset" : 1037,
            "key.doc.column" : 16,
            "key.doc.comment" : "End index.\n\n- Complexity: O(1)",
            "key.doc.declaration" : "public var endIndex: Base.Index { get }",
            "key.doc.discussion" : [
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"42\" column=\"16\"><Name>endIndex<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingPAAE8endIndex4Base_0H0QZvp<\/USR><Declaration>public var endIndex: Base.Index { get }<\/Declaration><CommentParts><Abstract><Para>End index.<\/Para><\/Abstract><Discussion><Complexity><Para>O(1)<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 42,
            "key.doc.name" : "endIndex",
            "key.doc.type" : "Other",
            "key.doclength" : 58,
            "key.docoffset" : 942,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>endIndex<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sk5IndexQa\">Index<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 61,
            "key.name" : "endIndex",
            "key.namelength" : 8,
            "key.nameoffset" : 1015,
            "key.offset" : 1011,
            "key.parsed_declaration" : "public var endIndex: Base.Index",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 42,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl8endIndex0B0Qzvp\">endIndex<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SK8endIndex0B0Qzvp\">endIndex<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sk8endIndex0B0Qzvp\">endIndex<\/RelatedName>"
              }
            ],
            "key.typename" : "Self.Base.Index",
            "key.typeusr" : "$S4Base14DataStructures30RandomAccessCollectionWrappingP_5IndexSlQZD",
            "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingPAAE8endIndex4Base_0H0QZvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var first: <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sk7ElementQa\">Element<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1196
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 1229,
            "key.doc.column" : 16,
            "key.doc.comment" : "First element, if there is at least one element. Otherwise, `nil`.\n\n- Complexity: O(1)",
            "key.doc.declaration" : "public var first: Base.Element? { get }",
            "key.doc.discussion" : [
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"50\" column=\"16\"><Name>first<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingPAAE5first4Base_7ElementQZSgvp<\/USR><Declaration>public var first: Base.Element? { get }<\/Declaration><CommentParts><Abstract><Para>First element, if there is at least one element. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/Abstract><Discussion><Complexity><Para>O(1)<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 50,
            "key.doc.name" : "first",
            "key.doc.type" : "Other",
            "key.doclength" : 114,
            "key.docoffset" : 1078,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>first<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sk7ElementQa\">Element<\/ref.associatedtype>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 58,
            "key.name" : "first",
            "key.namelength" : 5,
            "key.nameoffset" : 1207,
            "key.offset" : 1203,
            "key.parsed_declaration" : "public var first: Base.Element?",
            "key.parsed_scope.end" : 52,
            "key.parsed_scope.start" : 50,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:STsE5first5where7ElementQzSgSbADKXE_tKF\">first(where:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl5first7ElementQzSgvp\">first<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5first7ElementQzSgvp\">first<\/RelatedName>"
              }
            ],
            "key.typename" : "Self.Base.Element?",
            "key.typeusr" : "$S4Base14DataStructures30RandomAccessCollectionWrappingP_7ElementSTQZSgD",
            "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingPAAE5first4Base_7ElementQZSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var last: <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sk7ElementQa\">Element<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1384
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 1416,
            "key.doc.column" : 16,
            "key.doc.comment" : "Last element, if there is at least one element. Otherwise, `nil`.\n\n- Complexity: O(1)",
            "key.doc.declaration" : "public var last: Base.Element? { get }",
            "key.doc.discussion" : [
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"58\" column=\"16\"><Name>last<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingPAAE4last4Base_7ElementQZSgvp<\/USR><Declaration>public var last: Base.Element? { get }<\/Declaration><CommentParts><Abstract><Para>Last element, if there is at least one element. Otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/Abstract><Discussion><Complexity><Para>O(1)<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 58,
            "key.doc.name" : "last",
            "key.doc.type" : "Other",
            "key.doclength" : 113,
            "key.docoffset" : 1267,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>last<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sk7ElementQa\">Element<\/ref.associatedtype>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 56,
            "key.name" : "last",
            "key.namelength" : 4,
            "key.nameoffset" : 1395,
            "key.offset" : 1391,
            "key.parsed_declaration" : "public var last: Base.Element?",
            "key.parsed_scope.end" : 60,
            "key.parsed_scope.start" : 58,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SK4last7ElementQzSgvp\">last<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SK14DataStructuresE4last6amount11SubSequenceQzSgSi_tF\">last(amount:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SKsE4last7ElementQzSgvp\">last<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SKsE4last5where7ElementQzSgSbADKXE_tKF\">last(where:)<\/RelatedName>"
              }
            ],
            "key.typename" : "Self.Base.Element?",
            "key.typeusr" : "$S4Base14DataStructures30RandomAccessCollectionWrappingP_7ElementSTQZSgD",
            "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingPAAE4last4Base_7ElementQZSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var count: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1524
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 1547,
            "key.doc.column" : 16,
            "key.doc.comment" : "Amount of elements.\n\n- Complexity: O(1)",
            "key.doc.declaration" : "public var count: Int { get }",
            "key.doc.discussion" : [
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"66\" column=\"16\"><Name>count<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingPAAE5countSivp<\/USR><Declaration>public var count: Int { get }<\/Declaration><CommentParts><Abstract><Para>Amount of elements.<\/Para><\/Abstract><Discussion><Complexity><Para>O(1)<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 66,
            "key.doc.name" : "count",
            "key.doc.type" : "Other",
            "key.doclength" : 67,
            "key.docoffset" : 1453,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>count<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 48,
            "key.name" : "count",
            "key.namelength" : 5,
            "key.nameoffset" : 1535,
            "key.offset" : 1531,
            "key.parsed_declaration" : "public var count: Int",
            "key.parsed_scope.end" : 68,
            "key.parsed_scope.start" : 66,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl5countSivp\">count<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5countSivp\">count<\/RelatedName>"
              }
            ],
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingPAAE5countSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var isEmpty: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1717
              }
            ],
            "key.bodylength" : 33,
            "key.bodyoffset" : 1743,
            "key.doc.column" : 16,
            "key.doc.comment" : "- Returns: `true` if there are no elements contained herein. Otherwise, `false`.\n\n- Complexity: O(1)",
            "key.doc.declaration" : "public var isEmpty: Bool { get }",
            "key.doc.discussion" : [
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"74\" column=\"16\"><Name>isEmpty<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingPAAE7isEmptySbvp<\/USR><Declaration>public var isEmpty: Bool { get }<\/Declaration><CommentParts><ResultDiscussion><Para><codeVoice>true<\/codeVoice> if there are no elements contained herein. Otherwise, <codeVoice>false<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Complexity><Para>O(1)<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 74,
            "key.doc.name" : "isEmpty",
            "key.doc.result_discussion" : [
              {
                "Para" : "`true` if there are no elements contained herein. Otherwise, `false`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 128,
            "key.docoffset" : 1585,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isEmpty<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 53,
            "key.name" : "isEmpty",
            "key.namelength" : 7,
            "key.nameoffset" : 1728,
            "key.offset" : 1724,
            "key.parsed_declaration" : "public var isEmpty: Bool",
            "key.parsed_scope.end" : 76,
            "key.parsed_scope.start" : 74,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl7isEmptySbvp\">isEmpty<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE7isEmptySbvp\">isEmpty<\/RelatedName>"
              }
            ],
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingPAAE7isEmptySbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(position: <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sl5IndexQa\">Index<\/Type>) -&gt; <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1879
              }
            ],
            "key.bodylength" : 35,
            "key.bodyoffset" : 1935,
            "key.doc.column" : 12,
            "key.doc.comment" : "- Returns: The element at the given `index`.\n\n- Complexity: O(1)",
            "key.doc.declaration" : "public subscript(position: Base.Index) -> Base.Element { get }",
            "key.doc.discussion" : [
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"82\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingPAAEy4Base_7ElementQZAD_5IndexQZcip<\/USR><Declaration>public subscript(position: Base.Index) -&gt; Base.Element { get }<\/Declaration><CommentParts><ResultDiscussion><Para>The element at the given <codeVoice>index<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Complexity><Para>O(1)<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 82,
            "key.doc.name" : "subscript(_:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "The element at the given `index`."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 92,
            "key.docoffset" : 1783,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>position<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 85,
            "key.name" : "subscript(_:)",
            "key.namelength" : 31,
            "key.nameoffset" : 1886,
            "key.offset" : 1886,
            "key.parsed_declaration" : "public subscript(position: Base.Index) -> Base.Element",
            "key.parsed_scope.end" : 84,
            "key.parsed_scope.start" : 82,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sly7ElementQz5IndexQzcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sly11SubSequenceQzSny5IndexQzGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl14DataStructuresE4safe7ElementQzSg5IndexQz_tcip\">subscript(safe:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsEy11SubSequenceQzqd__cSXRd__5BoundQyd__5IndexRtzluip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsEy11SubSequenceQzys15UnboundedRange_OXEcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Slss5SliceVyxG11SubSequenceRtzrlEyACSny5IndexQzGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SKy11SubSequenceQzSny5IndexQzGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SKy7ElementQz5IndexQzcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sky11SubSequenceQzSny5IndexQzGcip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sky7ElementQz5IndexQzcip\">subscript(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : RandomAccessCollectionWrapping> (Self.Base.Index) -> Self.Base.Element",
            "key.typeusr" : "$Sy4Base_7ElementQZAA_5IndexQZcD",
            "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingPAAEy4Base_7ElementQZAD_5IndexQZcip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(after index: <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sl5IndexQa\">Index<\/Type>) -&gt; <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sl5IndexQa\">Index<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2062
              }
            ],
            "key.bodylength" : 45,
            "key.bodyoffset" : 2120,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: Index after the given `index`.\n\n- Complexity: O(1)",
            "key.doc.declaration" : "public func index(after index: Base.Index) -> Base.Index",
            "key.doc.discussion" : [
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"89\" column=\"17\"><Name>index(after:)<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingPAAE5index5after4Base_5IndexQZAH_tF<\/USR><Declaration>public func index(after index: Base.Index) -&gt; Base.Index<\/Declaration><CommentParts><ResultDiscussion><Para>Index after the given <codeVoice>index<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Complexity><Para>O(1)<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 89,
            "key.doc.name" : "index(after:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Index after the given `index`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 81,
            "key.docoffset" : 1977,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>after<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 97,
            "key.name" : "index(after:)",
            "key.namelength" : 30,
            "key.nameoffset" : 2074,
            "key.offset" : 2069,
            "key.parsed_declaration" : "public func index(after index: Base.Index) -> Base.Index",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 89,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures30RandomAccessCollectionWrappingPAAE5index6before4Base_5IndexQZAH_tF\">index(before: Base.Index) -&gt; Base.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl5index_8offsetBy5IndexQzAD_SitF\">index(_: Self.Index, offsetBy: Int) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF\">index(_: Self.Index, offsetBy: Int, limitedBy: Self.Index) -&gt; Self.Index?<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl5index5after5IndexQzAD_tF\">index(after: Self.Index) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy5IndexQzAD_SitF\">index(_: Self.Index, offsetBy: Int) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF\">index(_: Self.Index, offsetBy: Int, limitedBy: Self.Index) -&gt; Self.Index?<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy5IndexQzAD_qd__tSzRd__lF\">index&lt;T&gt;(_: Self.Index, offsetBy: T) -&gt; Self.Index where T : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy07limitedC05IndexQzSgAE_qd__AEtSzRd__lF\">index&lt;T&gt;(_: Self.Index, offsetBy: T, limitedBy: Self.Index) -&gt; Self.Index? where T : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsSQ7ElementRpzrlE5index2of5IndexQzSgAB_tF\">index(of:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index5where5IndexQzSgSb7ElementQzKXE_tKF\">index(where:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SK5index6before5IndexQzAD_tF\">index(before: Self.Index) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SKsE5index_8offsetBy5IndexQzAD_SitF\">index(_: Self.Index, offsetBy: Int) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SKsE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF\">index(_: Self.Index, offsetBy: Int, limitedBy: Self.Index) -&gt; Self.Index?<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF\">index(_: Self.Index, offsetBy: Int, limitedBy: Self.Index) -&gt; Self.Index?<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tF\">index(after: Self.Index) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index6beforeA2B_tF\">index(before: Self.Index) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index_8offsetByA2B_SitF\">index(_: Self.Index, offsetBy: Self.Index.Stride) -&gt; Self.Index<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : RandomAccessCollectionWrapping> (Self) -> (Self.Base.Index) -> Self.Base.Index",
            "key.typeusr" : "$S5after4Base_5IndexQZAD_tcD",
            "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingPAAE5index5after4Base_5IndexQZAH_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func index(before index: <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sl5IndexQa\">Index<\/Type>) -&gt; <Type usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:Sl5IndexQa\">Index<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2266
              }
            ],
            "key.bodylength" : 46,
            "key.bodyoffset" : 2325,
            "key.doc.column" : 17,
            "key.doc.comment" : "- Returns: Index before the given `index`.\n\n- Complexity: O(1)",
            "key.doc.declaration" : "public func index(before index: Base.Index) -> Base.Index",
            "key.doc.discussion" : [
              {
                "Complexity" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift\" line=\"97\" column=\"17\"><Name>index(before:)<\/Name><USR>s:14DataStructures30RandomAccessCollectionWrappingPAAE5index6before4Base_5IndexQZAH_tF<\/USR><Declaration>public func index(before index: Base.Index) -&gt; Base.Index<\/Declaration><CommentParts><ResultDiscussion><Para>Index before the given <codeVoice>index<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Complexity><Para>O(1)<\/Para><\/Complexity><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 97,
            "key.doc.name" : "index(before:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "Index before the given `index`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 90,
            "key.docoffset" : 2172,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/RandomAccessCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>index<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>before<\/decl.var.parameter.argument_label> <decl.var.parameter.name>index<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:14DataStructures30RandomAccessCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:Sl5IndexQa\">Index<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 99,
            "key.name" : "index(before:)",
            "key.namelength" : 31,
            "key.nameoffset" : 2278,
            "key.offset" : 2273,
            "key.parsed_declaration" : "public func index(before index: Base.Index) -> Base.Index",
            "key.parsed_scope.end" : 99,
            "key.parsed_scope.start" : 97,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures30RandomAccessCollectionWrappingPAAE5index5after4Base_5IndexQZAH_tF\">index(after: Base.Index) -&gt; Base.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl5index_8offsetBy5IndexQzAD_SitF\">index(_: Self.Index, offsetBy: Int) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF\">index(_: Self.Index, offsetBy: Int, limitedBy: Self.Index) -&gt; Self.Index?<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sl5index5after5IndexQzAD_tF\">index(after: Self.Index) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy5IndexQzAD_SitF\">index(_: Self.Index, offsetBy: Int) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF\">index(_: Self.Index, offsetBy: Int, limitedBy: Self.Index) -&gt; Self.Index?<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy5IndexQzAD_qd__tSzRd__lF\">index&lt;T&gt;(_: Self.Index, offsetBy: T) -&gt; Self.Index where T : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index_8offsetBy07limitedC05IndexQzSgAE_qd__AEtSzRd__lF\">index&lt;T&gt;(_: Self.Index, offsetBy: T, limitedBy: Self.Index) -&gt; Self.Index? where T : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsSQ7ElementRpzrlE5index2of5IndexQzSgAB_tF\">index(of:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SlsE5index5where5IndexQzSgSb7ElementQzKXE_tKF\">index(where:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SK5index6before5IndexQzAD_tF\">index(before: Self.Index) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SKsE5index_8offsetBy5IndexQzAD_SitF\">index(_: Self.Index, offsetBy: Int) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SKsE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF\">index(_: Self.Index, offsetBy: Int, limitedBy: Self.Index) -&gt; Self.Index?<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF\">index(_: Self.Index, offsetBy: Int, limitedBy: Self.Index) -&gt; Self.Index?<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index5afterA2B_tF\">index(after: Self.Index) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index6beforeA2B_tF\">index(before: Self.Index) -&gt; Self.Index<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SksSx5IndexRpzSnyABG7IndicesRtzSiAA_6StrideRTzrlE5index_8offsetByA2B_SitF\">index(_: Self.Index, offsetBy: Self.Index.Stride) -&gt; Self.Index<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : RandomAccessCollectionWrapping> (Self) -> (Self.Base.Index) -> Self.Base.Index",
            "key.typeusr" : "$S6before4Base_5IndexQZAD_tcD",
            "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingPAAE5index6before4Base_5IndexQZAH_tF"
          }
        ],
        "key.typename" : "RandomAccessCollectionWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures30RandomAccessCollectionWrapping_pmD",
        "key.usr" : "s:14DataStructures30RandomAccessCollectionWrappingP"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1744,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol SequenceWrapping : <Type usr=\"s:s25ExpressibleByArrayLiteralP\">ExpressibleByArrayLiteral<\/Type>, <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 998
          }
        ],
        "key.bodylength" : 361,
        "key.bodyoffset" : 1069,
        "key.doc.column" : 17,
        "key.doc.comment" : "`SequenceWrapping` is a type-erasing protocol that allows a `Sequence`-conforming\nstructure to wrap any underlying `Sequence` implementation.\n\nFor example, `PitchSet` and `PitchCollection` are both containers for `Pitch` values, and\nshould both be able to be used as `Sequence` conforming structures.\n\nBy conforming to this protocol, the `PitchSet` can use a `Set<Pitch>` as its underlying\nmodel, while `PitchSequence` can use an `Array<Pitch>` as its underlying model.\n\nIn the conforming `struct`, it is necessary to add a private `var` which is an\nimplementation of a `Sequence`-conforming `struct`, which is then given by the\n`sequence` getter.\n\nIn the `init` method of the conforming `struct`, set the value of this private `var` with\nthe given `sequence`.\n\n- TODO: Consider removing `ExpressibleByArrayLiteral` and `init` requirements.",
        "key.doc.declaration" : "public protocol SequenceWrapping : ExpressibleByArrayLiteral, Sequence",
        "key.doc.discussion" : [
          {
            "Para" : "For example, `PitchSet` and `PitchCollection` are both containers for `Pitch` values, and should both be able to be used as `Sequence` conforming structures."
          },
          {
            "Para" : "By conforming to this protocol, the `PitchSet` can use a `Set<Pitch>` as its underlying model, while `PitchSequence` can use an `Array<Pitch>` as its underlying model."
          },
          {
            "Para" : "In the conforming `struct`, it is necessary to add a private `var` which is an implementation of a `Sequence`-conforming `struct`, which is then given by the `sequence` getter."
          },
          {
            "Para" : "In the `init` method of the conforming `struct`, set the value of this private `var` with the given `sequence`."
          },
          {
            "TODO" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift\" line=\"26\" column=\"17\"><Name>SequenceWrapping<\/Name><USR>s:14DataStructures16SequenceWrappingP<\/USR><Declaration>public protocol SequenceWrapping : ExpressibleByArrayLiteral, Sequence<\/Declaration><CommentParts><Abstract><Para><codeVoice>SequenceWrapping<\/codeVoice> is a type-erasing protocol that allows a <codeVoice>Sequence<\/codeVoice>-conforming structure to wrap any underlying <codeVoice>Sequence<\/codeVoice> implementation.<\/Para><\/Abstract><Discussion><Para>For example, <codeVoice>PitchSet<\/codeVoice> and <codeVoice>PitchCollection<\/codeVoice> are both containers for <codeVoice>Pitch<\/codeVoice> values, and should both be able to be used as <codeVoice>Sequence<\/codeVoice> conforming structures.<\/Para><Para>By conforming to this protocol, the <codeVoice>PitchSet<\/codeVoice> can use a <codeVoice>Set&lt;Pitch&gt;<\/codeVoice> as its underlying model, while <codeVoice>PitchSequence<\/codeVoice> can use an <codeVoice>Array&lt;Pitch&gt;<\/codeVoice> as its underlying model.<\/Para><Para>In the conforming <codeVoice>struct<\/codeVoice>, it is necessary to add a private <codeVoice>var<\/codeVoice> which is an implementation of a <codeVoice>Sequence<\/codeVoice>-conforming <codeVoice>struct<\/codeVoice>, which is then given by the <codeVoice>sequence<\/codeVoice> getter.<\/Para><Para>In the <codeVoice>init<\/codeVoice> method of the conforming <codeVoice>struct<\/codeVoice>, set the value of this private <codeVoice>var<\/codeVoice> with the given <codeVoice>sequence<\/codeVoice>.<\/Para><TODO><Para>Consider removing <codeVoice>ExpressibleByArrayLiteral<\/codeVoice> and <codeVoice>init<\/codeVoice> requirements.<\/Para><\/TODO><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 26,
        "key.doc.name" : "SequenceWrapping",
        "key.doc.type" : "Class",
        "key.doclength" : 904,
        "key.docoffset" : 94,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 1032
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 25,
            "key.offset" : 1042
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>SequenceWrapping<\/decl.name> : <ref.protocol usr=\"s:s25ExpressibleByArrayLiteralP\">ExpressibleByArrayLiteral<\/ref.protocol>, <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Sequence"
          },
          {
            "key.name" : "ExpressibleByArrayLiteral"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 426,
        "key.name" : "SequenceWrapping",
        "key.namelength" : 16,
        "key.nameoffset" : 1014,
        "key.offset" : 1005,
        "key.parsed_declaration" : "public protocol SequenceWrapping: Sequence, ExpressibleByArrayLiteral",
        "key.parsed_scope.end" : 39,
        "key.parsed_scope.start" : 26,
        "key.runtime_name" : "_TtP16SequenceWrapping16SequenceWrapping_",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 22,
            "key.name" : "MARK: Associated Types",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1078
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 27,
            "key.name" : "MARK: - Instance Properties",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1109
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var sequence: <Type usr=\"s:s11AnySequenceV\">AnySequence<\/Type>&lt;<Type usr=\"s:ST7ElementQa\">Element<\/Type>&gt; { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 1268,
            "key.doc.column" : 9,
            "key.doc.comment" : "`AnySequence` wrapper that provides shade for the domain specific implementation.",
            "key.doc.declaration" : "var sequence: AnySequence<Element> { get }",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift\" line=\"33\" column=\"9\"><Name>sequence<\/Name><USR>s:14DataStructures16SequenceWrappingP8sequences03AnyC0Vy7ElementQzGvp<\/USR><Declaration>var sequence: AnySequence&lt;Element&gt; { get }<\/Declaration><CommentParts><Abstract><Para><codeVoice>AnySequence<\/codeVoice> wrapper that provides shade for the domain specific implementation.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 33,
            "key.doc.name" : "sequence",
            "key.doc.type" : "Other",
            "key.doclength" : 86,
            "key.docoffset" : 1142,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sequence<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s11AnySequenceV\">AnySequence<\/ref.struct>&lt;<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 42,
            "key.name" : "sequence",
            "key.namelength" : 8,
            "key.nameoffset" : 1236,
            "key.offset" : 1232,
            "key.parsed_declaration" : "var sequence: AnySequence<Element>",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 33,
            "key.typename" : "AnySequence<Self.Element>",
            "key.typeusr" : "$Ss11AnySequenceVy7ElementSTQzGD",
            "key.usr" : "s:14DataStructures16SequenceWrappingP8sequences03AnyC0Vy7ElementQzGvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: - Initializers",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1283
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>init&lt;S&gt;(_ sequence: <Type usr=\"s:14DataStructures16SequenceWrappingPyxqd__cSTRd__7ElementQyd__ADRtzlufc1SL_qd__mfp\">S<\/Type>) where S : <Type usr=\"s:ST\">Sequence<\/Type>, <Type usr=\"s:14DataStructures16SequenceWrappingP4Selfxmfp\">Self<\/Type>.Element == S.Element<\/Declaration>",
            "key.doc.column" : 5,
            "key.doc.comment" : "Create an `SequenceWrapping` with a `Sequence`.",
            "key.doc.declaration" : "init<S>(_ sequence: S) where S : Sequence, Self.Element == S.Element",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift\" line=\"38\" column=\"5\"><Name>init(_:)<\/Name><USR>s:14DataStructures16SequenceWrappingPyxqd__cSTRd__7ElementQyd__ADRtzlufc<\/USR><Declaration>init&lt;S&gt;(_ sequence: S) where S : Sequence, Self.Element == S.Element<\/Declaration><CommentParts><Abstract><Para>Create an <codeVoice>SequenceWrapping<\/codeVoice> with a <codeVoice>Sequence<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 38,
            "key.doc.name" : "init(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 52,
            "key.docoffset" : 1309,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:14DataStructures16SequenceWrappingPyxqd__cSTRd__7ElementQyd__ADRtzlufc1SL_qd__mfp\"><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures16SequenceWrappingPyxqd__cSTRd__7ElementQyd__ADRtzlufc1SL_qd__mfp\">S<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:14DataStructures16SequenceWrappingP4Selfxmfp\">Self<\/ref.generic_type_param>.Element == S.Element<\/decl.generic_type_requirement><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 64,
            "key.name" : "init(_:)",
            "key.namelength" : 24,
            "key.nameoffset" : 1365,
            "key.offset" : 1365,
            "key.parsed_declaration" : "init <S> (_ sequence: S) where S: Sequence, S.Element == Element",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 38,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc\">init(arrayLiteral:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>S<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>S<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "S",
                "key.namelength" : 1,
                "key.nameoffset" : 1371,
                "key.offset" : 1371,
                "key.parsed_declaration" : "init <S> (_ sequence: S) where S: Sequence, S.Element == Element",
                "key.parsed_scope.end" : 38,
                "key.parsed_scope.start" : 38,
                "key.typename" : "S.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:14DataStructures16SequenceWrappingPyxqd__cSTRd__7ElementQyd__ADRtzlufc1SL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, S where Self : SequenceWrapping, S : Sequence, Self.Element == S.Element> (Self.Type) -> (S) -> Self",
            "key.typeusr" : "$Syxqd__cSTRd__7ElementQyd__AARtzluD",
            "key.usr" : "s:14DataStructures16SequenceWrappingPyxqd__cSTRd__7ElementQyd__ADRtzlufc"
          }
        ],
        "key.typename" : "SequenceWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures16SequenceWrapping_pmD",
        "key.usr" : "s:14DataStructures16SequenceWrappingP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol SequenceWrapping : <Type usr=\"s:s25ExpressibleByArrayLiteralP\">ExpressibleByArrayLiteral<\/Type>, <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
        "key.bodylength" : 281,
        "key.bodyoffset" : 1461,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol SequenceWrapping : ExpressibleByArrayLiteral, Sequence",
        "key.doc.discussion" : [
          {
            "Para" : "For example, `PitchSet` and `PitchCollection` are both containers for `Pitch` values, and should both be able to be used as `Sequence` conforming structures."
          },
          {
            "Para" : "By conforming to this protocol, the `PitchSet` can use a `Set<Pitch>` as its underlying model, while `PitchSequence` can use an `Array<Pitch>` as its underlying model."
          },
          {
            "Para" : "In the conforming `struct`, it is necessary to add a private `var` which is an implementation of a `Sequence`-conforming `struct`, which is then given by the `sequence` getter."
          },
          {
            "Para" : "In the `init` method of the conforming `struct`, set the value of this private `var` with the given `sequence`."
          },
          {
            "TODO" : ""
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift\" line=\"26\" column=\"17\"><Name>SequenceWrapping<\/Name><USR>s:14DataStructures16SequenceWrappingP<\/USR><Declaration>public protocol SequenceWrapping : ExpressibleByArrayLiteral, Sequence<\/Declaration><CommentParts><Abstract><Para><codeVoice>SequenceWrapping<\/codeVoice> is a type-erasing protocol that allows a <codeVoice>Sequence<\/codeVoice>-conforming structure to wrap any underlying <codeVoice>Sequence<\/codeVoice> implementation.<\/Para><\/Abstract><Discussion><Para>For example, <codeVoice>PitchSet<\/codeVoice> and <codeVoice>PitchCollection<\/codeVoice> are both containers for <codeVoice>Pitch<\/codeVoice> values, and should both be able to be used as <codeVoice>Sequence<\/codeVoice> conforming structures.<\/Para><Para>By conforming to this protocol, the <codeVoice>PitchSet<\/codeVoice> can use a <codeVoice>Set&lt;Pitch&gt;<\/codeVoice> as its underlying model, while <codeVoice>PitchSequence<\/codeVoice> can use an <codeVoice>Array&lt;Pitch&gt;<\/codeVoice> as its underlying model.<\/Para><Para>In the conforming <codeVoice>struct<\/codeVoice>, it is necessary to add a private <codeVoice>var<\/codeVoice> which is an implementation of a <codeVoice>Sequence<\/codeVoice>-conforming <codeVoice>struct<\/codeVoice>, which is then given by the <codeVoice>sequence<\/codeVoice> getter.<\/Para><Para>In the <codeVoice>init<\/codeVoice> method of the conforming <codeVoice>struct<\/codeVoice>, set the value of this private <codeVoice>var<\/codeVoice> with the given <codeVoice>sequence<\/codeVoice>.<\/Para><TODO><Para>Consider removing <codeVoice>ExpressibleByArrayLiteral<\/codeVoice> and <codeVoice>init<\/codeVoice> requirements.<\/Para><\/TODO><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 26,
        "key.doc.name" : "SequenceWrapping",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>SequenceWrapping<\/decl.name> : <ref.protocol usr=\"s:s25ExpressibleByArrayLiteralP\">ExpressibleByArrayLiteral<\/ref.protocol>, <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 310,
        "key.name" : "SequenceWrapping",
        "key.namelength" : 16,
        "key.nameoffset" : 1443,
        "key.offset" : 1433,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: - `Sequence`",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1470
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func makeIterator() -&gt; <Type usr=\"s:s11AnyIteratorV\">AnyIterator<\/Type>&lt;<Type usr=\"s:ST7ElementQa\">Element<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1560
              }
            ],
            "key.bodylength" : 128,
            "key.bodyoffset" : 1612,
            "key.doc.column" : 17,
            "key.doc.comment" : "- returns a generator over the elements of this sequence.",
            "key.doc.declaration" : "public func makeIterator() -> AnyIterator<Element>",
            "key.doc.discussion" : [
              {
                "List-Bullet" : ""
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift\" line=\"46\" column=\"17\"><Name>makeIterator()<\/Name><USR>s:14DataStructures16SequenceWrappingPAAE12makeIterators03AnyF0Vy7ElementQzGyF<\/USR><Declaration>public func makeIterator() -&gt; AnyIterator&lt;Element&gt;<\/Declaration><CommentParts><Discussion><List-Bullet><Item><Para>returns a generator over the elements of this sequence.<\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 46,
            "key.doc.name" : "makeIterator()",
            "key.doc.type" : "Function",
            "key.doclength" : 62,
            "key.docoffset" : 1494,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeIterator<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:s11AnyIteratorV\">AnyIterator<\/ref.struct>&lt;<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 174,
            "key.name" : "makeIterator()",
            "key.namelength" : 14,
            "key.nameoffset" : 1572,
            "key.offset" : 1567,
            "key.parsed_declaration" : "public func makeIterator() -> AnyIterator<Element>",
            "key.parsed_scope.end" : 53,
            "key.parsed_scope.start" : 46,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:ST12makeIterator0B0QzyF\">makeIterator() -&gt; Self.Iterator<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:STs8IteratorSTQzRszrlE04makeA0xyF\">makeIterator() -&gt; Self<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let iterator: <Type usr=\"s:s11AnyIteratorV\">AnyIterator<\/Type>&lt;<Type usr=\"s:14DataStructures16SequenceWrappingP4Selfxmfp\">Self<\/Type>.Element&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SequenceWrapping.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>iterator<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s11AnyIteratorV\">AnyIterator<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures16SequenceWrappingP4Selfxmfp\">Self<\/ref.generic_type_param>.Element&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 38,
                "key.name" : "iterator",
                "key.namelength" : 8,
                "key.nameoffset" : 1626,
                "key.offset" : 1622,
                "key.parsed_declaration" : "let iterator = sequence.makeIterator()",
                "key.parsed_scope.end" : 48,
                "key.parsed_scope.start" : 48,
                "key.typename" : "AnyIterator<Self.Element>",
                "key.typeusr" : "$Ss11AnyIteratorVy7ElementSTQzGD",
                "key.usr" : "s:14DataStructures16SequenceWrappingPAAE12makeIterators03AnyF0Vy7ElementQzGyF8iteratorL_AIvp"
              }
            ],
            "key.typename" : "<Self where Self : SequenceWrapping> (Self) -> () -> AnyIterator<Self.Element>",
            "key.typeusr" : "$Ss11AnyIteratorVy7ElementQzGycD",
            "key.usr" : "s:14DataStructures16SequenceWrappingPAAE12makeIterators03AnyF0Vy7ElementQzGyF"
          }
        ],
        "key.typename" : "SequenceWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures16SequenceWrapping_pmD",
        "key.usr" : "s:14DataStructures16SequenceWrappingP"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SortedCollectionWrapping.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 496,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol SortedCollectionWrapping : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 102
          }
        ],
        "key.bodylength" : 77,
        "key.bodyoffset" : 156,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 144
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SortedCollectionWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>SortedCollectionWrapping<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Collection"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 125,
        "key.name" : "SortedCollectionWrapping",
        "key.namelength" : 24,
        "key.nameoffset" : 118,
        "key.offset" : 109,
        "key.parsed_declaration" : "public protocol SortedCollectionWrapping: Collection",
        "key.parsed_scope.end" : 12,
        "key.parsed_scope.start" : 9,
        "key.runtime_name" : "_TtP24SortedCollectionWrapping24SortedCollectionWrapping_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype Base : <Type usr=\"s:SK\">BidirectionalCollection<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SortedCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>Base<\/decl.name> : <ref.protocol usr=\"s:SK\">BidirectionalCollection<\/ref.protocol><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 44,
            "key.name" : "Base",
            "key.namelength" : 4,
            "key.nameoffset" : 176,
            "key.offset" : 161,
            "key.parsed_declaration" : "associatedtype Base: BidirectionalCollection",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.typename" : "Self.Base.Type",
            "key.typeusr" : "$S4Base14DataStructures24SortedCollectionWrappingPQzmD",
            "key.usr" : "s:14DataStructures24SortedCollectionWrappingP4BaseQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var base: <Type usr=\"s:14DataStructures24SortedCollectionWrappingP4BaseQa\">Base<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 226,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SortedCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>base<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:14DataStructures24SortedCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "base",
            "key.namelength" : 4,
            "key.nameoffset" : 214,
            "key.offset" : 210,
            "key.parsed_declaration" : "var base: Base",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "Self.Base",
            "key.typeusr" : "$S4Base14DataStructures24SortedCollectionWrappingPQzD",
            "key.usr" : "s:14DataStructures24SortedCollectionWrappingP4base4BaseQzvp"
          }
        ],
        "key.typename" : "SortedCollectionWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures24SortedCollectionWrapping_pmD",
        "key.usr" : "s:14DataStructures24SortedCollectionWrappingP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol SortedCollectionWrapping : <Type usr=\"s:Sl\">Collection<\/Type><\/Declaration>",
        "key.bodylength" : 222,
        "key.bodyoffset" : 272,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SortedCollectionWrapping.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>SortedCollectionWrapping<\/decl.name> : <ref.protocol usr=\"s:Sl\">Collection<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 259,
        "key.name" : "SortedCollectionWrapping",
        "key.namelength" : 24,
        "key.nameoffset" : 246,
        "key.offset" : 236,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func min() -&gt; <Type usr=\"s:14DataStructures24SortedCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 278
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 314,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SortedCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>min<\/decl.name>() -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:14DataStructures24SortedCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 61,
            "key.name" : "min()",
            "key.namelength" : 5,
            "key.nameoffset" : 290,
            "key.offset" : 285,
            "key.parsed_declaration" : "public func min() -> Base.Element?",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 16,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:STsE3min2by7ElementQzSgSbAD_ADtKXE_tKF\">min(by:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:STsSL7ElementRpzrlE3minABSgyF\">min() -&gt; Self.Element?<\/RelatedName>"
              }
            ],
            "key.typename" : "<Self where Self : SortedCollectionWrapping> (Self) -> () -> Self.Base.Element?",
            "key.typeusr" : "$S4Base_7ElementQZSgycD",
            "key.usr" : "s:14DataStructures24SortedCollectionWrappingPAAE3min4Base_7ElementQZSgyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func max() -&gt; <Type usr=\"s:14DataStructures24SortedCollectionWrappingP4BaseQa\">Base<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 352
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 388,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SortedCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>max<\/decl.name>() -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:14DataStructures24SortedCollectionWrappingP4BaseQa\">Base<\/ref.associatedtype>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 60,
            "key.name" : "max()",
            "key.namelength" : 5,
            "key.nameoffset" : 364,
            "key.offset" : 359,
            "key.parsed_declaration" : "public func max() -> Base.Element?",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 20,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:STsE3max2by7ElementQzSgSbAD_ADtKXE_tKF\">max(by:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:STsSL7ElementRpzrlE3maxABSgyF\">max() -&gt; Self.Element?<\/RelatedName>"
              }
            ],
            "key.typename" : "<Self where Self : SortedCollectionWrapping> (Self) -> () -> Self.Base.Element?",
            "key.typeusr" : "$S4Base_7ElementQZSgycD",
            "key.usr" : "s:14DataStructures24SortedCollectionWrappingPAAE3max4Base_7ElementQZSgyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func sorted() -&gt; [<Type usr=\"s:Sl7ElementQa\">Element<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 425
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 460,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Wrapping\/SortedCollectionWrapping.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sorted<\/decl.name>() -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:Sl7ElementQa\">Element<\/ref.associatedtype>]<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 61,
            "key.name" : "sorted()",
            "key.namelength" : 8,
            "key.nameoffset" : 437,
            "key.offset" : 432,
            "key.parsed_declaration" : "public func sorted() -> [Element]",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 24,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:STsSL7ElementRpzrlE6sortedSayABGyF\">sorted() -&gt; [Self.Element]<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:STsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF\">sorted(by:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : SortedCollectionWrapping> (Self) -> () -> [Self.Element]",
            "key.typeusr" : "$SSay7ElementQzGycD",
            "key.usr" : "s:14DataStructures24SortedCollectionWrappingPAAE6sortedSay7ElementQzGyF"
          }
        ],
        "key.typename" : "SortedCollectionWrapping.Protocol",
        "key.typeusr" : "$S14DataStructures24SortedCollectionWrapping_pmD",
        "key.usr" : "s:14DataStructures24SortedCollectionWrappingP"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 11894,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func zip&lt;Sequence1, Sequence2, Sequence3&gt;(_ sequence1: <Type usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\">Sequence1<\/Type>, _ sequence2: <Type usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\">Sequence2<\/Type>, _ sequence3: <Type usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\">Sequence3<\/Type>) -&gt; <Type usr=\"s:14DataStructures12Zip3SequenceV\">Zip3Sequence<\/Type>&lt;<Type usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\">Sequence1<\/Type>, <Type usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\">Sequence2<\/Type>, <Type usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\">Sequence3<\/Type>&gt; where Sequence1 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence2 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence3 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 10593
          }
        ],
        "key.bodylength" : 56,
        "key.bodyoffset" : 10776,
        "key.doc.column" : 13,
        "key.doc.comment" : "Lazy `Sequence` zipping three `Sequence` values together.\n\n- note: This should be deprecated when `Variadic Generics` are implemented in Swift. As\noutlined in the [Generics Manifesto]\n(http:\/\/thread.gmane.org\/gmane.comp.lang.swift.evolution\/8484)\n\n- author: https:\/\/github.com\/amomchilov\/ZipNsequence\/blob\/master\/Zip3Sequence.swift\n\nModified by James Bean.",
        "key.doc.declaration" : "public func zip<Sequence1, Sequence2, Sequence3>(_ sequence1: Sequence1, _ sequence2: Sequence2, _ sequence3: Sequence3) -> Zip3Sequence<Sequence1, Sequence2, Sequence3> where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence",
        "key.doc.discussion" : [
          {
            "Note" : ""
          },
          {
            "Author" : ""
          },
          {
            "Para" : "Modified by James Bean."
          }
        ],
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift\" line=\"196\" column=\"13\"><Name>zip(_:_:_:)<\/Name><USR>s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF<\/USR><Declaration>public func zip&lt;Sequence1, Sequence2, Sequence3&gt;(_ sequence1: Sequence1, _ sequence2: Sequence2, _ sequence3: Sequence3) -&gt; Zip3Sequence&lt;Sequence1, Sequence2, Sequence3&gt; where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence<\/Declaration><CommentParts><Abstract><Para>Lazy <codeVoice>Sequence<\/codeVoice> zipping three <codeVoice>Sequence<\/codeVoice> values together.<\/Para><\/Abstract><Discussion><Note><Para>This should be deprecated when <codeVoice>Variadic Generics<\/codeVoice> are implemented in Swift. As outlined in the [Generics Manifesto] (http:\/\/thread.gmane.org\/gmane.comp.lang.swift.evolution\/8484)<\/Para><\/Note><Author><Para>https:\/\/github.com\/amomchilov\/ZipNsequence\/blob\/master\/Zip3Sequence.swift<\/Para><\/Author><Para>Modified by James Bean.<\/Para><\/Discussion><\/CommentParts><\/Function>",
        "key.doc.line" : 196,
        "key.doc.name" : "zip(_:_:_:)",
        "key.doc.type" : "Function",
        "key.doclength" : 394,
        "key.docoffset" : 10199,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>zip<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\"><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\"><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\"><decl.generic_type_param.name>Sequence3<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence1<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence2<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence3<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\">Sequence3<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures12Zip3SequenceV\">Zip3Sequence<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\">Sequence3<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Sequence1 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence2 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence3 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 233,
        "key.name" : "zip(_:_:_:)",
        "key.namelength" : 122,
        "key.nameoffset" : 10605,
        "key.offset" : 10600,
        "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (\n    _ sequence1: Sequence1,\n    _ sequence2: Sequence2,\n    _ sequence3: Sequence3\n) -> Zip3Sequence<Sequence1,Sequence2,Sequence3>",
        "key.parsed_scope.end" : 203,
        "key.parsed_scope.start" : 196,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF\">zip&lt;T, U, V&gt;(_: Tree&lt;T, T&gt;, _: Tree&lt;U, U&gt;, _: (T, U) -&gt; V) -&gt; Tree&lt;V, V&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF\">zip(_:_:fill1:fill2:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF\">zip(_:_:fill:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF\">zip(_:_:_:fill1:fill2:fill3:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF\">zip(_:_:_:fill:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s3zipys12Zip2SequenceVyxq_Gx_q_tSTRzSTR_r0_lF\">zip(_:_:)<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Sequence1<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence1",
            "key.namelength" : 9,
            "key.nameoffset" : 10610,
            "key.offset" : 10610,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (",
            "key.parsed_scope.end" : 196,
            "key.parsed_scope.start" : 196,
            "key.typename" : "Sequence1.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence2<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence2",
            "key.namelength" : 9,
            "key.nameoffset" : 10620,
            "key.offset" : 10620,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (",
            "key.parsed_scope.end" : 196,
            "key.parsed_scope.start" : 196,
            "key.typename" : "Sequence2.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence3<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence3<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence3",
            "key.namelength" : 9,
            "key.nameoffset" : 10630,
            "key.offset" : 10630,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (",
            "key.parsed_scope.end" : 196,
            "key.parsed_scope.start" : 196,
            "key.typename" : "Sequence3.Type",
            "key.typeusr" : "$Sq0_mD",
            "key.usr" : "s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp"
          }
        ],
        "key.typename" : "<Sequence1, Sequence2, Sequence3 where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence> (Sequence1, Sequence2, Sequence3) -> Zip3Sequence<Sequence1, Sequence2, Sequence3>",
        "key.typeusr" : "$Sy14DataStructures12Zip3SequenceVyxq_q0_Gx_q_q0_tcSTRzSTR_STR0_r1_luD",
        "key.usr" : "s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct Zip3Sequence&lt;Sequence1, Sequence2, Sequence3&gt; : <Type usr=\"s:St\">IteratorProtocol<\/Type>, <Type usr=\"s:ST\">Sequence<\/Type> where Sequence1 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence2 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence3 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 10835
          }
        ],
        "key.bodylength" : 923,
        "key.bodyoffset" : 10969,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 10941
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 10959
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Zip3Sequence<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence1xmfp\"><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence2q_mfp\"><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence3q0_mfp\"><decl.generic_type_param.name>Sequence3<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:St\">IteratorProtocol<\/ref.protocol>, <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Sequence1 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence2 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence3 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "IteratorProtocol"
          },
          {
            "key.name" : "Sequence"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1051,
        "key.name" : "Zip3Sequence",
        "key.namelength" : 12,
        "key.nameoffset" : 10849,
        "key.offset" : 10842,
        "key.parsed_declaration" : "public struct Zip3Sequence <\n    Sequence1: Sequence,\n    Sequence2: Sequence,\n    Sequence3: Sequence\n>: IteratorProtocol, Sequence",
        "key.parsed_scope.end" : 234,
        "key.parsed_scope.start" : 205,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Sequence1 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 10879
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Sequence"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 19,
            "key.name" : "Sequence1",
            "key.namelength" : 9,
            "key.nameoffset" : 10868,
            "key.offset" : 10868,
            "key.parsed_declaration" : "Sequence1: Sequence,",
            "key.parsed_scope.end" : 206,
            "key.parsed_scope.start" : 206,
            "key.typename" : "Sequence1.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures12Zip3SequenceV9Sequence1xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence2 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 10904
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Sequence"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 19,
            "key.name" : "Sequence2",
            "key.namelength" : 9,
            "key.nameoffset" : 10893,
            "key.offset" : 10893,
            "key.parsed_declaration" : "Sequence2: Sequence,",
            "key.parsed_scope.end" : 207,
            "key.parsed_scope.start" : 207,
            "key.typename" : "Sequence2.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures12Zip3SequenceV9Sequence2q_mfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence3 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 10929
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence3<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Sequence"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 19,
            "key.name" : "Sequence3",
            "key.namelength" : 9,
            "key.nameoffset" : 10918,
            "key.offset" : 10918,
            "key.parsed_declaration" : "Sequence3: Sequence",
            "key.parsed_scope.end" : 208,
            "key.parsed_scope.start" : 208,
            "key.typename" : "Sequence3.Type",
            "key.typeusr" : "$Sq0_mD",
            "key.usr" : "s:14DataStructures12Zip3SequenceV9Sequence3q0_mfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var iterator1: <Type usr=\"s:14DataStructures12Zip3SequenceV9Sequence1xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST8IteratorQa\">Iterator<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 10975
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>iterator1<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST8IteratorQa\">Iterator<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "iterator1",
            "key.namelength" : 9,
            "key.nameoffset" : 10987,
            "key.offset" : 10983,
            "key.parsed_declaration" : "private var iterator1: Sequence1.Iterator",
            "key.parsed_scope.end" : 212,
            "key.parsed_scope.start" : 212,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Sequence1.Iterator",
            "key.typeusr" : "$S8IteratorSTQzD",
            "key.usr" : "s:14DataStructures12Zip3SequenceV9iterator133_EF492D5AEACB642EFDC8B12301E6E829LL8IteratorQzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var iterator2: <Type usr=\"s:14DataStructures12Zip3SequenceV9Sequence2q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST8IteratorQa\">Iterator<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 11021
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>iterator2<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST8IteratorQa\">Iterator<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "iterator2",
            "key.namelength" : 9,
            "key.nameoffset" : 11033,
            "key.offset" : 11029,
            "key.parsed_declaration" : "private var iterator2: Sequence2.Iterator",
            "key.parsed_scope.end" : 213,
            "key.parsed_scope.start" : 213,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Sequence2.Iterator",
            "key.typeusr" : "$S8IteratorSTQy_D",
            "key.usr" : "s:14DataStructures12Zip3SequenceV9iterator233_EF492D5AEACB642EFDC8B12301E6E829LL8IteratorQy_vp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var iterator3: <Type usr=\"s:14DataStructures12Zip3SequenceV9Sequence3q0_mfp\">Sequence3<\/Type>.<Type usr=\"s:ST8IteratorQa\">Iterator<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 11067
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>iterator3<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence3q0_mfp\">Sequence3<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST8IteratorQa\">Iterator<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "iterator3",
            "key.namelength" : 9,
            "key.nameoffset" : 11079,
            "key.offset" : 11075,
            "key.parsed_declaration" : "private var iterator3: Sequence3.Iterator",
            "key.parsed_scope.end" : 214,
            "key.parsed_scope.start" : 214,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Sequence3.Iterator",
            "key.typeusr" : "$S8IteratorSTQy0_D",
            "key.usr" : "s:14DataStructures12Zip3SequenceV9iterator333_EF492D5AEACB642EFDC8B12301E6E829LL8IteratorQy0_vp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ sequence1: <Type usr=\"s:14DataStructures12Zip3SequenceV9Sequence1xmfp\">Sequence1<\/Type>, _ sequence2: <Type usr=\"s:14DataStructures12Zip3SequenceV9Sequence2q_mfp\">Sequence2<\/Type>, _ sequence3: <Type usr=\"s:14DataStructures12Zip3SequenceV9Sequence3q0_mfp\">Sequence3<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11213
              }
            ],
            "key.bodylength" : 155,
            "key.bodyoffset" : 11298,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates an instance that makes pairs of elements from `sequence1` and\n`sequence2`.",
            "key.doc.declaration" : "public init(_ sequence1: Sequence1, _ sequence2: Sequence2, _ sequence3: Sequence3)",
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift\" line=\"218\" column=\"12\"><Name>init(_:_:_:)<\/Name><USR>s:14DataStructures12Zip3SequenceVyACyxq_q0_Gx_q_q0_tcfc<\/USR><Declaration>public init(_ sequence1: Sequence1, _ sequence2: Sequence2, _ sequence3: Sequence3)<\/Declaration><CommentParts><Abstract><Para>Creates an instance that makes pairs of elements from <codeVoice>sequence1<\/codeVoice> and <codeVoice>sequence2<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 218,
            "key.doc.name" : "init(_:_:_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 95,
            "key.docoffset" : 11114,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence1<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence2<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence3<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence3q0_mfp\">Sequence3<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 234,
            "key.name" : "init(_:_:_:)",
            "key.namelength" : 76,
            "key.nameoffset" : 11220,
            "key.offset" : 11220,
            "key.parsed_declaration" : "public init(_ sequence1: Sequence1, _ sequence2: Sequence2, _ sequence3: Sequence3)",
            "key.parsed_scope.end" : 222,
            "key.parsed_scope.start" : 218,
            "key.substructure" : [

            ],
            "key.typename" : "<Sequence1, Sequence2, Sequence3 where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence> (Zip3Sequence<Sequence1, Sequence2, Sequence3>.Type) -> (Sequence1, Sequence2, Sequence3) -> Zip3Sequence<Sequence1, Sequence2, Sequence3>",
            "key.typeusr" : "$Sy14DataStructures12Zip3SequenceVyxq_q0_Gx_q_q0_tcD",
            "key.usr" : "s:14DataStructures12Zip3SequenceVyACyxq_q0_Gx_q_q0_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func next() -&gt; (<Type usr=\"s:14DataStructures12Zip3SequenceV9Sequence1xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, <Type usr=\"s:14DataStructures12Zip3SequenceV9Sequence2q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, <Type usr=\"s:14DataStructures12Zip3SequenceV9Sequence3q0_mfp\">Sequence3<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>)?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 11645
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11638
              }
            ],
            "key.bodylength" : 161,
            "key.bodyoffset" : 11729,
            "key.doc.column" : 26,
            "key.doc.comment" : "Advances to the next element and returns it, or `nil` if no next element\nexists.\n\nOnce `nil` has been returned, all subsequent calls return `nil`.",
            "key.doc.declaration" : "public mutating func next() -> (Sequence1.Element, Sequence2.Element, Sequence3.Element)?",
            "key.doc.discussion" : [
              {
                "Para" : "Once `nil` has been returned, all subsequent calls return `nil`."
              }
            ],
            "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift\" line=\"228\" column=\"26\"><Name>next()<\/Name><USR>s:14DataStructures12Zip3SequenceV4next7ElementQz_AEQy_AEQy0_tSgyF<\/USR><Declaration>public mutating func next() -&gt; (Sequence1.Element, Sequence2.Element, Sequence3.Element)?<\/Declaration><CommentParts><Abstract><Para>Advances to the next element and returns it, or <codeVoice>nil<\/codeVoice> if no next element exists.<\/Para><\/Abstract><Discussion><Para>Once <codeVoice>nil<\/codeVoice> has been returned, all subsequent calls return <codeVoice>nil<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 228,
            "key.doc.name" : "next()",
            "key.doc.type" : "Function",
            "key.doclength" : 174,
            "key.docoffset" : 11460,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/Zip3Sequence.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>next<\/decl.name>() -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures12Zip3SequenceV9Sequence3q0_mfp\">Sequence3<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 237,
            "key.name" : "next()",
            "key.namelength" : 6,
            "key.nameoffset" : 11659,
            "key.offset" : 11654,
            "key.overrides" : [
              {
                "key.usr" : "s:St4next7ElementQzSgyF"
              }
            ],
            "key.parsed_declaration" : "public mutating func next() -> (Sequence1.Element, Sequence2.Element, Sequence3.Element)?",
            "key.parsed_scope.end" : 233,
            "key.parsed_scope.start" : 228,
            "key.substructure" : [

            ],
            "key.typename" : "<Sequence1, Sequence2, Sequence3 where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence> (inout Zip3Sequence<Sequence1, Sequence2, Sequence3>) -> () -> (Sequence1.Element, Sequence2.Element, Sequence3.Element)?",
            "key.typeusr" : "$S7ElementQz_AAQy_AAQy0_tSgycD",
            "key.usr" : "s:14DataStructures12Zip3SequenceV4next7ElementQz_AEQy_AEQy0_tSgyF"
          }
        ],
        "key.typename" : "Zip3Sequence<Sequence1, Sequence2, Sequence3>.Type",
        "key.typeusr" : "$S14DataStructures12Zip3SequenceVyxq_q0_GmD",
        "key.usr" : "s:14DataStructures12Zip3SequenceV"
      }
    ]
  }
}, {
  "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4681,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func zip&lt;Sequence1, Sequence2&gt;(_ sequence1: <Type usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence1L_xmfp\">Sequence1<\/Type>, _ sequence2: <Type usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence2L_q_mfp\">Sequence2<\/Type>, fill1: <Type usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence1L_xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, fill2: <Type usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence2L_q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>) -&gt; <Type usr=\"s:14DataStructures21ZipToLongest2SequenceV\">ZipToLongest2Sequence<\/Type>&lt;<Type usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence1L_xmfp\">Sequence1<\/Type>, <Type usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence2L_q_mfp\">Sequence2<\/Type>&gt; where Sequence1 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence2 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 241
          }
        ],
        "key.bodylength" : 84,
        "key.bodyoffset" : 445,
        "key.doc.column" : 13,
        "key.doc.comment" : "- Returns: A `ZipToLongest2Sequence` for the two given sequences, using `fill1` and\n`fill2` as default values if the other sequence is longer.",
        "key.doc.declaration" : "public func zip<Sequence1, Sequence2>(_ sequence1: Sequence1, _ sequence2: Sequence2, fill1: Sequence1.Element, fill2: Sequence2.Element) -> ZipToLongest2Sequence<Sequence1, Sequence2> where Sequence1 : Sequence, Sequence2 : Sequence",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift\" line=\"10\" column=\"13\"><Name>zip(_:_:fill1:fill2:)<\/Name><USR>s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF<\/USR><Declaration>public func zip&lt;Sequence1, Sequence2&gt;(_ sequence1: Sequence1, _ sequence2: Sequence2, fill1: Sequence1.Element, fill2: Sequence2.Element) -&gt; ZipToLongest2Sequence&lt;Sequence1, Sequence2&gt; where Sequence1 : Sequence, Sequence2 : Sequence<\/Declaration><CommentParts><ResultDiscussion><Para>A <codeVoice>ZipToLongest2Sequence<\/codeVoice> for the two given sequences, using <codeVoice>fill1<\/codeVoice> and <codeVoice>fill2<\/codeVoice> as default values if the other sequence is longer.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 10,
        "key.doc.name" : "zip(_:_:fill1:fill2:)",
        "key.doc.result_discussion" : [
          {
            "Para" : "A `ZipToLongest2Sequence` for the two given sequences, using `fill1` and `fill2` as default values if the other sequence is longer."
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 151,
        "key.docoffset" : 90,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>zip<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence1L_xmfp\"><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence2L_q_mfp\"><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence1<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence2<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill1<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill2<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures21ZipToLongest2SequenceV\">ZipToLongest2Sequence<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Sequence1 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence2 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 282,
        "key.name" : "zip(_:_:fill1:fill2:)",
        "key.namelength" : 144,
        "key.nameoffset" : 253,
        "key.offset" : 248,
        "key.parsed_declaration" : "public func zip <Sequence1,Sequence2> (\n    _ sequence1: Sequence1,\n    _ sequence2: Sequence2,\n    fill1: Sequence1.Element,\n    fill2: Sequence2.Element\n) -> ZipToLongest2Sequence<Sequence1,Sequence2>",
        "key.parsed_scope.end" : 18,
        "key.parsed_scope.start" : 10,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF\">zip&lt;T, U, V&gt;(_: Tree&lt;T, T&gt;, _: Tree&lt;U, U&gt;, _: (T, U) -&gt; V) -&gt; Tree&lt;V, V&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF\">zip&lt;Sequence1, Sequence2, Sequence3&gt;(_: Sequence1, _: Sequence2, _: Sequence3) -&gt; Zip3Sequence&lt;Sequence1, Sequence2, Sequence3&gt; where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF\">zip(_:_:fill:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF\">zip(_:_:_:fill1:fill2:fill3:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF\">zip(_:_:_:fill:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s3zipys12Zip2SequenceVyxq_Gx_q_tSTRzSTR_r0_lF\">zip(_:_:)<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Sequence1<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence1",
            "key.namelength" : 9,
            "key.nameoffset" : 258,
            "key.offset" : 258,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2> (",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.typename" : "Sequence1.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence1L_xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence2<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence2",
            "key.namelength" : 9,
            "key.nameoffset" : 268,
            "key.offset" : 268,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2> (",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.typename" : "Sequence2.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF9Sequence2L_q_mfp"
          }
        ],
        "key.typename" : "<Sequence1, Sequence2 where Sequence1 : Sequence, Sequence2 : Sequence> (Sequence1, Sequence2, fill1: Sequence1.Element, fill2: Sequence2.Element) -> ZipToLongest2Sequence<Sequence1, Sequence2>",
        "key.typeusr" : "$S__5fill15fill214DataStructures21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAGQy_tcSTRzSTR_r0_luD",
        "key.usr" : "s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func zip&lt;Sequence1, Sequence2&gt;(_ sequence1: <Type usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence1L_xmfp\">Sequence1<\/Type>, _ sequence2: <Type usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence2L_q_mfp\">Sequence2<\/Type>, fill: <Type usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence1L_xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>) -&gt; <Type usr=\"s:14DataStructures21ZipToLongest2SequenceV\">ZipToLongest2Sequence<\/Type>&lt;<Type usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence1L_xmfp\">Sequence1<\/Type>, <Type usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence2L_q_mfp\">Sequence2<\/Type>&gt; where Sequence1 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence2 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence1.Element == Sequence2.Element<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 681
          }
        ],
        "key.bodylength" : 64,
        "key.bodyoffset" : 903,
        "key.doc.column" : 13,
        "key.doc.comment" : "- Returns: A `ZipToLongest2Sequence` for the two given sequences, using `fill` and\n`fill` as default values if the other sequence is longer.",
        "key.doc.declaration" : "public func zip<Sequence1, Sequence2>(_ sequence1: Sequence1, _ sequence2: Sequence2, fill: Sequence1.Element) -> ZipToLongest2Sequence<Sequence1, Sequence2> where Sequence1 : Sequence, Sequence2 : Sequence, Sequence1.Element == Sequence2.Element",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift\" line=\"22\" column=\"13\"><Name>zip(_:_:fill:)<\/Name><USR>s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF<\/USR><Declaration>public func zip&lt;Sequence1, Sequence2&gt;(_ sequence1: Sequence1, _ sequence2: Sequence2, fill: Sequence1.Element) -&gt; ZipToLongest2Sequence&lt;Sequence1, Sequence2&gt; where Sequence1 : Sequence, Sequence2 : Sequence, Sequence1.Element == Sequence2.Element<\/Declaration><CommentParts><ResultDiscussion><Para>A <codeVoice>ZipToLongest2Sequence<\/codeVoice> for the two given sequences, using <codeVoice>fill<\/codeVoice> and <codeVoice>fill<\/codeVoice> as default values if the other sequence is longer.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 22,
        "key.doc.name" : "zip(_:_:fill:)",
        "key.doc.result_discussion" : [
          {
            "Para" : "A `ZipToLongest2Sequence` for the two given sequences, using `fill` and `fill` as default values if the other sequence is longer."
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 149,
        "key.docoffset" : 532,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>zip<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence1L_xmfp\"><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence2L_q_mfp\"><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence1<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence2<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures21ZipToLongest2SequenceV\">ZipToLongest2Sequence<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Sequence1 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence2 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence1.Element == Sequence2.Element<\/decl.generic_type_requirement><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 280,
        "key.name" : "zip(_:_:fill:)",
        "key.namelength" : 113,
        "key.nameoffset" : 693,
        "key.offset" : 688,
        "key.parsed_declaration" : "public func zip <Sequence1,Sequence2> (\n    _ sequence1: Sequence1,\n    _ sequence2: Sequence2,\n    fill: Sequence1.Element\n) -> ZipToLongest2Sequence<Sequence1,Sequence2>\n    where Sequence1.Element == Sequence2.Element",
        "key.parsed_scope.end" : 30,
        "key.parsed_scope.start" : 22,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF\">zip&lt;T, U, V&gt;(_: Tree&lt;T, T&gt;, _: Tree&lt;U, U&gt;, _: (T, U) -&gt; V) -&gt; Tree&lt;V, V&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF\">zip&lt;Sequence1, Sequence2, Sequence3&gt;(_: Sequence1, _: Sequence2, _: Sequence3) -&gt; Zip3Sequence&lt;Sequence1, Sequence2, Sequence3&gt; where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF\">zip(_:_:fill1:fill2:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF\">zip(_:_:_:fill1:fill2:fill3:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF\">zip(_:_:_:fill:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s3zipys12Zip2SequenceVyxq_Gx_q_tSTRzSTR_r0_lF\">zip(_:_:)<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Sequence1<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence1",
            "key.namelength" : 9,
            "key.nameoffset" : 698,
            "key.offset" : 698,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2> (",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.typename" : "Sequence1.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence1L_xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence2<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence2",
            "key.namelength" : 9,
            "key.nameoffset" : 708,
            "key.offset" : 708,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2> (",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.typename" : "Sequence2.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF9Sequence2L_q_mfp"
          }
        ],
        "key.typename" : "<Sequence1, Sequence2 where Sequence1 : Sequence, Sequence2 : Sequence, Sequence1.Element == Sequence2.Element> (Sequence1, Sequence2, fill: Sequence1.Element) -> ZipToLongest2Sequence<Sequence1, Sequence2>",
        "key.typeusr" : "$S__4fill14DataStructures21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztcSTRzSTR_AFQy_AGRSr0_luD",
        "key.usr" : "s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func zip&lt;Sequence1, Sequence2, Sequence3&gt;(_ sequence1: <Type usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\">Sequence1<\/Type>, _ sequence2: <Type usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\">Sequence2<\/Type>, _ sequence3: <Type usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\">Sequence3<\/Type>, fill1: <Type usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, fill2: <Type usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, fill3: <Type usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\">Sequence3<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>) -&gt; <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV\">ZipToLongest3Sequence<\/Type>&lt;<Type usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\">Sequence1<\/Type>, <Type usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\">Sequence2<\/Type>, <Type usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\">Sequence3<\/Type>&gt; where Sequence1 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence2 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence3 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1148
          }
        ],
        "key.bodylength" : 163,
        "key.bodyoffset" : 1430,
        "key.doc.column" : 13,
        "key.doc.comment" : "- Returns: A `ZipToLongest3Sequence` for the three given sequences, using `firstFill`,\n`secondFill`, and `thirdFill` as default values if the other sequences are longer.",
        "key.doc.declaration" : "public func zip<Sequence1, Sequence2, Sequence3>(_ sequence1: Sequence1, _ sequence2: Sequence2, _ sequence3: Sequence3, fill1: Sequence1.Element, fill2: Sequence2.Element, fill3: Sequence3.Element) -> ZipToLongest3Sequence<Sequence1, Sequence2, Sequence3> where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift\" line=\"34\" column=\"13\"><Name>zip(_:_:_:fill1:fill2:fill3:)<\/Name><USR>s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF<\/USR><Declaration>public func zip&lt;Sequence1, Sequence2, Sequence3&gt;(_ sequence1: Sequence1, _ sequence2: Sequence2, _ sequence3: Sequence3, fill1: Sequence1.Element, fill2: Sequence2.Element, fill3: Sequence3.Element) -&gt; ZipToLongest3Sequence&lt;Sequence1, Sequence2, Sequence3&gt; where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence<\/Declaration><CommentParts><ResultDiscussion><Para>A <codeVoice>ZipToLongest3Sequence<\/codeVoice> for the three given sequences, using <codeVoice>firstFill<\/codeVoice>, <codeVoice>secondFill<\/codeVoice>, and <codeVoice>thirdFill<\/codeVoice> as default values if the other sequences are longer.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 34,
        "key.doc.name" : "zip(_:_:_:fill1:fill2:fill3:)",
        "key.doc.result_discussion" : [
          {
            "Para" : "A `ZipToLongest3Sequence` for the three given sequences, using `firstFill`, `secondFill`, and `thirdFill` as default values if the other sequences are longer."
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 178,
        "key.docoffset" : 970,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>zip<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\"><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\"><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\"><decl.generic_type_param.name>Sequence3<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence1<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence2<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence3<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\">Sequence3<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill1<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill2<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill3<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\">Sequence3<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures21ZipToLongest3SequenceV\">ZipToLongest3Sequence<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp\">Sequence3<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Sequence1 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence2 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence3 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 439,
        "key.name" : "zip(_:_:_:fill1:fill2:fill3:)",
        "key.namelength" : 212,
        "key.nameoffset" : 1160,
        "key.offset" : 1155,
        "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (\n    _ sequence1: Sequence1,\n    _ sequence2: Sequence2,\n    _ sequence3: Sequence3,\n    fill1: Sequence1.Element,\n    fill2: Sequence2.Element,\n    fill3: Sequence3.Element\n) -> ZipToLongest3Sequence<Sequence1,Sequence2,Sequence3>",
        "key.parsed_scope.end" : 51,
        "key.parsed_scope.start" : 34,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF\">zip&lt;T, U, V&gt;(_: Tree&lt;T, T&gt;, _: Tree&lt;U, U&gt;, _: (T, U) -&gt; V) -&gt; Tree&lt;V, V&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF\">zip&lt;Sequence1, Sequence2, Sequence3&gt;(_: Sequence1, _: Sequence2, _: Sequence3) -&gt; Zip3Sequence&lt;Sequence1, Sequence2, Sequence3&gt; where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF\">zip(_:_:fill1:fill2:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF\">zip(_:_:fill:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF\">zip(_:_:_:fill:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s3zipys12Zip2SequenceVyxq_Gx_q_tSTRzSTR_r0_lF\">zip(_:_:)<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Sequence1<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence1",
            "key.namelength" : 9,
            "key.nameoffset" : 1165,
            "key.offset" : 1165,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 34,
            "key.typename" : "Sequence1.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence1L_xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence2<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence2",
            "key.namelength" : 9,
            "key.nameoffset" : 1175,
            "key.offset" : 1175,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 34,
            "key.typename" : "Sequence2.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence2L_q_mfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence3<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence3<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence3",
            "key.namelength" : 9,
            "key.nameoffset" : 1185,
            "key.offset" : 1185,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 34,
            "key.typename" : "Sequence3.Type",
            "key.typeusr" : "$Sq0_mD",
            "key.usr" : "s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF9Sequence3L_q0_mfp"
          }
        ],
        "key.typename" : "<Sequence1, Sequence2, Sequence3 where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence> (Sequence1, Sequence2, Sequence3, fill1: Sequence1.Element, fill2: Sequence2.Element, fill3: Sequence3.Element) -> ZipToLongest3Sequence<Sequence1, Sequence2, Sequence3>",
        "key.typeusr" : "$S___5fill15fill25fill314DataStructures21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAHQy_AHQy0_tcSTRzSTR_STR0_r1_luD",
        "key.usr" : "s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func zip&lt;Sequence1, Sequence2, Sequence3&gt;(_ sequence1: <Type usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence1L_xmfp\">Sequence1<\/Type>, _ sequence2: <Type usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence2L_q_mfp\">Sequence2<\/Type>, _ sequence3: <Type usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence3L_q0_mfp\">Sequence3<\/Type>, fill: <Type usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence1L_xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>) -&gt; <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV\">ZipToLongest3Sequence<\/Type>&lt;<Type usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence1L_xmfp\">Sequence1<\/Type>, <Type usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence2L_q_mfp\">Sequence2<\/Type>, <Type usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence3L_q0_mfp\">Sequence3<\/Type>&gt; where Sequence1 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence2 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence3 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence1.Element == Sequence2.Element, Sequence2.Element == Sequence3.Element<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1739
          }
        ],
        "key.bodylength" : 160,
        "key.bodyoffset" : 2049,
        "key.doc.column" : 13,
        "key.doc.comment" : "- Returns: A `ZipToLongest3Sequence` for the three given sequences, using `fill` as a default\nvalue if the other sequences are longer.",
        "key.doc.declaration" : "public func zip<Sequence1, Sequence2, Sequence3>(_ sequence1: Sequence1, _ sequence2: Sequence2, _ sequence3: Sequence3, fill: Sequence1.Element) -> ZipToLongest3Sequence<Sequence1, Sequence2, Sequence3> where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence, Sequence1.Element == Sequence2.Element, Sequence2.Element == Sequence3.Element",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift\" line=\"55\" column=\"13\"><Name>zip(_:_:_:fill:)<\/Name><USR>s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF<\/USR><Declaration>public func zip&lt;Sequence1, Sequence2, Sequence3&gt;(_ sequence1: Sequence1, _ sequence2: Sequence2, _ sequence3: Sequence3, fill: Sequence1.Element) -&gt; ZipToLongest3Sequence&lt;Sequence1, Sequence2, Sequence3&gt; where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence, Sequence1.Element == Sequence2.Element, Sequence2.Element == Sequence3.Element<\/Declaration><CommentParts><ResultDiscussion><Para>A <codeVoice>ZipToLongest3Sequence<\/codeVoice> for the three given sequences, using <codeVoice>fill<\/codeVoice> as a default value if the other sequences are longer.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
        "key.doc.line" : 55,
        "key.doc.name" : "zip(_:_:_:fill:)",
        "key.doc.result_discussion" : [
          {
            "Para" : "A `ZipToLongest3Sequence` for the three given sequences, using `fill` as a default value if the other sequences are longer."
          }
        ],
        "key.doc.type" : "Function",
        "key.doclength" : 143,
        "key.docoffset" : 1596,
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>zip<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence1L_xmfp\"><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence2L_q_mfp\"><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence3L_q0_mfp\"><decl.generic_type_param.name>Sequence3<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence1<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence2<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence3<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence3L_q0_mfp\">Sequence3<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:14DataStructures21ZipToLongest3SequenceV\">ZipToLongest3Sequence<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence1L_xmfp\">Sequence1<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence2L_q_mfp\">Sequence2<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence3L_q0_mfp\">Sequence3<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Sequence1 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence2 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence3 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence1.Element == Sequence2.Element<\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence2.Element == Sequence3.Element<\/decl.generic_type_requirement><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 464,
        "key.name" : "zip(_:_:_:fill:)",
        "key.namelength" : 151,
        "key.nameoffset" : 1751,
        "key.offset" : 1746,
        "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (\n    _ sequence1: Sequence1,\n    _ sequence2: Sequence2,\n    _ sequence3: Sequence3,\n    fill: Sequence1.Element\n) -> ZipToLongest3Sequence<Sequence1,Sequence2,Sequence3>\n    where Sequence1.Element == Sequence2.Element, Sequence2.Element == Sequence3.Element",
        "key.parsed_scope.end" : 71,
        "key.parsed_scope.start" : 55,
        "key.related_decls" : [
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zipyAA4TreeOyq0_q0_GADyxxG_ADyq_q_Gq0_x_q_tXEtr1_lF\">zip&lt;T, U, V&gt;(_: Tree&lt;T, T&gt;, _: Tree&lt;U, U&gt;, _: (T, U) -&gt; V) -&gt; Tree&lt;V, V&gt;<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zipyAA12Zip3SequenceVyxq_q0_Gx_q_q0_tSTRzSTR_STR0_r1_lF\">zip&lt;Sequence1, Sequence2, Sequence3&gt;(_: Sequence1, _: Sequence2, _: Sequence3) -&gt; Zip3Sequence&lt;Sequence1, Sequence2, Sequence3&gt; where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip__5fill15fill2AA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAHQy_tSTRzSTR_r0_lF\">zip(_:_:fill1:fill2:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip__4fillAA21ZipToLongest2SequenceVyxq_Gx_q_7ElementQztSTRzSTR_AGQy_AHRSr0_lF\">zip(_:_:fill:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:14DataStructures3zip___5fill15fill25fill3AA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAIQy_AIQy0_tSTRzSTR_STR0_r1_lF\">zip(_:_:_:fill1:fill2:fill3:)<\/RelatedName>"
          },
          {
            "key.annotated_decl" : "<RelatedName usr=\"s:s3zipys12Zip2SequenceVyxq_Gx_q_tSTRzSTR_r0_lF\">zip(_:_:)<\/RelatedName>"
          }
        ],
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Sequence1<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence1",
            "key.namelength" : 9,
            "key.nameoffset" : 1756,
            "key.offset" : 1756,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 55,
            "key.typename" : "Sequence1.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence1L_xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence2<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence2",
            "key.namelength" : 9,
            "key.nameoffset" : 1766,
            "key.offset" : 1766,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 55,
            "key.typename" : "Sequence2.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence2L_q_mfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence3<\/Declaration>",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence3<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 9,
            "key.name" : "Sequence3",
            "key.namelength" : 9,
            "key.nameoffset" : 1776,
            "key.offset" : 1776,
            "key.parsed_declaration" : "public func zip <Sequence1,Sequence2,Sequence3> (",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 55,
            "key.typename" : "Sequence3.Type",
            "key.typeusr" : "$Sq0_mD",
            "key.usr" : "s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF9Sequence3L_q0_mfp"
          }
        ],
        "key.typename" : "<Sequence1, Sequence2, Sequence3 where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence, Sequence1.Element == Sequence2.Element, Sequence2.Element == Sequence3.Element> (Sequence1, Sequence2, Sequence3, fill: Sequence1.Element) -> ZipToLongest3Sequence<Sequence1, Sequence2, Sequence3>",
        "key.typeusr" : "$S___4fill14DataStructures21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztcSTRzSTR_STR0_AFQy_AGRSAFQy0_AHRSr1_luD",
        "key.usr" : "s:14DataStructures3zip___4fillAA21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQztSTRzSTR_STR0_AGQy_AHRSAGQy0_AIRSr1_lF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct ZipToLongest2Sequence&lt;Sequence1, Sequence2&gt; : <Type usr=\"s:St\">IteratorProtocol<\/Type>, <Type usr=\"s:ST\">Sequence<\/Type> where Sequence1 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence2 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2376
          }
        ],
        "key.bodylength" : 791,
        "key.bodyoffset" : 2489,
        "key.doc.column" : 15,
        "key.doc.comment" : "Lazy sequence zipping two `Sequence` values together to the longest of the two sequences,\nfilling in the others with the given `fill1`, and `fill2` values.",
        "key.doc.declaration" : "public struct ZipToLongest2Sequence<Sequence1, Sequence2> : IteratorProtocol, Sequence where Sequence1 : Sequence, Sequence2 : Sequence",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift\" line=\"75\" column=\"15\"><Name>ZipToLongest2Sequence<\/Name><USR>s:14DataStructures21ZipToLongest2SequenceV<\/USR><Declaration>public struct ZipToLongest2Sequence&lt;Sequence1, Sequence2&gt; : IteratorProtocol, Sequence where Sequence1 : Sequence, Sequence2 : Sequence<\/Declaration><CommentParts><Abstract><Para>Lazy sequence zipping two <codeVoice>Sequence<\/codeVoice> values together to the longest of the two sequences, filling in the others with the given <codeVoice>fill1<\/codeVoice>, and <codeVoice>fill2<\/codeVoice> values.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 75,
        "key.doc.name" : "ZipToLongest2Sequence",
        "key.doc.type" : "Class",
        "key.doclength" : 164,
        "key.docoffset" : 2212,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 2461
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 2479
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ZipToLongest2Sequence<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp\"><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp\"><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:St\">IteratorProtocol<\/ref.protocol>, <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Sequence1 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence2 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "IteratorProtocol"
          },
          {
            "key.name" : "Sequence"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 898,
        "key.name" : "ZipToLongest2Sequence",
        "key.namelength" : 21,
        "key.nameoffset" : 2390,
        "key.offset" : 2383,
        "key.parsed_declaration" : "public struct ZipToLongest2Sequence <Sequence1: Sequence, Sequence2: Sequence>\n    : IteratorProtocol, Sequence",
        "key.parsed_scope.end" : 102,
        "key.parsed_scope.start" : 75,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Sequence1 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 2424
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Sequence"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 19,
            "key.name" : "Sequence1",
            "key.namelength" : 9,
            "key.nameoffset" : 2413,
            "key.offset" : 2413,
            "key.parsed_declaration" : "public struct ZipToLongest2Sequence <Sequence1: Sequence, Sequence2: Sequence>",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 75,
            "key.typename" : "Sequence1.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence2 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 2445
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Sequence"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 19,
            "key.name" : "Sequence2",
            "key.namelength" : 9,
            "key.nameoffset" : 2434,
            "key.offset" : 2434,
            "key.parsed_declaration" : "public struct ZipToLongest2Sequence <Sequence1: Sequence, Sequence2: Sequence>",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 75,
            "key.typename" : "Sequence2.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var iterator1: <Type usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST8IteratorQa\">Iterator<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2494
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>iterator1<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST8IteratorQa\">Iterator<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "iterator1",
            "key.namelength" : 9,
            "key.nameoffset" : 2506,
            "key.offset" : 2502,
            "key.parsed_declaration" : "private var iterator1: Sequence1.Iterator",
            "key.parsed_scope.end" : 78,
            "key.parsed_scope.start" : 78,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Sequence1.Iterator",
            "key.typeusr" : "$S8IteratorSTQzD",
            "key.usr" : "s:14DataStructures21ZipToLongest2SequenceV9iterator1023_E0F56B83E7F42A10BF07C9K8EE20A6E6LL8IteratorQzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var iterator2: <Type usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST8IteratorQa\">Iterator<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2540
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>iterator2<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST8IteratorQa\">Iterator<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "iterator2",
            "key.namelength" : 9,
            "key.nameoffset" : 2552,
            "key.offset" : 2548,
            "key.parsed_declaration" : "private var iterator2: Sequence2.Iterator",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 79,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Sequence2.Iterator",
            "key.typeusr" : "$S8IteratorSTQy_D",
            "key.usr" : "s:14DataStructures21ZipToLongest2SequenceV9iterator2023_E0F56B83E7F42A10BF07C9K8EE20A6E6LL8IteratorQy_vp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let fill1: <Type usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2586
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fill1<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "fill1",
            "key.namelength" : 5,
            "key.nameoffset" : 2598,
            "key.offset" : 2594,
            "key.parsed_declaration" : "private let fill1: Sequence1.Element",
            "key.parsed_scope.end" : 80,
            "key.parsed_scope.start" : 80,
            "key.typename" : "Sequence1.Element",
            "key.typeusr" : "$S7ElementSTQzD",
            "key.usr" : "s:14DataStructures21ZipToLongest2SequenceV5fill1023_E0F56B83E7F42A10BF07C9K8EE20A6E6LL7ElementQzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let fill2: <Type usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2627
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fill2<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "fill2",
            "key.namelength" : 5,
            "key.nameoffset" : 2639,
            "key.offset" : 2635,
            "key.parsed_declaration" : "private let fill2: Sequence2.Element",
            "key.parsed_scope.end" : 81,
            "key.parsed_scope.start" : 81,
            "key.typename" : "Sequence2.Element",
            "key.typeusr" : "$S7ElementSTQy_D",
            "key.usr" : "s:14DataStructures21ZipToLongest2SequenceV5fill2023_E0F56B83E7F42A10BF07C9K8EE20A6E6LL7ElementQy_vp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(_ sequence1: <Type usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp\">Sequence1<\/Type>, _ sequence2: <Type usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp\">Sequence2<\/Type>, fill1: <Type usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, fill2: <Type usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>)<\/Declaration>",
            "key.bodylength" : 159,
            "key.bodyoffset" : 2817,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence1<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence2<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill1<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill2<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 308,
            "key.name" : "init(_:_:fill1:fill2:)",
            "key.namelength" : 142,
            "key.nameoffset" : 2669,
            "key.offset" : 2669,
            "key.parsed_declaration" : "init(\n    _ sequence1: Sequence1,\n    _ sequence2: Sequence2,\n    fill1: Sequence1.Element,\n    fill2: Sequence2.Element\n)",
            "key.parsed_scope.end" : 94,
            "key.parsed_scope.start" : 83,
            "key.substructure" : [

            ],
            "key.typename" : "<Sequence1, Sequence2 where Sequence1 : Sequence, Sequence2 : Sequence> (ZipToLongest2Sequence<Sequence1, Sequence2>.Type) -> (Sequence1, Sequence2, Sequence1.Element, Sequence2.Element) -> ZipToLongest2Sequence<Sequence1, Sequence2>",
            "key.typeusr" : "$S__5fill15fill214DataStructures21ZipToLongest2SequenceVyxq_Gx_q_7ElementQzAGQy_tcD",
            "key.usr" : "s:14DataStructures21ZipToLongest2SequenceV__5fill15fill2ACyxq_Gx_q_7ElementQzAGQy_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func next() -&gt; (<Type usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, <Type usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>)?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 2990
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2983
              }
            ],
            "key.bodylength" : 223,
            "key.bodyoffset" : 3055,
            "key.doc.declaration" : "mutating func next() -> Self.Element?",
            "key.doc.discussion" : [
              {
                "Para" : "Repeatedly calling this method returns, in order, all the elements of the underlying sequence. As soon as the sequence has run out of elements, all subsequent calls return `nil`."
              },
              {
                "Para" : "You must not call this method if any other copy of this iterator has been advanced with a call to its `next()` method."
              },
              {
                "Para" : "The following example shows how an iterator can be used explicitly to emulate a `for`-`in` loop. First, retrieve a sequence’s iterator, and then call the iterator’s `next()` method until it returns `nil`."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>next()<\/Name><USR>s:St4next7ElementQzSgyF<\/USR><Declaration>mutating func next() -&gt; Self.Element?<\/Declaration><CommentParts><Abstract><Para>Advances to the next element and returns it, or <codeVoice>nil<\/codeVoice> if no next element exists.<\/Para><\/Abstract><ResultDiscussion><Para>The next element in the underlying sequence, if a next element exists; otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Para>Repeatedly calling this method returns, in order, all the elements of the underlying sequence. As soon as the sequence has run out of elements, all subsequent calls return <codeVoice>nil<\/codeVoice>.<\/Para><Para>You must not call this method if any other copy of this iterator has been advanced with a call to its <codeVoice>next()<\/codeVoice> method.<\/Para><Para>The following example shows how an iterator can be used explicitly to emulate a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop. First, retrieve a sequence’s iterator, and then call the iterator’s <codeVoice>next()<\/codeVoice> method until it returns <codeVoice>nil<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let numbers = [2, 3, 5, 7]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersIterator = numbers.makeIterator()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[while let num = numbersIterator.next() {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(num)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"5\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "next()",
            "key.doc.result_discussion" : [
              {
                "Para" : "The next element in the underlying sequence, if a next element exists; otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>next<\/decl.name>() -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest2SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 280,
            "key.name" : "next()",
            "key.namelength" : 6,
            "key.nameoffset" : 3004,
            "key.offset" : 2999,
            "key.overrides" : [
              {
                "key.usr" : "s:St4next7ElementQzSgyF"
              }
            ],
            "key.parsed_declaration" : "public mutating func next() -> (Sequence1.Element, Sequence2.Element)?",
            "key.parsed_scope.end" : 101,
            "key.parsed_scope.start" : 96,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let firstValue: Sequence1.Element?<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>firstValue<\/decl.name>: <decl.var.type>Sequence1.Element?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.name" : "firstValue",
                "key.namelength" : 10,
                "key.nameoffset" : 3068,
                "key.offset" : 3064,
                "key.parsed_declaration" : "let firstValue = iterator1.next()",
                "key.parsed_scope.end" : 97,
                "key.parsed_scope.start" : 97,
                "key.typename" : "Sequence1.Element?",
                "key.typeusr" : "$S7ElementSTQzSgD",
                "key.usr" : "s:14DataStructures21ZipToLongest2SequenceV4next7ElementQz_AEQy_tSgyF10firstValueL_AFSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let secondValue: Sequence2.Element?<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>secondValue<\/decl.name>: <decl.var.type>Sequence2.Element?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 34,
                "key.name" : "secondValue",
                "key.namelength" : 11,
                "key.nameoffset" : 3110,
                "key.offset" : 3106,
                "key.parsed_declaration" : "let secondValue = iterator2.next()",
                "key.parsed_scope.end" : 98,
                "key.parsed_scope.start" : 98,
                "key.typename" : "Sequence2.Element?",
                "key.typeusr" : "$S7ElementSTQy_SgD",
                "key.usr" : "s:14DataStructures21ZipToLongest2SequenceV4next7ElementQz_AEQy_tSgyF11secondValueL_AGSgvp"
              }
            ],
            "key.typename" : "<Sequence1, Sequence2 where Sequence1 : Sequence, Sequence2 : Sequence> (inout ZipToLongest2Sequence<Sequence1, Sequence2>) -> () -> (Sequence1.Element, Sequence2.Element)?",
            "key.typeusr" : "$S7ElementQz_AAQy_tSgycD",
            "key.usr" : "s:St4next7ElementQzSgyF"
          }
        ],
        "key.typename" : "ZipToLongest2Sequence<Sequence1, Sequence2>.Type",
        "key.typeusr" : "$S14DataStructures21ZipToLongest2SequenceVyxq_GmD",
        "key.usr" : "s:14DataStructures21ZipToLongest2SequenceV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct ZipToLongest3Sequence&lt;Sequence1, Sequence2, Sequence3&gt; : <Type usr=\"s:St\">IteratorProtocol<\/Type>, <Type usr=\"s:ST\">Sequence<\/Type> where Sequence1 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence2 : <Type usr=\"s:ST\">Sequence<\/Type>, Sequence3 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3460
          }
        ],
        "key.bodylength" : 1085,
        "key.bodyoffset" : 3594,
        "key.doc.column" : 15,
        "key.doc.comment" : "Lazy sequence zipping three `Sequence` values together to the longest of the three sequences,\nfilling in the others with the given `fill1`, `fill2`, and `fill3` values.",
        "key.doc.declaration" : "public struct ZipToLongest3Sequence<Sequence1, Sequence2, Sequence3> : IteratorProtocol, Sequence where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence",
        "key.doc.file" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift\" line=\"106\" column=\"15\"><Name>ZipToLongest3Sequence<\/Name><USR>s:14DataStructures21ZipToLongest3SequenceV<\/USR><Declaration>public struct ZipToLongest3Sequence&lt;Sequence1, Sequence2, Sequence3&gt; : IteratorProtocol, Sequence where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence<\/Declaration><CommentParts><Abstract><Para>Lazy sequence zipping three <codeVoice>Sequence<\/codeVoice> values together to the longest of the three sequences, filling in the others with the given <codeVoice>fill1<\/codeVoice>, <codeVoice>fill2<\/codeVoice>, and <codeVoice>fill3<\/codeVoice> values.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 106,
        "key.doc.name" : "ZipToLongest3Sequence",
        "key.doc.type" : "Class",
        "key.doclength" : 177,
        "key.docoffset" : 3283,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 3566
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 3584
          }
        ],
        "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ZipToLongest3Sequence<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp\"><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp\"><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp\"><decl.generic_type_param.name>Sequence3<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:St\">IteratorProtocol<\/ref.protocol>, <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Sequence1 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence2 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>Sequence3 : <ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "IteratorProtocol"
          },
          {
            "key.name" : "Sequence"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1213,
        "key.name" : "ZipToLongest3Sequence",
        "key.namelength" : 21,
        "key.nameoffset" : 3474,
        "key.offset" : 3467,
        "key.parsed_declaration" : "public struct ZipToLongest3Sequence <Sequence1: Sequence, Sequence2: Sequence, Sequence3: Sequence>\n    : IteratorProtocol, Sequence",
        "key.parsed_scope.end" : 140,
        "key.parsed_scope.start" : 106,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Sequence1 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 3508
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence1<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Sequence"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 19,
            "key.name" : "Sequence1",
            "key.namelength" : 9,
            "key.nameoffset" : 3497,
            "key.offset" : 3497,
            "key.parsed_declaration" : "public struct ZipToLongest3Sequence <Sequence1: Sequence, Sequence2: Sequence, Sequence3: Sequence>",
            "key.parsed_scope.end" : 106,
            "key.parsed_scope.start" : 106,
            "key.typename" : "Sequence1.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence2 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 3529
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence2<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Sequence"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 19,
            "key.name" : "Sequence2",
            "key.namelength" : 9,
            "key.nameoffset" : 3518,
            "key.offset" : 3518,
            "key.parsed_declaration" : "public struct ZipToLongest3Sequence <Sequence1: Sequence, Sequence2: Sequence, Sequence3: Sequence>",
            "key.parsed_scope.end" : 106,
            "key.parsed_scope.start" : 106,
            "key.typename" : "Sequence2.Type",
            "key.typeusr" : "$Sq_mD",
            "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Sequence3 : <Type usr=\"s:ST\">Sequence<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 3550
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Sequence3<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Sequence"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 19,
            "key.name" : "Sequence3",
            "key.namelength" : 9,
            "key.nameoffset" : 3539,
            "key.offset" : 3539,
            "key.parsed_declaration" : "public struct ZipToLongest3Sequence <Sequence1: Sequence, Sequence2: Sequence, Sequence3: Sequence>",
            "key.parsed_scope.end" : 106,
            "key.parsed_scope.start" : 106,
            "key.typename" : "Sequence3.Type",
            "key.typeusr" : "$Sq0_mD",
            "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var iterator1: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST8IteratorQa\">Iterator<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3599
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>iterator1<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST8IteratorQa\">Iterator<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "iterator1",
            "key.namelength" : 9,
            "key.nameoffset" : 3611,
            "key.offset" : 3607,
            "key.parsed_declaration" : "private var iterator1: Sequence1.Iterator",
            "key.parsed_scope.end" : 109,
            "key.parsed_scope.start" : 109,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Sequence1.Iterator",
            "key.typeusr" : "$S8IteratorSTQzD",
            "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV9iterator1023_E0F56B83E7F42A10BF07C9K8EE20A6E6LL8IteratorQzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var iterator2: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST8IteratorQa\">Iterator<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3645
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>iterator2<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST8IteratorQa\">Iterator<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "iterator2",
            "key.namelength" : 9,
            "key.nameoffset" : 3657,
            "key.offset" : 3653,
            "key.parsed_declaration" : "private var iterator2: Sequence2.Iterator",
            "key.parsed_scope.end" : 110,
            "key.parsed_scope.start" : 110,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Sequence2.Iterator",
            "key.typeusr" : "$S8IteratorSTQy_D",
            "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV9iterator2023_E0F56B83E7F42A10BF07C9K8EE20A6E6LL8IteratorQy_vp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var iterator3: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp\">Sequence3<\/Type>.<Type usr=\"s:ST8IteratorQa\">Iterator<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3691
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>iterator3<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp\">Sequence3<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST8IteratorQa\">Iterator<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "iterator3",
            "key.namelength" : 9,
            "key.nameoffset" : 3703,
            "key.offset" : 3699,
            "key.parsed_declaration" : "private var iterator3: Sequence3.Iterator",
            "key.parsed_scope.end" : 111,
            "key.parsed_scope.start" : 111,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Sequence3.Iterator",
            "key.typeusr" : "$S8IteratorSTQy0_D",
            "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV9iterator3023_E0F56B83E7F42A10BF07C9K8EE20A6E6LL8IteratorQy0_vp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let fill1: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3737
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fill1<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "fill1",
            "key.namelength" : 5,
            "key.nameoffset" : 3749,
            "key.offset" : 3745,
            "key.parsed_declaration" : "private let fill1: Sequence1.Element",
            "key.parsed_scope.end" : 112,
            "key.parsed_scope.start" : 112,
            "key.typename" : "Sequence1.Element",
            "key.typeusr" : "$S7ElementSTQzD",
            "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV5fill1023_E0F56B83E7F42A10BF07C9K8EE20A6E6LL7ElementQzvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let fill2: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3778
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fill2<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "fill2",
            "key.namelength" : 5,
            "key.nameoffset" : 3790,
            "key.offset" : 3786,
            "key.parsed_declaration" : "private let fill2: Sequence2.Element",
            "key.parsed_scope.end" : 113,
            "key.parsed_scope.start" : 113,
            "key.typename" : "Sequence2.Element",
            "key.typeusr" : "$S7ElementSTQy_D",
            "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV5fill2023_E0F56B83E7F42A10BF07C9K8EE20A6E6LL7ElementQy_vp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let fill3: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp\">Sequence3<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3819
              }
            ],
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fill3<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp\">Sequence3<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "fill3",
            "key.namelength" : 5,
            "key.nameoffset" : 3831,
            "key.offset" : 3827,
            "key.parsed_declaration" : "private let fill3: Sequence3.Element",
            "key.parsed_scope.end" : 114,
            "key.parsed_scope.start" : 114,
            "key.typename" : "Sequence3.Element",
            "key.typeusr" : "$S7ElementSTQy0_D",
            "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV5fill3023_E0F56B83E7F42A10BF07C9K8EE20A6E6LL7ElementQy0_vp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(_ sequence1: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp\">Sequence1<\/Type>, _ sequence2: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp\">Sequence2<\/Type>, _ sequence3: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp\">Sequence3<\/Type>, fill1: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, fill2: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, fill3: <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp\">Sequence3<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>)<\/Declaration>",
            "key.bodylength" : 236,
            "key.bodyoffset" : 4075,
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence1<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence2<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>sequence3<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp\">Sequence3<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill1<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill2<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fill3<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp\">Sequence3<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 451,
            "key.name" : "init(_:_:_:fill1:fill2:fill3:)",
            "key.namelength" : 208,
            "key.nameoffset" : 3861,
            "key.offset" : 3861,
            "key.parsed_declaration" : "init(\n    _ sequence1: Sequence1,\n    _ sequence2: Sequence2,\n    _ sequence3: Sequence3,\n    fill1: Sequence1.Element,\n    fill2: Sequence2.Element,\n    fill3: Sequence3.Element\n)",
            "key.parsed_scope.end" : 131,
            "key.parsed_scope.start" : 116,
            "key.substructure" : [

            ],
            "key.typename" : "<Sequence1, Sequence2, Sequence3 where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence> (ZipToLongest3Sequence<Sequence1, Sequence2, Sequence3>.Type) -> (Sequence1, Sequence2, Sequence3, Sequence1.Element, Sequence2.Element, Sequence3.Element) -> ZipToLongest3Sequence<Sequence1, Sequence2, Sequence3>",
            "key.typeusr" : "$S___5fill15fill25fill314DataStructures21ZipToLongest3SequenceVyxq_q0_Gx_q_q0_7ElementQzAHQy_AHQy0_tcD",
            "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV___5fill15fill25fill3ACyxq_q0_Gx_q_q0_7ElementQzAHQy_AHQy0_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func next() -&gt; (<Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp\">Sequence1<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp\">Sequence2<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>, <Type usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp\">Sequence3<\/Type>.<Type usr=\"s:ST7ElementQa\">Element<\/Type>)?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 4325
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4318
              }
            ],
            "key.bodylength" : 268,
            "key.bodyoffset" : 4409,
            "key.doc.declaration" : "mutating func next() -> Self.Element?",
            "key.doc.discussion" : [
              {
                "Para" : "Repeatedly calling this method returns, in order, all the elements of the underlying sequence. As soon as the sequence has run out of elements, all subsequent calls return `nil`."
              },
              {
                "Para" : "You must not call this method if any other copy of this iterator has been advanced with a call to its `next()` method."
              },
              {
                "Para" : "The following example shows how an iterator can be used explicitly to emulate a `for`-`in` loop. First, retrieve a sequence’s iterator, and then call the iterator’s `next()` method until it returns `nil`."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>next()<\/Name><USR>s:St4next7ElementQzSgyF<\/USR><Declaration>mutating func next() -&gt; Self.Element?<\/Declaration><CommentParts><Abstract><Para>Advances to the next element and returns it, or <codeVoice>nil<\/codeVoice> if no next element exists.<\/Para><\/Abstract><ResultDiscussion><Para>The next element in the underlying sequence, if a next element exists; otherwise, <codeVoice>nil<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Para>Repeatedly calling this method returns, in order, all the elements of the underlying sequence. As soon as the sequence has run out of elements, all subsequent calls return <codeVoice>nil<\/codeVoice>.<\/Para><Para>You must not call this method if any other copy of this iterator has been advanced with a call to its <codeVoice>next()<\/codeVoice> method.<\/Para><Para>The following example shows how an iterator can be used explicitly to emulate a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop. First, retrieve a sequence’s iterator, and then call the iterator’s <codeVoice>next()<\/codeVoice> method until it returns <codeVoice>nil<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let numbers = [2, 3, 5, 7]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersIterator = numbers.makeIterator()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[while let num = numbersIterator.next() {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(num)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"5\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "next()",
            "key.doc.result_discussion" : [
              {
                "Para" : "The next element in the underlying sequence, if a next element exists; otherwise, `nil`."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>next<\/decl.name>() -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence1xmfp\">Sequence1<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence2q_mfp\">Sequence2<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:14DataStructures21ZipToLongest3SequenceV9Sequence3q0_mfp\">Sequence3<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element<\/ref.associatedtype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 344,
            "key.name" : "next()",
            "key.namelength" : 6,
            "key.nameoffset" : 4339,
            "key.offset" : 4334,
            "key.overrides" : [
              {
                "key.usr" : "s:St4next7ElementQzSgyF"
              }
            ],
            "key.parsed_declaration" : "public mutating func next() -> (Sequence1.Element, Sequence2.Element, Sequence3.Element)?",
            "key.parsed_scope.end" : 139,
            "key.parsed_scope.start" : 133,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let value1: Sequence1.Element?<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>value1<\/decl.name>: <decl.var.type>Sequence1.Element?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 29,
                "key.name" : "value1",
                "key.namelength" : 6,
                "key.nameoffset" : 4422,
                "key.offset" : 4418,
                "key.parsed_declaration" : "let value1 = iterator1.next()",
                "key.parsed_scope.end" : 134,
                "key.parsed_scope.start" : 134,
                "key.typename" : "Sequence1.Element?",
                "key.typeusr" : "$S7ElementSTQzSgD",
                "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV4next7ElementQz_AEQy_AEQy0_tSgyF6value1L_AFSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let value2: Sequence2.Element?<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>value2<\/decl.name>: <decl.var.type>Sequence2.Element?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 29,
                "key.name" : "value2",
                "key.namelength" : 6,
                "key.nameoffset" : 4460,
                "key.offset" : 4456,
                "key.parsed_declaration" : "let value2 = iterator2.next()",
                "key.parsed_scope.end" : 135,
                "key.parsed_scope.start" : 135,
                "key.typename" : "Sequence2.Element?",
                "key.typeusr" : "$S7ElementSTQy_SgD",
                "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV4next7ElementQz_AEQy_AEQy0_tSgyF6value2L_AGSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let value3: Sequence3.Element?<\/Declaration>",
                "key.filepath" : "\/Users\/BEAN\/dn-m\/Frameworks\/Structure\/Sources\/DataStructures\/ZipToLongest.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>value3<\/decl.name>: <decl.var.type>Sequence3.Element?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 29,
                "key.name" : "value3",
                "key.namelength" : 6,
                "key.nameoffset" : 4498,
                "key.offset" : 4494,
                "key.parsed_declaration" : "let value3 = iterator3.next()",
                "key.parsed_scope.end" : 136,
                "key.parsed_scope.start" : 136,
                "key.typename" : "Sequence3.Element?",
                "key.typeusr" : "$S7ElementSTQy0_SgD",
                "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV4next7ElementQz_AEQy_AEQy0_tSgyF6value3L_AHSgvp"
              }
            ],
            "key.typename" : "<Sequence1, Sequence2, Sequence3 where Sequence1 : Sequence, Sequence2 : Sequence, Sequence3 : Sequence> (inout ZipToLongest3Sequence<Sequence1, Sequence2, Sequence3>) -> () -> (Sequence1.Element, Sequence2.Element, Sequence3.Element)?",
            "key.typeusr" : "$S7ElementQz_AAQy_AAQy0_tSgycD",
            "key.usr" : "s:St4next7ElementQzSgyF"
          }
        ],
        "key.typename" : "ZipToLongest3Sequence<Sequence1, Sequence2, Sequence3>.Type",
        "key.typeusr" : "$S14DataStructures21ZipToLongest3SequenceVyxq_q0_GmD",
        "key.usr" : "s:14DataStructures21ZipToLongest3SequenceV"
      }
    ]
  }
}]
